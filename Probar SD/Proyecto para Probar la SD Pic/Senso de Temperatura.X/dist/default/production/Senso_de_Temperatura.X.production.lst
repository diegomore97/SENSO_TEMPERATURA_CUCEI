

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Oct 10 04:03:11 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66  0000                     
    67                           ; Version 2.10
    68                           ; Generated 31/07/2019 GMT
    69                           ; 
    70                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F4550 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     
   102                           	psect	nvBANK1
   103  000154                     __pnvBANK1:
   104                           	opt callstack 0
   105  000154                     _Direccion:
   106                           	opt callstack 0
   107  000154                     	ds	4
   108  0000                     _ADRESL	set	4035
   109  0000                     _ADRESH	set	4036
   110  0000                     _TRISA	set	3986
   111  0000                     _ADCON2	set	4032
   112  0000                     _ADCON1	set	4033
   113  0000                     _ADCON0bits	set	4034
   114  0000                     _SSPSTATbits	set	4039
   115  0000                     _SSPBUF	set	4041
   116  0000                     _PIR1bits	set	3998
   117  0000                     _SSPCON1	set	4038
   118  0000                     _SSPSTAT	set	4039
   119  0000                     _TRISAbits	set	3986
   120  0000                     _TRISBbits	set	3987
   121  0000                     _TXREG	set	4013
   122  0000                     _RCSTAbits	set	4011
   123  0000                     _TXSTAbits	set	4012
   124  0000                     _SPBRG	set	4015
   125  0000                     _TRISCbits	set	3988
   126  0000                     _CS	set	31778
   127  0000                     _LATD3	set	31843
   128  0000                     _LATD2	set	31842
   129  0000                     _LATD7	set	31847
   130  0000                     _LATD6	set	31846
   131  0000                     _LATD5	set	31845
   132  0000                     _LATD4	set	31844
   133  0000                     _TRMT	set	32097
   134                           
   135                           	psect	smallconst
   136  000800                     __psmallconst:
   137                           	opt callstack 0
   138  000800  00                 	db	0
   139  000801                     STR_1:
   140  000801  4F                 	db	79	;'O'
   141  000802  4B                 	db	75	;'K'
   142  000803  20                 	db	32
   143  000804  49                 	db	73	;'I'
   144  000805  6E                 	db	110	;'n'
   145  000806  69                 	db	105	;'i'
   146  000807  63                 	db	99	;'c'
   147  000808  69                 	db	105	;'i'
   148  000809  61                 	db	97	;'a'
   149  00080A  6C                 	db	108	;'l'
   150  00080B  69                 	db	105	;'i'
   151  00080C  7A                 	db	122	;'z'
   152  00080D  61                 	db	97	;'a'
   153  00080E  64                 	db	100	;'d'
   154  00080F  61                 	db	97	;'a'
   155  000810  20                 	db	32
   156  000811  65                 	db	101	;'e'
   157  000812  6E                 	db	110	;'n'
   158  000813  20                 	db	32
   159  000814  6D                 	db	109	;'m'
   160  000815  6F                 	db	111	;'o'
   161  000816  64                 	db	100	;'d'
   162  000817  6F                 	db	111	;'o'
   163  000818  20                 	db	32
   164  000819  53                 	db	83	;'S'
   165  00081A  50                 	db	80	;'P'
   166  00081B  49                 	db	73	;'I'
   167  00081C  0A                 	db	10
   168  00081D  00                 	db	0
   169  00081E                     STR_2:
   170  00081E  4E                 	db	78	;'N'
   171  00081F  4F                 	db	79	;'O'
   172  000820  4B                 	db	75	;'K'
   173  000821  20                 	db	32
   174  000822  69                 	db	105	;'i'
   175  000823  6E                 	db	110	;'n'
   176  000824  69                 	db	105	;'i'
   177  000825  63                 	db	99	;'c'
   178  000826  69                 	db	105	;'i'
   179  000827  61                 	db	97	;'a'
   180  000828  6C                 	db	108	;'l'
   181  000829  69                 	db	105	;'i'
   182  00082A  7A                 	db	122	;'z'
   183  00082B  61                 	db	97	;'a'
   184  00082C  63                 	db	99	;'c'
   185  00082D  69                 	db	105	;'i'
   186  00082E  6F                 	db	111	;'o'
   187  00082F  6E                 	db	110	;'n'
   188  000830  0A                 	db	10
   189  000831  00                 	db	0
   190  000832                     STR_5:
   191  000832  4F                 	db	79	;'O'
   192  000833  4B                 	db	75	;'K'
   193  000834  20                 	db	32
   194  000835  74                 	db	116	;'t'
   195  000836  65                 	db	101	;'e'
   196  000837  72                 	db	114	;'r'
   197  000838  6D                 	db	109	;'m'
   198  000839  69                 	db	105	;'i'
   199  00083A  6E                 	db	110	;'n'
   200  00083B  65                 	db	101	;'e'
   201  00083C  20                 	db	32
   202  00083D  64                 	db	100	;'d'
   203  00083E  65                 	db	101	;'e'
   204  00083F  20                 	db	32
   205  000840  6C                 	db	108	;'l'
   206  000841  65                 	db	101	;'e'
   207  000842  65                 	db	101	;'e'
   208  000843  72                 	db	114	;'r'
   209  000844  0A                 	db	10
   210  000845  00                 	db	0
   211  000846                     STR_6:
   212  000846  4E                 	db	78	;'N'
   213  000847  4F                 	db	79	;'O'
   214  000848  4B                 	db	75	;'K'
   215  000849  20                 	db	32
   216  00084A  6E                 	db	110	;'n'
   217  00084B  6F                 	db	111	;'o'
   218  00084C  20                 	db	32
   219  00084D  70                 	db	112	;'p'
   220  00084E  75                 	db	117	;'u'
   221  00084F  64                 	db	100	;'d'
   222  000850  65                 	db	101	;'e'
   223  000851  20                 	db	32
   224  000852  6C                 	db	108	;'l'
   225  000853  65                 	db	101	;'e'
   226  000854  65                 	db	101	;'e'
   227  000855  72                 	db	114	;'r'
   228  000856  0A                 	db	10
   229  000857  00                 	db	0
   230  000858                     STR_7:
   231  000858  54                 	db	84	;'T'
   232  000859  45                 	db	69	;'E'
   233  00085A  4D                 	db	77	;'M'
   234  00085B  50                 	db	80	;'P'
   235  00085C  3D                 	db	61	;'='
   236  00085D  20                 	db	32
   237  00085E  25                 	db	37
   238  00085F  2E                 	db	46
   239  000860  32                 	db	50	;'2'
   240  000861  66                 	db	102	;'f'
   241  000862  00                 	db	0
   242  000863                     STR_8:
   243  000863  25                 	db	37
   244  000864  2E                 	db	46
   245  000865  32                 	db	50	;'2'
   246  000866  66                 	db	102	;'f'
   247  000867  0A                 	db	10
   248  000868  00                 	db	0
   249  000869                     STR_9:
   250  000869  49                 	db	73	;'I'
   251  00086A  4E                 	db	78	;'N'
   252  00086B  46                 	db	70	;'F'
   253  00086C  00                 	db	0
   254  00086D                     STR_13:
   255  00086D  4E                 	db	78	;'N'
   256  00086E  41                 	db	65	;'A'
   257  00086F  4E                 	db	78	;'N'
   258  000870  00                 	db	0
   259  000871                     STR_10:
   260  000871  69                 	db	105	;'i'
   261  000872  6E                 	db	110	;'n'
   262  000873  66                 	db	102	;'f'
   263  000874  00                 	db	0
   264  000875                     STR_14:
   265  000875  6E                 	db	110	;'n'
   266  000876  61                 	db	97	;'a'
   267  000877  6E                 	db	110	;'n'
   268  000878  00                 	db	0
   269  000879                     STR_3:
   270  000879  4F                 	db	79	;'O'
   271  00087A  4B                 	db	75	;'K'
   272  00087B  0A                 	db	10
   273  00087C  00                 	db	0
   274  00087D                     STR_17:
   275  00087D  6C                 	db	108	;'l'
   276  00087E  66                 	db	102	;'f'
   277  00087F  00                 	db	0
   278  000880                     STR_4:
   279  000880  46                 	db	70	;'F'
   280  000881  0A                 	db	10
   281  000882  00                 	db	0
   282  0000                     
   283                           ; #config settings
   284  000883  00                 	db	0	; dummy byte at the end
   285  0000                     
   286                           	psect	cinit
   287  003D6E                     __pcinit:
   288                           	opt callstack 0
   289  003D6E                     start_initialization:
   290                           	opt callstack 0
   291  003D6E                     __initialization:
   292                           	opt callstack 0
   293                           
   294                           ; Clear objects allocated to BANK1 (84 bytes)
   295  003D6E  EE01  F000         	lfsr	0,__pbssBANK1
   296  003D72  0E54               	movlw	84
   297  003D74                     clear_0:
   298  003D74  6AEE               	clrf	postinc0,c
   299  003D76  06E8               	decf	wreg,f,c
   300  003D78  E1FD               	bnz	clear_0
   301                           
   302                           ; Clear objects allocated to BANK0 (17 bytes)
   303  003D7A  EE00  F0EE         	lfsr	0,__pbssBANK0
   304  003D7E  0E11               	movlw	17
   305  003D80                     clear_1:
   306  003D80  6AEE               	clrf	postinc0,c
   307  003D82  06E8               	decf	wreg,f,c
   308  003D84  E1FD               	bnz	clear_1
   309  003D86                     end_of_initialization:
   310                           	opt callstack 0
   311  003D86                     __end_of__initialization:
   312                           	opt callstack 0
   313  003D86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   314  003D88  6EF8               	movwf	tblptru,c
   315  003D8A  0100               	movlb	0
   316  003D8C  EF37  F018         	goto	_main	;jump to C main() function
   317                           
   318                           	psect	bssBANK0
   319  0000EE                     __pbssBANK0:
   320                           	opt callstack 0
   321  0000EE                     ___fpclassifyf@F463:
   322                           	opt callstack 0
   323  0000EE                     	ds	4
   324  0000F2                     _nout:
   325                           	opt callstack 0
   326  0000F2                     	ds	2
   327  0000F4                     _width:
   328                           	opt callstack 0
   329  0000F4                     	ds	2
   330  0000F6                     _prec:
   331                           	opt callstack 0
   332  0000F6                     	ds	2
   333  0000F8                     _flags:
   334                           	opt callstack 0
   335  0000F8                     	ds	2
   336  0000FA                     _x:
   337                           	opt callstack 0
   338  0000FA                     	ds	2
   339  0000FC                     _Respuesta:
   340                           	opt callstack 0
   341  0000FC                     	ds	2
   342  0000FE                     _i:
   343                           	opt callstack 0
   344  0000FE                     	ds	1
   345                           
   346                           	psect	bssBANK1
   347  000100                     __pbssBANK1:
   348                           	opt callstack 0
   349  000100                     floorf@F524:
   350                           	opt callstack 0
   351  000100                     	ds	4
   352  000104                     _dbuf:
   353                           	opt callstack 0
   354  000104                     	ds	80
   355                           
   356                           	psect	cstackBANK0
   357  000060                     __pcstackBANK0:
   358                           	opt callstack 0
   359  000060                     efgtoa@ou:
   360                           	opt callstack 0
   361                           
   362                           ; 4 bytes @ 0x0
   363  000060                     	ds	4
   364  000064                     _efgtoa$771:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x4
   368  000064                     	ds	2
   369  000066                     _efgtoa$772:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x6
   373  000066                     	ds	2
   374  000068                     _efgtoa$777:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x8
   378  000068                     	ds	2
   379  00006A                     _efgtoa$781:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0xA
   383  00006A                     	ds	2
   384  00006C                     _efgtoa$782:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0xC
   388  00006C                     	ds	2
   389  00006E                     _efgtoa$783:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0xE
   393  00006E                     	ds	2
   394  000070                     efgtoa@t:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x10
   398  000070                     	ds	2
   399  000072                     efgtoa@pp:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x12
   403  000072                     	ds	2
   404  000074                     efgtoa@m:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x14
   408  000074                     	ds	2
   409  000076                     efgtoa@ne:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x16
   413  000076                     	ds	2
   414  000078                     efgtoa@d:
   415                           	opt callstack 0
   416                           
   417                           ; 2 bytes @ 0x18
   418  000078                     	ds	2
   419  00007A                     efgtoa@sign:
   420                           	opt callstack 0
   421                           
   422                           ; 2 bytes @ 0x1A
   423  00007A                     	ds	2
   424  00007C                     efgtoa@p:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x1C
   428  00007C                     	ds	2
   429  00007E                     efgtoa@nmode:
   430                           	opt callstack 0
   431                           
   432                           ; 1 bytes @ 0x1E
   433  00007E                     	ds	1
   434  00007F                     efgtoa@w:
   435                           	opt callstack 0
   436                           
   437                           ; 2 bytes @ 0x1F
   438  00007F                     	ds	2
   439  000081                     efgtoa@mode:
   440                           	opt callstack 0
   441                           
   442                           ; 1 bytes @ 0x21
   443  000081                     	ds	1
   444  000082                     efgtoa@h:
   445                           	opt callstack 0
   446                           
   447                           ; 4 bytes @ 0x22
   448  000082                     	ds	4
   449  000086                     efgtoa@l:
   450                           	opt callstack 0
   451                           
   452                           ; 4 bytes @ 0x26
   453  000086                     	ds	4
   454  00008A                     efgtoa@i:
   455                           	opt callstack 0
   456                           
   457                           ; 2 bytes @ 0x2A
   458  00008A                     	ds	2
   459  00008C                     efgtoa@g:
   460                           	opt callstack 0
   461                           
   462                           ; 4 bytes @ 0x2C
   463  00008C                     	ds	4
   464  000090                     efgtoa@e:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x30
   468  000090                     	ds	2
   469  000092                     efgtoa@n:
   470                           	opt callstack 0
   471                           
   472                           ; 2 bytes @ 0x32
   473  000092                     	ds	2
   474  000094                     efgtoa@u:
   475                           	opt callstack 0
   476                           
   477                           ; 4 bytes @ 0x34
   478  000094                     	ds	6
   479  00009A                     sprintf@ap:
   480                           	opt callstack 0
   481                           
   482                           ; 2 bytes @ 0x3A
   483  00009A                     	ds	2
   484  00009C                     sprintf@f:
   485                           	opt callstack 0
   486                           
   487                           ; 6 bytes @ 0x3C
   488  00009C                     	ds	6
   489  0000A2                     ??_main:
   490                           
   491                           ; 1 bytes @ 0x42
   492  0000A2                     	ds	2
   493  0000A4                     main@datoSalida:
   494                           	opt callstack 0
   495                           
   496                           ; 50 bytes @ 0x44
   497  0000A4                     	ds	50
   498  0000D6                     main@buffer:
   499                           	opt callstack 0
   500                           
   501                           ; 20 bytes @ 0x76
   502  0000D6                     	ds	20
   503  0000EA                     main@temperatura:
   504                           	opt callstack 0
   505                           
   506                           ; 4 bytes @ 0x8A
   507  0000EA                     	ds	4
   508                           
   509                           	psect	cstackCOMRAM
   510  000001                     __pcstackCOMRAM:
   511                           	opt callstack 0
   512  000001                     ?_strlen:
   513                           	opt callstack 0
   514  000001                     ?___fpclassifyf:
   515                           	opt callstack 0
   516  000001                     ?_isupper:
   517                           	opt callstack 0
   518  000001                     ?_isdigit:
   519                           	opt callstack 0
   520  000001                     ?_strncmp:
   521                           	opt callstack 0
   522  000001                     ?_isspace:
   523                           	opt callstack 0
   524  000001                     ?___wmul:
   525                           	opt callstack 0
   526  000001                     ?___awdiv:
   527                           	opt callstack 0
   528  000001                     ?___awmod:
   529                           	opt callstack 0
   530  000001                     ?___fladd:
   531                           	opt callstack 0
   532  000001                     ?___fldiv:
   533                           	opt callstack 0
   534  000001                     ?___flmul:
   535                           	opt callstack 0
   536  000001                     ?___aldiv:
   537                           	opt callstack 0
   538  000001                     ?___flneg:
   539                           	opt callstack 0
   540  000001                     ?___fltol:
   541                           	opt callstack 0
   542  000001                     ?___xxtofl:
   543                           	opt callstack 0
   544  000001                     UART_write@dato:
   545                           	opt callstack 0
   546  000001                     Lcd_Port@a:
   547                           	opt callstack 0
   548  000001                     SPI_Write@x:
   549                           	opt callstack 0
   550  000001                     ___wmul@multiplier:
   551                           	opt callstack 0
   552  000001                     ___awdiv@dividend:
   553                           	opt callstack 0
   554  000001                     ___awmod@dividend:
   555                           	opt callstack 0
   556  000001                     isdigit@c:
   557                           	opt callstack 0
   558  000001                     isspace@c:
   559                           	opt callstack 0
   560  000001                     isupper@c:
   561                           	opt callstack 0
   562  000001                     fputc@c:
   563                           	opt callstack 0
   564  000001                     strcpy@dest:
   565                           	opt callstack 0
   566  000001                     strlen@s:
   567                           	opt callstack 0
   568  000001                     strncmp@_l:
   569                           	opt callstack 0
   570  000001                     ___aldiv@dividend:
   571                           	opt callstack 0
   572  000001                     ___fleq@ff1:
   573                           	opt callstack 0
   574  000001                     ___flneg@f1:
   575                           	opt callstack 0
   576  000001                     ___fltol@f1:
   577                           	opt callstack 0
   578  000001                     ___fladd@b:
   579                           	opt callstack 0
   580  000001                     ___fldiv@b:
   581                           	opt callstack 0
   582  000001                     ___flmul@b:
   583                           	opt callstack 0
   584  000001                     ___xxtofl@val:
   585                           	opt callstack 0
   586  000001                     ___fpclassifyf@x:
   587                           	opt callstack 0
   588                           
   589                           ; 4 bytes @ 0x0
   590  000001                     	ds	1
   591  000002                     ??_Lcd_Cmd:
   592  000002                     Lcd_Write_Char@temp:
   593                           	opt callstack 0
   594  000002                     UART_printf@cadena:
   595                           	opt callstack 0
   596  000002                     Comando@Direccion:
   597                           	opt callstack 0
   598                           
   599                           ; 4 bytes @ 0x1
   600  000002                     	ds	1
   601  000003                     ??_isupper:
   602  000003                     ??_isdigit:
   603  000003                     ??_isspace:
   604  000003                     Lcd_Cmd@a:
   605                           	opt callstack 0
   606  000003                     Lcd_Write_Char@y:
   607                           	opt callstack 0
   608  000003                     ___wmul@multiplicand:
   609                           	opt callstack 0
   610  000003                     ___awdiv@divisor:
   611                           	opt callstack 0
   612  000003                     ___awmod@divisor:
   613                           	opt callstack 0
   614  000003                     fputc@fp:
   615                           	opt callstack 0
   616  000003                     strcpy@src:
   617                           	opt callstack 0
   618  000003                     strlen@a:
   619                           	opt callstack 0
   620  000003                     strncmp@_r:
   621                           	opt callstack 0
   622                           
   623                           ; 2 bytes @ 0x2
   624  000003                     	ds	1
   625  000004                     ??_Lcd_Init:
   626  000004                     Lcd_Set_Cursor@b:
   627                           	opt callstack 0
   628  000004                     Lcd_Write_Char@a:
   629                           	opt callstack 0
   630                           
   631                           ; 1 bytes @ 0x3
   632  000004                     	ds	1
   633  000005                     ??_fputc:
   634  000005                     ??___fpclassifyf:
   635  000005                     ??_strcpy:
   636  000005                     ??___fltol:
   637  000005                     ??___xxtofl:
   638  000005                     Lcd_Set_Cursor@a:
   639                           	opt callstack 0
   640  000005                     ___awdiv@counter:
   641                           	opt callstack 0
   642  000005                     ___awmod@counter:
   643                           	opt callstack 0
   644  000005                     Lcd_Write_String@a:
   645                           	opt callstack 0
   646  000005                     ___wmul@product:
   647                           	opt callstack 0
   648  000005                     strncmp@n:
   649                           	opt callstack 0
   650  000005                     ___aldiv@divisor:
   651                           	opt callstack 0
   652  000005                     ___fleq@ff2:
   653                           	opt callstack 0
   654  000005                     ___fladd@a:
   655                           	opt callstack 0
   656  000005                     ___fldiv@a:
   657                           	opt callstack 0
   658  000005                     ___flmul@a:
   659                           	opt callstack 0
   660                           
   661                           ; 4 bytes @ 0x4
   662  000005                     	ds	1
   663  000006                     Lcd_Set_Cursor@z:
   664                           	opt callstack 0
   665  000006                     Comando@CRC:
   666                           	opt callstack 0
   667  000006                     ___awdiv@sign:
   668                           	opt callstack 0
   669  000006                     ___awmod@sign:
   670                           	opt callstack 0
   671                           
   672                           ; 1 bytes @ 0x5
   673  000006                     	ds	1
   674  000007                     ??_strncmp:
   675  000007                     ?_tolower:
   676                           	opt callstack 0
   677  000007                     Lcd_Set_Cursor@y:
   678                           	opt callstack 0
   679  000007                     Comando@NumeroComando:
   680                           	opt callstack 0
   681  000007                     _isspace$1303:
   682                           	opt callstack 0
   683  000007                     Lcd_Write_String@i:
   684                           	opt callstack 0
   685  000007                     ___awdiv@quotient:
   686                           	opt callstack 0
   687  000007                     strcpy@s:
   688                           	opt callstack 0
   689  000007                     tolower@c:
   690                           	opt callstack 0
   691                           
   692                           ; 2 bytes @ 0x6
   693  000007                     	ds	1
   694  000008                     ??_Leer:
   695  000008                     ??_Escribir:
   696  000008                     ?_atoi:
   697                           	opt callstack 0
   698  000008                     Lcd_Set_Cursor@temp:
   699                           	opt callstack 0
   700  000008                     atoi@s:
   701                           	opt callstack 0
   702  000008                     strncmp@l:
   703                           	opt callstack 0
   704                           
   705                           ; 2 bytes @ 0x7
   706  000008                     	ds	1
   707  000009                     ??_tolower:
   708  000009                     ??___fladd:
   709  000009                     ??___fldiv:
   710  000009                     ??___flmul:
   711  000009                     ??___fleq:
   712  000009                     ___aldiv@counter:
   713                           	opt callstack 0
   714  000009                     ___fltol@sign1:
   715                           	opt callstack 0
   716  000009                     ___xxtofl@sign:
   717                           	opt callstack 0
   718  000009                     ___fpclassifyf@e:
   719                           	opt callstack 0
   720  000009                     strcpy@d:
   721                           	opt callstack 0
   722                           
   723                           ; 2 bytes @ 0x8
   724  000009                     	ds	1
   725  00000A                     ??_atoi:
   726  00000A                     Leer@com51:
   727                           	opt callstack 0
   728  00000A                     ___aldiv@sign:
   729                           	opt callstack 0
   730  00000A                     ___fltol@exp1:
   731                           	opt callstack 0
   732  00000A                     ___xxtofl@exp:
   733                           	opt callstack 0
   734  00000A                     fputs@s:
   735                           	opt callstack 0
   736  00000A                     strncmp@r:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0x9
   740  00000A                     	ds	1
   741  00000B                     ___aldiv@quotient:
   742                           	opt callstack 0
   743  00000B                     ___xxtofl@arg:
   744                           	opt callstack 0
   745  00000B                     ___fpclassifyf@u:
   746                           	opt callstack 0
   747                           
   748                           ; 4 bytes @ 0xA
   749  00000B                     	ds	1
   750  00000C                     Escribir@Caracter:
   751                           	opt callstack 0
   752  00000C                     fputs@fp:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0xB
   756  00000C                     	ds	1
   757  00000D                     Escribir@com58:
   758                           	opt callstack 0
   759  00000D                     ___fladd@signs:
   760                           	opt callstack 0
   761  00000D                     ___flmul@sign:
   762                           	opt callstack 0
   763  00000D                     _tolower$1388:
   764                           	opt callstack 0
   765  00000D                     ___fldiv@rem:
   766                           	opt callstack 0
   767                           
   768                           ; 4 bytes @ 0xC
   769  00000D                     	ds	1
   770  00000E                     Escribir@yaescribi:
   771                           	opt callstack 0
   772  00000E                     ___fladd@aexp:
   773                           	opt callstack 0
   774  00000E                     fputs@c:
   775                           	opt callstack 0
   776  00000E                     atoi@neg:
   777                           	opt callstack 0
   778  00000E                     ___flmul@grs:
   779                           	opt callstack 0
   780                           
   781                           ; 4 bytes @ 0xD
   782  00000E                     	ds	1
   783  00000F                     ___fladd@bexp:
   784                           	opt callstack 0
   785  00000F                     escribeSD@cadena:
   786                           	opt callstack 0
   787  00000F                     fputs@i:
   788                           	opt callstack 0
   789  00000F                     UART_init@BAUD:
   790                           	opt callstack 0
   791                           
   792                           ; 4 bytes @ 0xE
   793  00000F                     	ds	1
   794  000010                     ___fladd@grs:
   795                           	opt callstack 0
   796  000010                     _atoi$1272:
   797                           	opt callstack 0
   798                           
   799                           ; 2 bytes @ 0xF
   800  000010                     	ds	1
   801  000011                     ?_pad:
   802                           	opt callstack 0
   803  000011                     ___fldiv@sign:
   804                           	opt callstack 0
   805  000011                     pad@fp:
   806                           	opt callstack 0
   807                           
   808                           ; 2 bytes @ 0x10
   809  000011                     	ds	1
   810  000012                     ___flmul@aexp:
   811                           	opt callstack 0
   812  000012                     ___fldiv@new_exp:
   813                           	opt callstack 0
   814  000012                     _atoi$1274:
   815                           	opt callstack 0
   816                           
   817                           ; 2 bytes @ 0x11
   818  000012                     	ds	1
   819  000013                     ___flmul@bexp:
   820                           	opt callstack 0
   821  000013                     pad@buf:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x12
   825  000013                     	ds	1
   826  000014                     _atoi$1273:
   827                           	opt callstack 0
   828  000014                     ___fldiv@grs:
   829                           	opt callstack 0
   830  000014                     ___flmul@prod:
   831                           	opt callstack 0
   832                           
   833                           ; 4 bytes @ 0x13
   834  000014                     	ds	1
   835  000015                     pad@p:
   836                           	opt callstack 0
   837  000015                     atoi@n:
   838                           	opt callstack 0
   839                           
   840                           ; 2 bytes @ 0x14
   841  000015                     	ds	2
   842  000017                     ??_pad:
   843  000017                     _UART_init$1621:
   844                           	opt callstack 0
   845                           
   846                           ; 4 bytes @ 0x16
   847  000017                     	ds	1
   848  000018                     ___fldiv@bexp:
   849                           	opt callstack 0
   850  000018                     pad@i:
   851                           	opt callstack 0
   852  000018                     ___flmul@temp:
   853                           	opt callstack 0
   854                           
   855                           ; 2 bytes @ 0x17
   856  000018                     	ds	1
   857  000019                     ___fldiv@aexp:
   858                           	opt callstack 0
   859                           
   860                           ; 1 bytes @ 0x18
   861  000019                     	ds	1
   862  00001A                     ?_floorf:
   863                           	opt callstack 0
   864  00001A                     ?___flsub:
   865                           	opt callstack 0
   866  00001A                     dameTemperaturaLm35@temperatura:
   867                           	opt callstack 0
   868  00001A                     pad@w:
   869                           	opt callstack 0
   870  00001A                     ___flge@ff1:
   871                           	opt callstack 0
   872  00001A                     ___flsub@b:
   873                           	opt callstack 0
   874  00001A                     floorf@x:
   875                           	opt callstack 0
   876                           
   877                           ; 4 bytes @ 0x19
   878  00001A                     	ds	2
   879  00001C                     ??_dameTemperaturaLm35:
   880                           
   881                           ; 1 bytes @ 0x1B
   882  00001C                     	ds	2
   883  00001E                     ??_floorf:
   884  00001E                     ___flge@ff2:
   885                           	opt callstack 0
   886  00001E                     ___flsub@a:
   887                           	opt callstack 0
   888                           
   889                           ; 4 bytes @ 0x1D
   890  00001E                     	ds	4
   891  000022                     ??___flge:
   892                           
   893                           ; 1 bytes @ 0x21
   894  000022                     	ds	2
   895  000024                     floorf@m:
   896                           	opt callstack 0
   897                           
   898                           ; 4 bytes @ 0x23
   899  000024                     	ds	4
   900  000028                     floorf@e:
   901                           	opt callstack 0
   902                           
   903                           ; 2 bytes @ 0x27
   904  000028                     	ds	2
   905  00002A                     floorf@u:
   906                           	opt callstack 0
   907                           
   908                           ; 4 bytes @ 0x29
   909  00002A                     	ds	4
   910  00002E                     ?_efgtoa:
   911                           	opt callstack 0
   912  00002E                     efgtoa@fp:
   913                           	opt callstack 0
   914                           
   915                           ; 2 bytes @ 0x2D
   916  00002E                     	ds	2
   917  000030                     efgtoa@f:
   918                           	opt callstack 0
   919                           
   920                           ; 4 bytes @ 0x2F
   921  000030                     	ds	4
   922  000034                     efgtoa@c:
   923                           	opt callstack 0
   924                           
   925                           ; 1 bytes @ 0x33
   926  000034                     	ds	1
   927  000035                     ??_efgtoa:
   928                           
   929                           ; 1 bytes @ 0x34
   930  000035                     	ds	5
   931  00003A                     ?_vfpfcnvrt:
   932                           	opt callstack 0
   933  00003A                     vfpfcnvrt@fp:
   934                           	opt callstack 0
   935                           
   936                           ; 2 bytes @ 0x39
   937  00003A                     	ds	2
   938  00003C                     vfpfcnvrt@fmt:
   939                           	opt callstack 0
   940                           
   941                           ; 2 bytes @ 0x3B
   942  00003C                     	ds	2
   943  00003E                     vfpfcnvrt@ap:
   944                           	opt callstack 0
   945                           
   946                           ; 2 bytes @ 0x3D
   947  00003E                     	ds	2
   948  000040                     ??_vfpfcnvrt:
   949                           
   950                           ; 1 bytes @ 0x3F
   951  000040                     	ds	4
   952  000044                     _vfpfcnvrt$797:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x43
   956  000044                     	ds	2
   957  000046                     _vfpfcnvrt$801:
   958                           	opt callstack 0
   959                           
   960                           ; 2 bytes @ 0x45
   961  000046                     	ds	2
   962  000048                     vfpfcnvrt@f:
   963                           	opt callstack 0
   964                           
   965                           ; 4 bytes @ 0x47
   966  000048                     	ds	4
   967  00004C                     vfpfcnvrt@ct:
   968                           	opt callstack 0
   969                           
   970                           ; 3 bytes @ 0x4B
   971  00004C                     	ds	3
   972  00004F                     vfpfcnvrt@c:
   973                           	opt callstack 0
   974                           
   975                           ; 1 bytes @ 0x4E
   976  00004F                     	ds	1
   977  000050                     ?_vfprintf:
   978                           	opt callstack 0
   979  000050                     vfprintf@fp:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x4F
   983  000050                     	ds	2
   984  000052                     vfprintf@fmt:
   985                           	opt callstack 0
   986                           
   987                           ; 2 bytes @ 0x51
   988  000052                     	ds	2
   989  000054                     vfprintf@ap:
   990                           	opt callstack 0
   991                           
   992                           ; 2 bytes @ 0x53
   993  000054                     	ds	2
   994  000056                     vfprintf@cfmt:
   995                           	opt callstack 0
   996                           
   997                           ; 2 bytes @ 0x55
   998  000056                     	ds	2
   999  000058                     ?_sprintf:
  1000                           	opt callstack 0
  1001  000058                     sprintf@s:
  1002                           	opt callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x57
  1005  000058                     	ds	2
  1006  00005A                     sprintf@fmt:
  1007                           	opt callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x59
  1010  00005A                     	ds	6
  1011  000060                     
  1012                           ; 1 bytes @ 0x5F
  1013 ;;
  1014 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1015 ;;
  1016 ;; *************** function _main *****************
  1017 ;; Defined at:
  1018 ;;		line 37 in file "main.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  datoSalida     50   68[BANK0 ] unsigned char [50]
  1023 ;;  buffer         20  118[BANK0 ] unsigned char [20]
  1024 ;;  temperatura     4  138[BANK0 ] float 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1034 ;;      Params:         0       0       0       0       0       0       0       0       0
  1035 ;;      Locals:         0      74       0       0       0       0       0       0       0
  1036 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1037 ;;      Totals:         0      76       0       0       0       0       0       0       0
  1038 ;;Total ram usage:       76 bytes
  1039 ;; Hardware stack levels required when called:    8
  1040 ;; This function calls:
  1041 ;;		_Lcd_Clear
  1042 ;;		_Lcd_Init
  1043 ;;		_Lcd_Set_Cursor
  1044 ;;		_Lcd_Write_String
  1045 ;;		_SPI_Init
  1046 ;;		_UART_init
  1047 ;;		_configurarAdc
  1048 ;;		_dameTemperaturaLm35
  1049 ;;		_escribeSD
  1050 ;;		_sprintf
  1051 ;; This function is called by:
  1052 ;;		Startup code after reset
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text0
  1057  00306E                     __ptext0:
  1058                           	opt callstack 0
  1059  00306E                     _main:
  1060                           	opt callstack 23
  1061  00306E                     
  1062                           ;main.c: 39:     float temperatura;;main.c: 40:     char buffer [20];;main.c: 41:     ch
      +                          ar datoSalida[50];;main.c: 43:     Direccion = 4608;
  1063  00306E  0E00               	movlw	0
  1064  003070  0101               	movlb	1	; () banked
  1065  003072  6F54               	movwf	_Direccion& (0+255),b
  1066  003074  0E12               	movlw	18
  1067  003076  6F55               	movwf	(_Direccion+1)& (0+255),b
  1068  003078  0E00               	movlw	0
  1069  00307A  6F56               	movwf	(_Direccion+2)& (0+255),b
  1070  00307C  0E00               	movlw	0
  1071  00307E  6F57               	movwf	(_Direccion+3)& (0+255),b
  1072  003080                     
  1073                           ; BSR set to: 1
  1074                           ;main.c: 45:     configurarAdc();
  1075  003080  EC02  F01F         	call	_configurarAdc	;wreg free
  1076  003084                     
  1077                           ;main.c: 46:     SPI_Init();
  1078  003084  ECEE  F01E         	call	_SPI_Init	;wreg free
  1079  003088                     
  1080                           ;main.c: 47:     Lcd_Init();
  1081  003088  ECCA  F01B         	call	_Lcd_Init	;wreg free
  1082  00308C                     
  1083                           ;main.c: 48:     UART_init(9600);
  1084  00308C  0E80               	movlw	128
  1085  00308E  6E0F               	movwf	UART_init@BAUD^0,c
  1086  003090  0E25               	movlw	37
  1087  003092  6E10               	movwf	(UART_init@BAUD+1)^0,c
  1088  003094  0E00               	movlw	0
  1089  003096  6E11               	movwf	(UART_init@BAUD+2)^0,c
  1090  003098  0E00               	movlw	0
  1091  00309A  6E12               	movwf	(UART_init@BAUD+3)^0,c
  1092  00309C  EC03  F01C         	call	_UART_init	;wreg free
  1093  0030A0                     l4584:
  1094                           
  1095                           ;main.c: 52:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1096  0030A0  0E06               	movlw	6
  1097  0030A2  0100               	movlb	0	; () banked
  1098  0030A4  6FA3               	movwf	(??_main+1)& (0+255),b
  1099  0030A6  0E13               	movlw	19
  1100  0030A8  6FA2               	movwf	??_main& (0+255),b
  1101  0030AA  0EAD               	movlw	173
  1102  0030AC                     u5437:
  1103  0030AC  2EE8               	decfsz	wreg,f,c
  1104  0030AE  D7FE               	bra	u5437
  1105  0030B0  2FA2               	decfsz	??_main& (0+255),f,b
  1106  0030B2  D7FC               	bra	u5437
  1107  0030B4  2FA3               	decfsz	(??_main+1)& (0+255),f,b
  1108  0030B6  D7FA               	bra	u5437
  1109  0030B8  D000               	nop2	
  1110  0030BA                     
  1111                           ;main.c: 54:         dameTemperaturaLm35(&temperatura);
  1112  0030BA  0EEA               	movlw	low main@temperatura
  1113  0030BC  6E1A               	movwf	dameTemperaturaLm35@temperatura^0,c
  1114  0030BE  0E00               	movlw	high main@temperatura
  1115  0030C0  6E1B               	movwf	(dameTemperaturaLm35@temperatura+1)^0,c
  1116  0030C2  EC2E  F01B         	call	_dameTemperaturaLm35	;wreg free
  1117  0030C6                     
  1118                           ;main.c: 56:         Lcd_Clear();
  1119  0030C6  EC0A  F01F         	call	_Lcd_Clear	;wreg free
  1120  0030CA                     
  1121                           ;main.c: 57:         Lcd_Set_Cursor(2, 1);
  1122  0030CA  0E01               	movlw	1
  1123  0030CC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1124  0030CE  0E02               	movlw	2
  1125  0030D0  EC3B  F01C         	call	_Lcd_Set_Cursor
  1126  0030D4                     
  1127                           ;main.c: 58:         sprintf(buffer, "TEMP= %.2f", temperatura);
  1128  0030D4  0ED6               	movlw	low main@buffer
  1129  0030D6  6E58               	movwf	sprintf@s^0,c
  1130  0030D8  0E00               	movlw	high main@buffer
  1131  0030DA  6E59               	movwf	(sprintf@s+1)^0,c
  1132  0030DC  0E58               	movlw	low STR_7
  1133  0030DE  6E5A               	movwf	sprintf@fmt^0,c
  1134  0030E0  0E08               	movlw	high STR_7
  1135  0030E2  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1136  0030E4  C0EA  F05C         	movff	main@temperatura,?_sprintf+4
  1137  0030E8  C0EB  F05D         	movff	main@temperatura+1,?_sprintf+5
  1138  0030EC  C0EC  F05E         	movff	main@temperatura+2,?_sprintf+6
  1139  0030F0  C0ED  F05F         	movff	main@temperatura+3,?_sprintf+7
  1140  0030F4  EC2B  F01D         	call	_sprintf	;wreg free
  1141  0030F8                     
  1142                           ;main.c: 59:         Lcd_Write_String(buffer);
  1143  0030F8  0ED6               	movlw	low main@buffer
  1144  0030FA  6E05               	movwf	Lcd_Write_String@a^0,c
  1145  0030FC  0E00               	movlw	high main@buffer
  1146  0030FE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1147  003100  ECC2  F01D         	call	_Lcd_Write_String	;wreg free
  1148  003104                     
  1149                           ;main.c: 61:         sprintf(datoSalida, "%.2f\n", temperatura);
  1150  003104  0EA4               	movlw	low main@datoSalida
  1151  003106  6E58               	movwf	sprintf@s^0,c
  1152  003108  0E00               	movlw	high main@datoSalida
  1153  00310A  6E59               	movwf	(sprintf@s+1)^0,c
  1154  00310C  0E63               	movlw	low STR_8
  1155  00310E  6E5A               	movwf	sprintf@fmt^0,c
  1156  003110  0E08               	movlw	high STR_8
  1157  003112  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1158  003114  C0EA  F05C         	movff	main@temperatura,?_sprintf+4
  1159  003118  C0EB  F05D         	movff	main@temperatura+1,?_sprintf+5
  1160  00311C  C0EC  F05E         	movff	main@temperatura+2,?_sprintf+6
  1161  003120  C0ED  F05F         	movff	main@temperatura+3,?_sprintf+7
  1162  003124  EC2B  F01D         	call	_sprintf	;wreg free
  1163  003128                     
  1164                           ;main.c: 62:         escribeSD(datoSalida);
  1165  003128  0EA4               	movlw	low main@datoSalida
  1166  00312A  6E0F               	movwf	escribeSD@cadena^0,c
  1167  00312C  0E00               	movlw	high main@datoSalida
  1168  00312E  6E10               	movwf	(escribeSD@cadena+1)^0,c
  1169  003130  ECC8  F019         	call	_escribeSD	;wreg free
  1170  003134  EF50  F018         	goto	l4584
  1171  003138  EF00  F000         	goto	start
  1172  00313C                     __end_of_main:
  1173                           	opt callstack 0
  1174                           
  1175 ;; *************** function _sprintf *****************
  1176 ;; Defined at:
  1177 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  s               2   87[COMRAM] PTR unsigned char 
  1180 ;;		 -> main@datoSalida(50), main@buffer(20), 
  1181 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1182 ;;		 -> STR_8(6), STR_7(11), 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  f               6   60[BANK0 ] struct _IO_FILE
  1185 ;;  ap              2   58[BANK0 ] PTR void [1]
  1186 ;;		 -> ?_sprintf(2), 
  1187 ;;  ret             2    0        int 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  2   87[COMRAM] int 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1197 ;;      Params:         8       0       0       0       0       0       0       0       0
  1198 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1200 ;;      Totals:         8      10       0       0       0       0       0       0       0
  1201 ;;Total ram usage:       18 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    7
  1204 ;; This function calls:
  1205 ;;		_vfprintf
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text1
  1212  003A56                     __ptext1:
  1213                           	opt callstack 0
  1214  003A56                     _sprintf:
  1215                           	opt callstack 23
  1216  003A56  0E5C               	movlw	low (?_sprintf+4)
  1217  003A58  0100               	movlb	0	; () banked
  1218  003A5A  6F9A               	movwf	sprintf@ap& (0+255),b
  1219  003A5C  0E00               	movlw	high (?_sprintf+4)
  1220  003A5E  6F9B               	movwf	(sprintf@ap+1)& (0+255),b
  1221  003A60  C058  F09C         	movff	sprintf@s,sprintf@f
  1222  003A64  C059  F09D         	movff	sprintf@s+1,sprintf@f+1
  1223  003A68                     
  1224                           ; BSR set to: 0
  1225  003A68  0E00               	movlw	0
  1226  003A6A  6F9F               	movwf	(sprintf@f+3)& (0+255),b
  1227  003A6C  0E00               	movlw	0
  1228  003A6E  6F9E               	movwf	(sprintf@f+2)& (0+255),b
  1229  003A70                     
  1230                           ; BSR set to: 0
  1231  003A70  0E00               	movlw	0
  1232  003A72  6FA1               	movwf	(sprintf@f+5)& (0+255),b
  1233  003A74  0E00               	movlw	0
  1234  003A76  6FA0               	movwf	(sprintf@f+4)& (0+255),b
  1235  003A78                     
  1236                           ; BSR set to: 0
  1237  003A78  0E9C               	movlw	low sprintf@f
  1238  003A7A  6E50               	movwf	vfprintf@fp^0,c
  1239  003A7C  0E00               	movlw	high sprintf@f
  1240  003A7E  6E51               	movwf	(vfprintf@fp+1)^0,c
  1241  003A80  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1242  003A84  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1243  003A88  0E9A               	movlw	low sprintf@ap
  1244  003A8A  6E54               	movwf	vfprintf@ap^0,c
  1245  003A8C  0E00               	movlw	high sprintf@ap
  1246  003A8E  6E55               	movwf	(vfprintf@ap+1)^0,c
  1247  003A90  EC6E  F01C         	call	_vfprintf	;wreg free
  1248  003A94  0100               	movlb	0	; () banked
  1249  003A96  519E               	movf	(sprintf@f+2)& (0+255),w,b
  1250  003A98  2458               	addwf	sprintf@s^0,w,c
  1251  003A9A  6ED9               	movwf	fsr2l,c
  1252  003A9C  519F               	movf	(sprintf@f+3)& (0+255),w,b
  1253  003A9E  2059               	addwfc	(sprintf@s+1)^0,w,c
  1254  003AA0  6EDA               	movwf	fsr2h,c
  1255  003AA2  0E00               	movlw	0
  1256  003AA4  6EDF               	movwf	indf2,c
  1257  003AA6                     
  1258                           ; BSR set to: 0
  1259  003AA6  0012               	return		;funcret
  1260  003AA8                     __end_of_sprintf:
  1261                           	opt callstack 0
  1262                           
  1263 ;; *************** function _vfprintf *****************
  1264 ;; Defined at:
  1265 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1268 ;;		 -> sprintf@f(6), 
  1269 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1270 ;;		 -> STR_8(6), STR_7(11), 
  1271 ;;  ap              2   83[COMRAM] PTR PTR void 
  1272 ;;		 -> sprintf@ap(2), 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1275 ;;		 -> STR_8(6), STR_7(11), 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  2   79[COMRAM] int 
  1278 ;; Registers used:
  1279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1285 ;;      Params:         6       0       0       0       0       0       0       0       0
  1286 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1288 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1289 ;;Total ram usage:        8 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:    6
  1292 ;; This function calls:
  1293 ;;		_vfpfcnvrt
  1294 ;; This function is called by:
  1295 ;;		_sprintf
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text2
  1300  0038DC                     __ptext2:
  1301                           	opt callstack 0
  1302  0038DC                     _vfprintf:
  1303                           	opt callstack 23
  1304  0038DC                     
  1305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1306  0038DC  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1307  0038E0  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1308  0038E4                     
  1309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1310  0038E4  0E00               	movlw	0
  1311  0038E6  0100               	movlb	0	; () banked
  1312  0038E8  6FF3               	movwf	(_nout+1)& (0+255),b
  1313  0038EA  0E00               	movlw	0
  1314  0038EC  6FF2               	movwf	_nout& (0+255),b
  1315                           
  1316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1317  0038EE  EF8C  F01C         	goto	l4348
  1318  0038F2                     l4346:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1322  0038F2  C050  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1323  0038F6  C051  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1324  0038FA  0E56               	movlw	low vfprintf@cfmt
  1325  0038FC  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1326  0038FE  0E00               	movlw	high vfprintf@cfmt
  1327  003900  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1328  003902  C054  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1329  003906  C055  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1330  00390A  EC7A  F00C         	call	_vfpfcnvrt	;wreg free
  1331  00390E  503A               	movf	?_vfpfcnvrt^0,w,c
  1332  003910  0100               	movlb	0	; () banked
  1333  003912  27F2               	addwf	_nout& (0+255),f,b
  1334  003914  503B               	movf	(?_vfpfcnvrt+1)^0,w,c
  1335  003916  23F3               	addwfc	(_nout+1)& (0+255),f,b
  1336  003918                     l4348:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1340  003918  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1341  00391C  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1342  003920                     	if	0	;tblptru may be non-zero
  1343  003920                     	endif
  1344  003920                     	if	0	;tblptru may be non-zero
  1345  003920                     	endif
  1346  003920  0008               	tblrd		*
  1347  003922  50F5               	movf	tablat,w,c
  1348  003924  0900               	iorlw	0
  1349  003926  A4D8               	btfss	status,2,c
  1350  003928  EF98  F01C         	goto	u5181
  1351  00392C  EF9A  F01C         	goto	u5180
  1352  003930                     u5181:
  1353  003930  EF79  F01C         	goto	l4346
  1354  003934                     u5180:
  1355  003934                     
  1356                           ; BSR set to: 0
  1357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1358  003934  C0F2  F050         	movff	_nout,?_vfprintf
  1359  003938  C0F3  F051         	movff	_nout+1,?_vfprintf+1
  1360  00393C                     
  1361                           ; BSR set to: 0
  1362  00393C  0012               	return		;funcret
  1363  00393E                     __end_of_vfprintf:
  1364                           	opt callstack 0
  1365                           
  1366 ;; *************** function _vfpfcnvrt *****************
  1367 ;; Defined at:
  1368 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1371 ;;		 -> sprintf@f(6), 
  1372 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1373 ;;		 -> vfprintf@cfmt(2), 
  1374 ;;  ap              2   61[COMRAM] PTR PTR void 
  1375 ;;		 -> sprintf@ap(2), 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  llu             8    0        unsigned long long 
  1378 ;;  ll              8    0        long long 
  1379 ;;  f               4   71[COMRAM] long long 
  1380 ;;  ct              3   75[COMRAM] unsigned char [3]
  1381 ;;  vp              3    0        PTR void 
  1382 ;;  cp              3    0        PTR unsigned char 
  1383 ;;  i               2    0        int 
  1384 ;;  done            2    0        int 
  1385 ;;  c               1   78[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  2   57[COMRAM] int 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         6       0       0       0       0       0       0       0       0
  1396 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1398 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:       22 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    5
  1402 ;; This function calls:
  1403 ;;		_atoi
  1404 ;;		_efgtoa
  1405 ;;		_fputc
  1406 ;;		_isdigit
  1407 ;;		_isupper
  1408 ;;		_strncmp
  1409 ;;		_tolower
  1410 ;; This function is called by:
  1411 ;;		_vfprintf
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text3
  1416  0018F4                     __ptext3:
  1417                           	opt callstack 0
  1418  0018F4                     _vfpfcnvrt:
  1419                           	opt callstack 23
  1420  0018F4                     
  1421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1422  0018F4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1423  0018F8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1424  0018FC  CFDE FFF6          	movff	postinc2,tblptrl
  1425  001900  CFDD FFF7          	movff	postdec2,tblptrh
  1426  001904                     	if	0	;tblptru may be non-zero
  1427  001904                     	endif
  1428  001904                     	if	0	;tblptru may be non-zero
  1429  001904                     	endif
  1430  001904  0008               	tblrd		*
  1431  001906  50F5               	movf	tablat,w,c
  1432  001908  0A25               	xorlw	37
  1433  00190A  A4D8               	btfss	status,2,c
  1434  00190C  EF8A  F00C         	goto	u4901
  1435  001910  EF8C  F00C         	goto	u4900
  1436  001914                     u4901:
  1437  001914  EF8E  F00E         	goto	l4178
  1438  001918                     u4900:
  1439  001918                     
  1440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1441  001918  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1442  00191C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1443  001920  2ADE               	incf	postinc2,f,c
  1444  001922  0E00               	movlw	0
  1445  001924  22DD               	addwfc	postdec2,f,c
  1446  001926                     
  1447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1448  001926  0E00               	movlw	0
  1449  001928  0100               	movlb	0	; () banked
  1450  00192A  6FF5               	movwf	(_width+1)& (0+255),b
  1451  00192C  0E00               	movlw	0
  1452  00192E  6FF4               	movwf	_width& (0+255),b
  1453  001930  C0F4  F0F8         	movff	_width,_flags
  1454  001934  C0F5  F0F9         	movff	_width+1,_flags+1
  1455  001938                     
  1456                           ; BSR set to: 0
  1457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1458  001938  69F6               	setf	_prec& (0+255),b
  1459  00193A  69F7               	setf	(_prec+1)& (0+255),b
  1460  00193C                     
  1461                           ; BSR set to: 0
  1462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  1463  00193C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1464  001940  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1465  001944  CFDE FFF6          	movff	postinc2,tblptrl
  1466  001948  CFDD FFF7          	movff	postdec2,tblptrh
  1467  00194C                     	if	0	;tblptru may be non-zero
  1468  00194C                     	endif
  1469  00194C                     	if	0	;tblptru may be non-zero
  1470  00194C                     	endif
  1471  00194C  0008               	tblrd		*
  1472  00194E  50F5               	movf	tablat,w,c
  1473  001950  0A2E               	xorlw	46
  1474  001952  A4D8               	btfss	status,2,c
  1475  001954  EFAE  F00C         	goto	u4911
  1476  001958  EFB0  F00C         	goto	u4910
  1477  00195C                     u4911:
  1478  00195C  EF2D  F00D         	goto	l4124
  1479  001960                     u4910:
  1480  001960                     
  1481                           ; BSR set to: 0
  1482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  1483  001960  0E00               	movlw	0
  1484  001962  6FF7               	movwf	(_prec+1)& (0+255),b
  1485  001964  0E00               	movlw	0
  1486  001966  6FF6               	movwf	_prec& (0+255),b
  1487  001968                     
  1488                           ; BSR set to: 0
  1489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  1490  001968  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1491  00196C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1492  001970  2ADE               	incf	postinc2,f,c
  1493  001972  0E00               	movlw	0
  1494  001974  22DD               	addwfc	postdec2,f,c
  1495  001976                     
  1496                           ; BSR set to: 0
  1497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  1498  001976  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1499  00197A  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1500  00197E  CFDE FFF6          	movff	postinc2,tblptrl
  1501  001982  CFDD FFF7          	movff	postdec2,tblptrh
  1502  001986                     	if	0	;tblptru may be non-zero
  1503  001986                     	endif
  1504  001986                     	if	0	;tblptru may be non-zero
  1505  001986                     	endif
  1506  001986  0008               	tblrd		*
  1507  001988  50F5               	movf	tablat,w,c
  1508  00198A  0A2A               	xorlw	42
  1509  00198C  A4D8               	btfss	status,2,c
  1510  00198E  EFCB  F00C         	goto	u4921
  1511  001992  EFCD  F00C         	goto	u4920
  1512  001996                     u4921:
  1513  001996  EFEA  F00C         	goto	l4114
  1514  00199A                     u4920:
  1515  00199A                     
  1516                           ; BSR set to: 0
  1517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  1518  00199A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1519  00199E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1520  0019A2  2ADE               	incf	postinc2,f,c
  1521  0019A4  0E00               	movlw	0
  1522  0019A6  22DD               	addwfc	postdec2,f,c
  1523                           
  1524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  1525  0019A8  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1526  0019AC  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1527  0019B0  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1528  0019B4  0E02               	movlw	2
  1529  0019B6  26DE               	addwf	postinc2,f,c
  1530  0019B8  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1531  0019BC  0E00               	movlw	0
  1532  0019BE  22DD               	addwfc	postdec2,f,c
  1533  0019C0  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1534  0019C4  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1535  0019C8  CFDE F0F6          	movff	postinc2,_prec
  1536  0019CC  CFDD F0F7          	movff	postdec2,_prec+1
  1537                           
  1538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  1539  0019D0  EF2D  F00D         	goto	l4124
  1540  0019D4                     l4114:
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  1544  0019D4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1545  0019D8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1546  0019DC  CFDE F008          	movff	postinc2,atoi@s
  1547  0019E0  CFDD F009          	movff	postdec2,atoi@s+1
  1548  0019E4  EC6F  F014         	call	_atoi	;wreg free
  1549  0019E8  C008  F0F6         	movff	?_atoi,_prec
  1550  0019EC  C009  F0F7         	movff	?_atoi+1,_prec+1
  1551                           
  1552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1553  0019F0  EF01  F00D         	goto	l4118
  1554  0019F4                     l4116:
  1555                           
  1556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  1557  0019F4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1558  0019F8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1559  0019FC  2ADE               	incf	postinc2,f,c
  1560  0019FE  0E00               	movlw	0
  1561  001A00  22DD               	addwfc	postdec2,f,c
  1562  001A02                     l4118:
  1563  001A02  0ED0               	movlw	208
  1564  001A04  6E40               	movwf	??_vfpfcnvrt^0,c
  1565  001A06  0EFF               	movlw	255
  1566  001A08  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1567  001A0A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1568  001A0E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1569  001A12  CFDE FFF6          	movff	postinc2,tblptrl
  1570  001A16  CFDD FFF7          	movff	postdec2,tblptrh
  1571  001A1A                     	if	0	;tblptru may be non-zero
  1572  001A1A                     	endif
  1573  001A1A                     	if	0	;tblptru may be non-zero
  1574  001A1A                     	endif
  1575  001A1A  0008               	tblrd		*
  1576  001A1C  50F5               	movf	tablat,w,c
  1577  001A1E  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  1578  001A20  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  1579  001A22  5040               	movf	??_vfpfcnvrt^0,w,c
  1580  001A24  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1581  001A26  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1582  001A28  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1583  001A2A  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  1584  001A2C  E10A               	bnz	u4930
  1585  001A2E  0E0A               	movlw	10
  1586  001A30  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1587  001A32  A0D8               	btfss	status,0,c
  1588  001A34  EF1E  F00D         	goto	u4931
  1589  001A38  EF21  F00D         	goto	u4930
  1590  001A3C                     u4931:
  1591  001A3C  0E01               	movlw	1
  1592  001A3E  EF22  F00D         	goto	u4940
  1593  001A42                     u4930:
  1594  001A42  0E00               	movlw	0
  1595  001A44                     u4940:
  1596  001A44  6E44               	movwf	_vfpfcnvrt$797^0,c
  1597  001A46  6A45               	clrf	(_vfpfcnvrt$797+1)^0,c
  1598  001A48  5044               	movf	_vfpfcnvrt$797^0,w,c
  1599  001A4A  1045               	iorwf	(_vfpfcnvrt$797+1)^0,w,c
  1600  001A4C  A4D8               	btfss	status,2,c
  1601  001A4E  EF2B  F00D         	goto	u4951
  1602  001A52  EF2D  F00D         	goto	u4950
  1603  001A56                     u4951:
  1604  001A56  EFFA  F00C         	goto	l4116
  1605  001A5A                     u4950:
  1606  001A5A                     l4124:
  1607                           
  1608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  1609  001A5A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1610  001A5E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1611  001A62  CFDE FFF6          	movff	postinc2,tblptrl
  1612  001A66  CFDD FFF7          	movff	postdec2,tblptrh
  1613  001A6A                     	if	0	;tblptru may be non-zero
  1614  001A6A                     	endif
  1615  001A6A                     	if	0	;tblptru may be non-zero
  1616  001A6A                     	endif
  1617  001A6A  0008               	tblrd		*
  1618  001A6C  50F5               	movf	tablat,w,c
  1619  001A6E  6E07               	movwf	tolower@c^0,c
  1620  001A70  6A08               	clrf	(tolower@c+1)^0,c
  1621  001A72  EC9F  F01C         	call	_tolower	;wreg free
  1622  001A76  5007               	movf	?_tolower^0,w,c
  1623  001A78  6E4C               	movwf	vfpfcnvrt@ct^0,c
  1624  001A7A                     
  1625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  1626  001A7A  504C               	movf	vfpfcnvrt@ct^0,w,c
  1627  001A7C  B4D8               	btfsc	status,2,c
  1628  001A7E  EF43  F00D         	goto	u4961
  1629  001A82  EF45  F00D         	goto	u4960
  1630  001A86                     u4961:
  1631  001A86  EF7D  F00D         	goto	l4134
  1632  001A8A                     u4960:
  1633  001A8A                     
  1634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  1635  001A8A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1636  001A8E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1637  001A92  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1638  001A96  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1639  001A9A  0E01               	movlw	1
  1640  001A9C  2640               	addwf	??_vfpfcnvrt^0,f,c
  1641  001A9E  0E00               	movlw	0
  1642  001AA0  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1643  001AA2  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1644  001AA6  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1645  001AAA                     	if	0	;tblptru may be non-zero
  1646  001AAA                     	endif
  1647  001AAA                     	if	0	;tblptru may be non-zero
  1648  001AAA                     	endif
  1649  001AAA  0008               	tblrd		*
  1650  001AAC  50F5               	movf	tablat,w,c
  1651  001AAE  6E07               	movwf	tolower@c^0,c
  1652  001AB0  6A08               	clrf	(tolower@c+1)^0,c
  1653  001AB2  EC9F  F01C         	call	_tolower	;wreg free
  1654  001AB6  5007               	movf	?_tolower^0,w,c
  1655  001AB8  6E4D               	movwf	(vfpfcnvrt@ct+1)^0,c
  1656  001ABA                     
  1657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  1658  001ABA  504D               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1659  001ABC  B4D8               	btfsc	status,2,c
  1660  001ABE  EF63  F00D         	goto	u4971
  1661  001AC2  EF65  F00D         	goto	u4970
  1662  001AC6                     u4971:
  1663  001AC6  EF7D  F00D         	goto	l4134
  1664  001ACA                     u4970:
  1665  001ACA                     
  1666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  1667  001ACA  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1668  001ACE  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1669  001AD2  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1670  001AD6  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1671  001ADA  0E02               	movlw	2
  1672  001ADC  2640               	addwf	??_vfpfcnvrt^0,f,c
  1673  001ADE  0E00               	movlw	0
  1674  001AE0  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1675  001AE2  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1676  001AE6  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1677  001AEA                     	if	0	;tblptru may be non-zero
  1678  001AEA                     	endif
  1679  001AEA                     	if	0	;tblptru may be non-zero
  1680  001AEA                     	endif
  1681  001AEA  0008               	tblrd		*
  1682  001AEC  50F5               	movf	tablat,w,c
  1683  001AEE  6E07               	movwf	tolower@c^0,c
  1684  001AF0  6A08               	clrf	(tolower@c+1)^0,c
  1685  001AF2  EC9F  F01C         	call	_tolower	;wreg free
  1686  001AF6  5007               	movf	?_tolower^0,w,c
  1687  001AF8  6E4E               	movwf	(vfpfcnvrt@ct+2)^0,c
  1688  001AFA                     l4134:
  1689                           
  1690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  1691  001AFA  0E66               	movlw	102
  1692  001AFC  184C               	xorwf	vfpfcnvrt@ct^0,w,c
  1693  001AFE  A4D8               	btfss	status,2,c
  1694  001B00  EF84  F00D         	goto	u4981
  1695  001B04  EF86  F00D         	goto	u4980
  1696  001B08                     u4981:
  1697  001B08  EFC6  F00D         	goto	l4146
  1698  001B0C                     u4980:
  1699  001B0C                     
  1700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  1701  001B0C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1702  001B10  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1703  001B14  CFDE FFF6          	movff	postinc2,tblptrl
  1704  001B18  CFDD FFF7          	movff	postdec2,tblptrh
  1705  001B1C                     	if	0	;tblptru may be non-zero
  1706  001B1C                     	endif
  1707  001B1C                     	if	0	;tblptru may be non-zero
  1708  001B1C                     	endif
  1709  001B1C  0008               	tblrd		*
  1710  001B1E  CFF5 F04F          	movff	tablat,vfpfcnvrt@c
  1711  001B22                     
  1712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  1713  001B22  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1714  001B26  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1715  001B2A  2ADE               	incf	postinc2,f,c
  1716  001B2C  0E00               	movlw	0
  1717  001B2E  22DD               	addwfc	postdec2,f,c
  1718  001B30                     
  1719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  1720  001B30  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1721  001B34  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1722  001B38  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1723  001B3C  0E04               	movlw	4
  1724  001B3E  26DE               	addwf	postinc2,f,c
  1725  001B40  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1726  001B44  0E00               	movlw	0
  1727  001B46  22DD               	addwfc	postdec2,f,c
  1728  001B48  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1729  001B4C  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1730  001B50  CFDE F048          	movff	postinc2,vfpfcnvrt@f
  1731  001B54  CFDE F049          	movff	postinc2,vfpfcnvrt@f+1
  1732  001B58  CFDE F04A          	movff	postinc2,vfpfcnvrt@f+2
  1733  001B5C  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+3
  1734  001B60                     l4142:
  1735                           
  1736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  1737  001B60  C03A  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  1738  001B64  C03B  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1739  001B68  C048  F030         	movff	vfpfcnvrt@f,efgtoa@f
  1740  001B6C  C049  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1741  001B70  C04A  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1742  001B74  C04B  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1743  001B78  C04F  F034         	movff	vfpfcnvrt@c,efgtoa@c
  1744  001B7C  EC42  F004         	call	_efgtoa	;wreg free
  1745  001B80  C02E  F03A         	movff	?_efgtoa,?_vfpfcnvrt
  1746  001B84  C02F  F03B         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1747  001B88  EFA9  F00E         	goto	l355
  1748  001B8C                     l4146:
  1749                           
  1750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1751  001B8C  0E4C               	movlw	low vfpfcnvrt@ct
  1752  001B8E  6E01               	movwf	strncmp@_l^0,c
  1753  001B90  0E00               	movlw	high vfpfcnvrt@ct
  1754  001B92  6E02               	movwf	(strncmp@_l+1)^0,c
  1755  001B94  0E7D               	movlw	low STR_17
  1756  001B96  6E03               	movwf	strncmp@_r^0,c
  1757  001B98  0E08               	movlw	high STR_17
  1758  001B9A  6E04               	movwf	(strncmp@_r+1)^0,c
  1759  001B9C  0E00               	movlw	0
  1760  001B9E  6E06               	movwf	(strncmp@n+1)^0,c
  1761  001BA0  0E02               	movlw	2
  1762  001BA2  6E05               	movwf	strncmp@n^0,c
  1763  001BA4  ECCC  F017         	call	_strncmp	;wreg free
  1764  001BA8  5001               	movf	?_strncmp^0,w,c
  1765  001BAA  1002               	iorwf	(?_strncmp+1)^0,w,c
  1766  001BAC  A4D8               	btfss	status,2,c
  1767  001BAE  EFDB  F00D         	goto	u4991
  1768  001BB2  EFDD  F00D         	goto	u4990
  1769  001BB6                     u4991:
  1770  001BB6  EF58  F00E         	goto	l4162
  1771  001BBA                     u4990:
  1772  001BBA                     
  1773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1774  001BBA  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1775  001BBE  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1776  001BC2  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1777  001BC6  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1778  001BCA  0E01               	movlw	1
  1779  001BCC  2640               	addwf	??_vfpfcnvrt^0,f,c
  1780  001BCE  0E00               	movlw	0
  1781  001BD0  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1782  001BD2  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1783  001BD6  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1784  001BDA                     	if	0	;tblptru may be non-zero
  1785  001BDA                     	endif
  1786  001BDA                     	if	0	;tblptru may be non-zero
  1787  001BDA                     	endif
  1788  001BDA  0008               	tblrd		*
  1789  001BDC  CFF5 F04F          	movff	tablat,vfpfcnvrt@c
  1790  001BE0  0EBF               	movlw	191
  1791  001BE2  6E40               	movwf	??_vfpfcnvrt^0,c
  1792  001BE4  0EFF               	movlw	255
  1793  001BE6  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1794  001BE8  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1795  001BEC  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1796  001BF0  CFDE FFF6          	movff	postinc2,tblptrl
  1797  001BF4  CFDD FFF7          	movff	postdec2,tblptrh
  1798  001BF8                     	if	0	;tblptru may be non-zero
  1799  001BF8                     	endif
  1800  001BF8                     	if	0	;tblptru may be non-zero
  1801  001BF8                     	endif
  1802  001BF8  0008               	tblrd		*
  1803  001BFA  50F5               	movf	tablat,w,c
  1804  001BFC  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  1805  001BFE  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  1806  001C00  5040               	movf	??_vfpfcnvrt^0,w,c
  1807  001C02  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1808  001C04  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1809  001C06  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1810  001C08  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  1811  001C0A  E10A               	bnz	u5000
  1812  001C0C  0E1A               	movlw	26
  1813  001C0E  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1814  001C10  A0D8               	btfss	status,0,c
  1815  001C12  EF0D  F00E         	goto	u5001
  1816  001C16  EF10  F00E         	goto	u5000
  1817  001C1A                     u5001:
  1818  001C1A  0E01               	movlw	1
  1819  001C1C  EF11  F00E         	goto	u5010
  1820  001C20                     u5000:
  1821  001C20  0E00               	movlw	0
  1822  001C22                     u5010:
  1823  001C22  6E46               	movwf	_vfpfcnvrt$801^0,c
  1824  001C24  6A47               	clrf	(_vfpfcnvrt$801+1)^0,c
  1825  001C26  5046               	movf	_vfpfcnvrt$801^0,w,c
  1826  001C28  1047               	iorwf	(_vfpfcnvrt$801+1)^0,w,c
  1827  001C2A  B4D8               	btfsc	status,2,c
  1828  001C2C  EF1A  F00E         	goto	u5021
  1829  001C30  EF1C  F00E         	goto	u5020
  1830  001C34                     u5021:
  1831  001C34  EF36  F00E         	goto	l4156
  1832  001C38                     u5020:
  1833  001C38                     
  1834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  1835  001C38  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1836  001C3C  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1837  001C40  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1838  001C44  0E04               	movlw	4
  1839  001C46  26DE               	addwf	postinc2,f,c
  1840  001C48  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1841  001C4C  0E00               	movlw	0
  1842  001C4E  22DD               	addwfc	postdec2,f,c
  1843  001C50  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1844  001C54  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1845  001C58  CFDE F048          	movff	postinc2,vfpfcnvrt@f
  1846  001C5C  CFDE F049          	movff	postinc2,vfpfcnvrt@f+1
  1847  001C60  CFDE F04A          	movff	postinc2,vfpfcnvrt@f+2
  1848  001C64  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+3
  1849                           
  1850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  1851  001C68  EF4E  F00E         	goto	l362
  1852  001C6C                     l4156:
  1853                           
  1854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1855  001C6C  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1856  001C70  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1857  001C74  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1858  001C78  0E04               	movlw	4
  1859  001C7A  26DE               	addwf	postinc2,f,c
  1860  001C7C  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1861  001C80  0E00               	movlw	0
  1862  001C82  22DD               	addwfc	postdec2,f,c
  1863  001C84  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1864  001C88  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1865  001C8C  CFDE F048          	movff	postinc2,vfpfcnvrt@f
  1866  001C90  CFDE F049          	movff	postinc2,vfpfcnvrt@f+1
  1867  001C94  CFDE F04A          	movff	postinc2,vfpfcnvrt@f+2
  1868  001C98  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+3
  1869  001C9C                     l362:
  1870                           
  1871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  1872  001C9C  0E02               	movlw	2
  1873  001C9E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1874  001CA2  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1875  001CA6  26DE               	addwf	postinc2,f,c
  1876  001CA8  0E00               	movlw	0
  1877  001CAA  22DD               	addwfc	postdec2,f,c
  1878  001CAC  EFB0  F00D         	goto	l4142
  1879  001CB0                     l4162:
  1880                           
  1881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  1882  001CB0  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1883  001CB4  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1884  001CB8  CFDE FFF6          	movff	postinc2,tblptrl
  1885  001CBC  CFDD FFF7          	movff	postdec2,tblptrh
  1886  001CC0                     	if	0	;tblptru may be non-zero
  1887  001CC0                     	endif
  1888  001CC0                     	if	0	;tblptru may be non-zero
  1889  001CC0                     	endif
  1890  001CC0  0008               	tblrd		*
  1891  001CC2  50F5               	movf	tablat,w,c
  1892  001CC4  0A25               	xorlw	37
  1893  001CC6  A4D8               	btfss	status,2,c
  1894  001CC8  EF68  F00E         	goto	u5031
  1895  001CCC  EF6A  F00E         	goto	u5030
  1896  001CD0                     u5031:
  1897  001CD0  EF81  F00E         	goto	l4172
  1898  001CD4                     u5030:
  1899  001CD4                     
  1900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  1901  001CD4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1902  001CD8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1903  001CDC  2ADE               	incf	postinc2,f,c
  1904  001CDE  0E00               	movlw	0
  1905  001CE0  22DD               	addwfc	postdec2,f,c
  1906  001CE2                     
  1907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  1908  001CE2  0E00               	movlw	0
  1909  001CE4  6E02               	movwf	(fputc@c+1)^0,c
  1910  001CE6  0E25               	movlw	37
  1911  001CE8  6E01               	movwf	fputc@c^0,c
  1912  001CEA  C03A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1913  001CEE  C03B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1914  001CF2  EC9E  F018         	call	_fputc	;wreg free
  1915  001CF6                     l4168:
  1916                           
  1917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  1918  001CF6  0E00               	movlw	0
  1919  001CF8  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  1920  001CFA  0E01               	movlw	1
  1921  001CFC  6E3A               	movwf	?_vfpfcnvrt^0,c
  1922  001CFE  EFA9  F00E         	goto	l355
  1923  001D02                     l4172:
  1924                           
  1925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  1926  001D02  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1927  001D06  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1928  001D0A  2ADE               	incf	postinc2,f,c
  1929  001D0C  0E00               	movlw	0
  1930  001D0E  22DD               	addwfc	postdec2,f,c
  1931  001D10                     
  1932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  1933  001D10  0E00               	movlw	0
  1934  001D12  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  1935  001D14  0E00               	movlw	0
  1936  001D16  6E3A               	movwf	?_vfpfcnvrt^0,c
  1937  001D18  EFA9  F00E         	goto	l355
  1938  001D1C                     l4178:
  1939                           
  1940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  1941  001D1C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1942  001D20  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1943  001D24  CFDE FFF6          	movff	postinc2,tblptrl
  1944  001D28  CFDD FFF7          	movff	postdec2,tblptrh
  1945  001D2C                     	if	0	;tblptru may be non-zero
  1946  001D2C                     	endif
  1947  001D2C                     	if	0	;tblptru may be non-zero
  1948  001D2C                     	endif
  1949  001D2C  0008               	tblrd		*
  1950  001D2E  50F5               	movf	tablat,w,c
  1951  001D30  6E01               	movwf	fputc@c^0,c
  1952  001D32  6A02               	clrf	(fputc@c+1)^0,c
  1953  001D34  C03A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1954  001D38  C03B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1955  001D3C  EC9E  F018         	call	_fputc	;wreg free
  1956  001D40                     
  1957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  1958  001D40  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1959  001D44  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1960  001D48  2ADE               	incf	postinc2,f,c
  1961  001D4A  0E00               	movlw	0
  1962  001D4C  22DD               	addwfc	postdec2,f,c
  1963  001D4E  EF7B  F00E         	goto	l4168
  1964  001D52                     l355:
  1965  001D52  0012               	return		;funcret
  1966  001D54                     __end_of_vfpfcnvrt:
  1967                           	opt callstack 0
  1968                           
  1969 ;; *************** function _strncmp *****************
  1970 ;; Defined at:
  1971 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1974 ;;		 -> vfpfcnvrt@ct(3), 
  1975 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1976 ;;		 -> STR_19(3), 
  1977 ;;  n               2    4[COMRAM] unsigned int 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1980 ;;		 -> STR_19(3), 
  1981 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1982 ;;		 -> vfpfcnvrt@ct(3), 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  2    0[COMRAM] int 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1992 ;;      Params:         6       0       0       0       0       0       0       0       0
  1993 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1994 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1995 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1996 ;;Total ram usage:       11 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_vfpfcnvrt
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text4
  2006  002F98                     __ptext4:
  2007                           	opt callstack 0
  2008  002F98                     _strncmp:
  2009                           	opt callstack 27
  2010  002F98  C001  F008         	movff	strncmp@_l,strncmp@l
  2011  002F9C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2012  002FA0  C003  F00A         	movff	strncmp@_r,strncmp@r
  2013  002FA4  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2014  002FA8  0605               	decf	strncmp@n^0,f,c
  2015  002FAA  A0D8               	btfss	status,0,c
  2016  002FAC  0606               	decf	(strncmp@n+1)^0,f,c
  2017  002FAE  2805               	incf	strncmp@n^0,w,c
  2018  002FB0  E106               	bnz	u4801
  2019  002FB2  2806               	incf	(strncmp@n+1)^0,w,c
  2020  002FB4  A4D8               	btfss	status,2,c
  2021  002FB6  EFDF  F017         	goto	u4801
  2022  002FBA  EFE1  F017         	goto	u4800
  2023  002FBE                     u4801:
  2024  002FBE  EFEE  F017         	goto	l4048
  2025  002FC2                     u4800:
  2026  002FC2  0E00               	movlw	0
  2027  002FC4  6E02               	movwf	(?_strncmp+1)^0,c
  2028  002FC6  0E00               	movlw	0
  2029  002FC8  6E01               	movwf	?_strncmp^0,c
  2030  002FCA  EF36  F018         	goto	l1164
  2031  002FCE                     l4046:
  2032  002FCE  4A08               	infsnz	strncmp@l^0,f,c
  2033  002FD0  2A09               	incf	(strncmp@l+1)^0,f,c
  2034  002FD2  4A0A               	infsnz	strncmp@r^0,f,c
  2035  002FD4  2A0B               	incf	(strncmp@r+1)^0,f,c
  2036  002FD6  0605               	decf	strncmp@n^0,f,c
  2037  002FD8  A0D8               	btfss	status,0,c
  2038  002FDA  0606               	decf	(strncmp@n+1)^0,f,c
  2039  002FDC                     l4048:
  2040  002FDC  C008  FFD9         	movff	strncmp@l,fsr2l
  2041  002FE0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2042  002FE4  50DF               	movf	indf2,w,c
  2043  002FE6  B4D8               	btfsc	status,2,c
  2044  002FE8  EFF8  F017         	goto	u4811
  2045  002FEC  EFFA  F017         	goto	u4810
  2046  002FF0                     u4811:
  2047  002FF0  EF25  F018         	goto	l4056
  2048  002FF4                     u4810:
  2049  002FF4  C00A  FFF6         	movff	strncmp@r,tblptrl
  2050  002FF8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2051  002FFC                     	if	0	;tblptru may be non-zero
  2052  002FFC                     	endif
  2053  002FFC                     	if	0	;tblptru may be non-zero
  2054  002FFC                     	endif
  2055  002FFC  0008               	tblrd		*
  2056  002FFE  50F5               	movf	tablat,w,c
  2057  003000  0900               	iorlw	0
  2058  003002  B4D8               	btfsc	status,2,c
  2059  003004  EF06  F018         	goto	u4821
  2060  003008  EF08  F018         	goto	u4820
  2061  00300C                     u4821:
  2062  00300C  EF25  F018         	goto	l4056
  2063  003010                     u4820:
  2064  003010  5005               	movf	strncmp@n^0,w,c
  2065  003012  1006               	iorwf	(strncmp@n+1)^0,w,c
  2066  003014  B4D8               	btfsc	status,2,c
  2067  003016  EF0F  F018         	goto	u4831
  2068  00301A  EF11  F018         	goto	u4830
  2069  00301E                     u4831:
  2070  00301E  EF25  F018         	goto	l4056
  2071  003022                     u4830:
  2072  003022  C008  FFD9         	movff	strncmp@l,fsr2l
  2073  003026  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2074  00302A  50DF               	movf	indf2,w,c
  2075  00302C  6E07               	movwf	??_strncmp^0,c
  2076  00302E  C00A  FFF6         	movff	strncmp@r,tblptrl
  2077  003032  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2078  003036                     	if	0	;tblptru may be non-zero
  2079  003036                     	endif
  2080  003036                     	if	0	;tblptru may be non-zero
  2081  003036                     	endif
  2082  003036  0008               	tblrd		*
  2083  003038  50F5               	movf	tablat,w,c
  2084  00303A  1807               	xorwf	??_strncmp^0,w,c
  2085  00303C  B4D8               	btfsc	status,2,c
  2086  00303E  EF23  F018         	goto	u4841
  2087  003042  EF25  F018         	goto	u4840
  2088  003046                     u4841:
  2089  003046  EFE7  F017         	goto	l4046
  2090  00304A                     u4840:
  2091  00304A                     l4056:
  2092  00304A  C008  FFD9         	movff	strncmp@l,fsr2l
  2093  00304E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2094  003052  50DF               	movf	indf2,w,c
  2095  003054  6E07               	movwf	??_strncmp^0,c
  2096  003056  C00A  FFF6         	movff	strncmp@r,tblptrl
  2097  00305A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2098  00305E                     	if	0	;tblptru may be non-zero
  2099  00305E                     	endif
  2100  00305E                     	if	0	;tblptru may be non-zero
  2101  00305E                     	endif
  2102  00305E  0008               	tblrd		*
  2103  003060  50F5               	movf	tablat,w,c
  2104  003062  5C07               	subwf	??_strncmp^0,w,c
  2105  003064  6E01               	movwf	?_strncmp^0,c
  2106  003066  6A02               	clrf	(?_strncmp+1)^0,c
  2107  003068  A0D8               	btfss	status,0,c
  2108  00306A  0602               	decf	(?_strncmp+1)^0,f,c
  2109  00306C                     l1164:
  2110  00306C  0012               	return		;funcret
  2111  00306E                     __end_of_strncmp:
  2112                           	opt callstack 0
  2113                           
  2114 ;; *************** function _efgtoa *****************
  2115 ;; Defined at:
  2116 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  2119 ;;		 -> sprintf@f(6), 
  2120 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  2121 ;;  c               1   51[COMRAM] unsigned char 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  u               4   52[BANK0 ] unsigned char 
  2124 ;;  g               4   44[BANK0 ] unsigned char 
  2125 ;;  l               4   38[BANK0 ] unsigned char 
  2126 ;;  h               4   34[BANK0 ] unsigned char 
  2127 ;;  ou              4    0[BANK0 ] unsigned char 
  2128 ;;  n               2   50[BANK0 ] int 
  2129 ;;  e               2   48[BANK0 ] int 
  2130 ;;  i               2   42[BANK0 ] int 
  2131 ;;  w               2   31[BANK0 ] int 
  2132 ;;  p               2   28[BANK0 ] int 
  2133 ;;  sign            2   26[BANK0 ] int 
  2134 ;;  d               2   24[BANK0 ] int 
  2135 ;;  ne              2   22[BANK0 ] int 
  2136 ;;  m               2   20[BANK0 ] int 
  2137 ;;  pp              2   18[BANK0 ] int 
  2138 ;;  t               2   16[BANK0 ] int 
  2139 ;;  mode            1   33[BANK0 ] unsigned char 
  2140 ;;  nmode           1   30[BANK0 ] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  2   45[COMRAM] int 
  2143 ;; Registers used:
  2144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2150 ;;      Params:         7       0       0       0       0       0       0       0       0
  2151 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2152 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2153 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2154 ;;Total ram usage:       68 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    4
  2157 ;; This function calls:
  2158 ;;		___awdiv
  2159 ;;		___awmod
  2160 ;;		___fladd
  2161 ;;		___fldiv
  2162 ;;		___fleq
  2163 ;;		___flge
  2164 ;;		___flmul
  2165 ;;		___flneg
  2166 ;;		___flsub
  2167 ;;		___fltol
  2168 ;;		___fpclassifyf
  2169 ;;		_floorf
  2170 ;;		_isupper
  2171 ;;		_pad
  2172 ;;		_strcpy
  2173 ;;		_tolower
  2174 ;; This function is called by:
  2175 ;;		_vfpfcnvrt
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text5
  2180  000884                     __ptext5:
  2181                           	opt callstack 0
  2182  000884                     _efgtoa:
  2183                           	opt callstack 23
  2184  000884                     
  2185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  2186  000884  0E00               	movlw	0
  2187  000886  0100               	movlb	0	; () banked
  2188  000888  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2189  00088A  0E00               	movlw	0
  2190  00088C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2191  00088E                     
  2192                           ; BSR set to: 0
  2193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  2194  00088E  C030  F08C         	movff	efgtoa@f,efgtoa@g
  2195  000892  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2196  000896  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2197  00089A  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2198  00089E                     
  2199                           ; BSR set to: 0
  2200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  2201  00089E  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2202  0008A0  EF56  F004         	goto	u4210
  2203  0008A4  EF54  F004         	goto	u4211
  2204  0008A8                     u4211:
  2205  0008A8  EF6C  F004         	goto	l3710
  2206  0008AC                     u4210:
  2207  0008AC                     
  2208                           ; BSR set to: 0
  2209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  2210  0008AC  0E00               	movlw	0
  2211  0008AE  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2212  0008B0  0E01               	movlw	1
  2213  0008B2  6F7A               	movwf	efgtoa@sign& (0+255),b
  2214  0008B4                     
  2215                           ; BSR set to: 0
  2216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  2217  0008B4  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2218  0008B8  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2219  0008BC  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2220  0008C0  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2221  0008C4  ECFE  F01D         	call	___flneg	;wreg free
  2222  0008C8  C001  F08C         	movff	?___flneg,efgtoa@g
  2223  0008CC  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2224  0008D0  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2225  0008D4  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2226  0008D8                     l3710:
  2227                           
  2228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  2229  0008D8  0E00               	movlw	0
  2230  0008DA  0100               	movlb	0	; () banked
  2231  0008DC  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2232  0008DE  0E00               	movlw	0
  2233  0008E0  6F92               	movwf	efgtoa@n& (0+255),b
  2234  0008E2                     
  2235                           ; BSR set to: 0
  2236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
  2237  0008E2  C0F4  F07F         	movff	_width,efgtoa@w
  2238  0008E6  C0F5  F080         	movff	_width+1,efgtoa@w+1
  2239  0008EA                     
  2240                           ; BSR set to: 0
  2241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  2242  0008EA  517A               	movf	efgtoa@sign& (0+255),w,b
  2243  0008EC  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2244  0008EE  A4D8               	btfss	status,2,c
  2245  0008F0  EF7C  F004         	goto	u4221
  2246  0008F4  EF7E  F004         	goto	u4220
  2247  0008F8                     u4221:
  2248  0008F8  EF85  F004         	goto	l3718
  2249  0008FC                     u4220:
  2250  0008FC                     
  2251                           ; BSR set to: 0
  2252  0008FC  A5F8               	btfss	_flags& (0+255),2,b
  2253  0008FE  EF83  F004         	goto	u4231
  2254  000902  EF85  F004         	goto	u4230
  2255  000906                     u4231:
  2256  000906  EF9F  F004         	goto	l3730
  2257  00090A                     u4230:
  2258  00090A                     l3718:
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  2262  00090A  517A               	movf	efgtoa@sign& (0+255),w,b
  2263  00090C  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2264  00090E  A4D8               	btfss	status,2,c
  2265  000910  EF8C  F004         	goto	u4241
  2266  000914  EF8E  F004         	goto	u4240
  2267  000918                     u4241:
  2268  000918  EF94  F004         	goto	l3722
  2269  00091C                     u4240:
  2270  00091C                     
  2271                           ; BSR set to: 0
  2272  00091C  0E00               	movlw	0
  2273  00091E  6F65               	movwf	(_efgtoa$771+1)& (0+255),b
  2274  000920  0E2B               	movlw	43
  2275  000922  6F64               	movwf	_efgtoa$771& (0+255),b
  2276  000924  EF98  F004         	goto	l3724
  2277  000928                     l3722:
  2278                           
  2279                           ; BSR set to: 0
  2280  000928  0E00               	movlw	0
  2281  00092A  6F65               	movwf	(_efgtoa$771+1)& (0+255),b
  2282  00092C  0E2D               	movlw	45
  2283  00092E  6F64               	movwf	_efgtoa$771& (0+255),b
  2284  000930                     l3724:
  2285                           
  2286                           ; BSR set to: 0
  2287  000930  C064  F104         	movff	_efgtoa$771,_dbuf
  2288  000934                     
  2289                           ; BSR set to: 0
  2290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
  2291  000934  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2292  000936  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2293  000938                     
  2294                           ; BSR set to: 0
  2295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
  2296  000938  077F               	decf	efgtoa@w& (0+255),f,b
  2297  00093A  A0D8               	btfss	status,0,c
  2298  00093C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2299  00093E                     l3730:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2303  00093E  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2304  000942  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2305  000946  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2306  00094A  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2307  00094E  EC4D  F017         	call	___fpclassifyf	;wreg free
  2308  000952  0401               	decf	?___fpclassifyf^0,w,c
  2309  000954  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2310  000956  A4D8               	btfss	status,2,c
  2311  000958  EFB0  F004         	goto	u4251
  2312  00095C  EFB2  F004         	goto	u4250
  2313  000960                     u4251:
  2314  000960  EF09  F005         	goto	l3748
  2315  000964                     u4250:
  2316  000964  0EBF               	movlw	191
  2317  000966  6E35               	movwf	??_efgtoa^0,c
  2318  000968  0EFF               	movlw	255
  2319  00096A  6E36               	movwf	(??_efgtoa+1)^0,c
  2320  00096C  5034               	movf	efgtoa@c^0,w,c
  2321  00096E  6E37               	movwf	(??_efgtoa+2)^0,c
  2322  000970  6A38               	clrf	(??_efgtoa+3)^0,c
  2323  000972  5035               	movf	??_efgtoa^0,w,c
  2324  000974  2637               	addwf	(??_efgtoa+2)^0,f,c
  2325  000976  5036               	movf	(??_efgtoa+1)^0,w,c
  2326  000978  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2327  00097A  5038               	movf	(??_efgtoa+3)^0,w,c
  2328  00097C  E10A               	bnz	u4260
  2329  00097E  0E1A               	movlw	26
  2330  000980  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2331  000982  A0D8               	btfss	status,0,c
  2332  000984  EFC6  F004         	goto	u4261
  2333  000988  EFC9  F004         	goto	u4260
  2334  00098C                     u4261:
  2335  00098C  0E01               	movlw	1
  2336  00098E  EFCA  F004         	goto	u4270
  2337  000992                     u4260:
  2338  000992  0E00               	movlw	0
  2339  000994                     u4270:
  2340  000994  0100               	movlb	0	; () banked
  2341  000996  6F66               	movwf	_efgtoa$772& (0+255),b
  2342  000998  6B67               	clrf	(_efgtoa$772+1)& (0+255),b
  2343  00099A                     
  2344                           ; BSR set to: 0
  2345  00099A  5166               	movf	_efgtoa$772& (0+255),w,b
  2346  00099C  1167               	iorwf	(_efgtoa$772+1)& (0+255),w,b
  2347  00099E  B4D8               	btfsc	status,2,c
  2348  0009A0  EFD4  F004         	goto	u4281
  2349  0009A4  EFD6  F004         	goto	u4280
  2350  0009A8                     u4281:
  2351  0009A8  EFE4  F004         	goto	l3740
  2352  0009AC                     u4280:
  2353  0009AC                     
  2354                           ; BSR set to: 0
  2355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  2356  0009AC  0E04               	movlw	low _dbuf
  2357  0009AE  2592               	addwf	efgtoa@n& (0+255),w,b
  2358  0009B0  6E01               	movwf	strcpy@dest^0,c
  2359  0009B2  0E01               	movlw	high _dbuf
  2360  0009B4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2361  0009B6  6E02               	movwf	(strcpy@dest+1)^0,c
  2362  0009B8  0E69               	movlw	low STR_9
  2363  0009BA  6E03               	movwf	strcpy@src^0,c
  2364  0009BC  0E08               	movlw	high STR_9
  2365  0009BE  6E04               	movwf	(strcpy@src+1)^0,c
  2366  0009C0  ECCF  F01C         	call	_strcpy	;wreg free
  2367                           
  2368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
  2369  0009C4  EFF0  F004         	goto	l3742
  2370  0009C8                     l3740:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  2374  0009C8  0E04               	movlw	low _dbuf
  2375  0009CA  2592               	addwf	efgtoa@n& (0+255),w,b
  2376  0009CC  6E01               	movwf	strcpy@dest^0,c
  2377  0009CE  0E01               	movlw	high _dbuf
  2378  0009D0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2379  0009D2  6E02               	movwf	(strcpy@dest+1)^0,c
  2380  0009D4  0E71               	movlw	low STR_10
  2381  0009D6  6E03               	movwf	strcpy@src^0,c
  2382  0009D8  0E08               	movlw	high STR_10
  2383  0009DA  6E04               	movwf	(strcpy@src+1)^0,c
  2384  0009DC  ECCF  F01C         	call	_strcpy	;wreg free
  2385  0009E0                     l3742:
  2386                           
  2387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  2388  0009E0  0100               	movlb	0	; () banked
  2389  0009E2  0EFD               	movlw	253
  2390  0009E4  277F               	addwf	efgtoa@w& (0+255),f,b
  2391  0009E6  0EFF               	movlw	255
  2392  0009E8  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2393  0009EA                     l3744:
  2394                           
  2395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  2396  0009EA  C02E  F011         	movff	efgtoa@fp,pad@fp
  2397  0009EE  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  2398  0009F2  0E04               	movlw	low _dbuf
  2399  0009F4  6E13               	movwf	pad@buf^0,c
  2400  0009F6  0E01               	movlw	high _dbuf
  2401  0009F8  6E14               	movwf	(pad@buf+1)^0,c
  2402  0009FA  C07F  F015         	movff	efgtoa@w,pad@p
  2403  0009FE  C080  F016         	movff	efgtoa@w+1,pad@p+1
  2404  000A02  EC03  F019         	call	_pad	;wreg free
  2405  000A06  C011  F02E         	movff	?_pad,?_efgtoa
  2406  000A0A  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  2407  000A0E  EF19  F00A         	goto	l265
  2408  000A12                     l3748:
  2409                           
  2410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2411  000A12  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2412  000A16  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2413  000A1A  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2414  000A1E  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2415  000A22  EC4D  F017         	call	___fpclassifyf	;wreg free
  2416  000A26  5001               	movf	?___fpclassifyf^0,w,c
  2417  000A28  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2418  000A2A  A4D8               	btfss	status,2,c
  2419  000A2C  EF1A  F005         	goto	u4291
  2420  000A30  EF1C  F005         	goto	u4290
  2421  000A34                     u4291:
  2422  000A34  EF5C  F005         	goto	l3766
  2423  000A38                     u4290:
  2424  000A38  0EBF               	movlw	191
  2425  000A3A  6E35               	movwf	??_efgtoa^0,c
  2426  000A3C  0EFF               	movlw	255
  2427  000A3E  6E36               	movwf	(??_efgtoa+1)^0,c
  2428  000A40  5034               	movf	efgtoa@c^0,w,c
  2429  000A42  6E37               	movwf	(??_efgtoa+2)^0,c
  2430  000A44  6A38               	clrf	(??_efgtoa+3)^0,c
  2431  000A46  5035               	movf	??_efgtoa^0,w,c
  2432  000A48  2637               	addwf	(??_efgtoa+2)^0,f,c
  2433  000A4A  5036               	movf	(??_efgtoa+1)^0,w,c
  2434  000A4C  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2435  000A4E  5038               	movf	(??_efgtoa+3)^0,w,c
  2436  000A50  E10A               	bnz	u4300
  2437  000A52  0E1A               	movlw	26
  2438  000A54  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2439  000A56  A0D8               	btfss	status,0,c
  2440  000A58  EF30  F005         	goto	u4301
  2441  000A5C  EF33  F005         	goto	u4300
  2442  000A60                     u4301:
  2443  000A60  0E01               	movlw	1
  2444  000A62  EF34  F005         	goto	u4310
  2445  000A66                     u4300:
  2446  000A66  0E00               	movlw	0
  2447  000A68                     u4310:
  2448  000A68  0100               	movlb	0	; () banked
  2449  000A6A  6F68               	movwf	_efgtoa$777& (0+255),b
  2450  000A6C  6B69               	clrf	(_efgtoa$777+1)& (0+255),b
  2451  000A6E                     
  2452                           ; BSR set to: 0
  2453  000A6E  5168               	movf	_efgtoa$777& (0+255),w,b
  2454  000A70  1169               	iorwf	(_efgtoa$777+1)& (0+255),w,b
  2455  000A72  B4D8               	btfsc	status,2,c
  2456  000A74  EF3E  F005         	goto	u4321
  2457  000A78  EF40  F005         	goto	u4320
  2458  000A7C                     u4321:
  2459  000A7C  EF4E  F005         	goto	l3758
  2460  000A80                     u4320:
  2461  000A80                     
  2462                           ; BSR set to: 0
  2463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  2464  000A80  0E04               	movlw	low _dbuf
  2465  000A82  2592               	addwf	efgtoa@n& (0+255),w,b
  2466  000A84  6E01               	movwf	strcpy@dest^0,c
  2467  000A86  0E01               	movlw	high _dbuf
  2468  000A88  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2469  000A8A  6E02               	movwf	(strcpy@dest+1)^0,c
  2470  000A8C  0E6D               	movlw	low STR_13
  2471  000A8E  6E03               	movwf	strcpy@src^0,c
  2472  000A90  0E08               	movlw	high STR_13
  2473  000A92  6E04               	movwf	(strcpy@src+1)^0,c
  2474  000A94  ECCF  F01C         	call	_strcpy	;wreg free
  2475                           
  2476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
  2477  000A98  EFF0  F004         	goto	l3742
  2478  000A9C                     l3758:
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  2482  000A9C  0E04               	movlw	low _dbuf
  2483  000A9E  2592               	addwf	efgtoa@n& (0+255),w,b
  2484  000AA0  6E01               	movwf	strcpy@dest^0,c
  2485  000AA2  0E01               	movlw	high _dbuf
  2486  000AA4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2487  000AA6  6E02               	movwf	(strcpy@dest+1)^0,c
  2488  000AA8  0E75               	movlw	low STR_14
  2489  000AAA  6E03               	movwf	strcpy@src^0,c
  2490  000AAC  0E08               	movlw	high STR_14
  2491  000AAE  6E04               	movwf	(strcpy@src+1)^0,c
  2492  000AB0  ECCF  F01C         	call	_strcpy	;wreg free
  2493  000AB4  EFF0  F004         	goto	l3742
  2494  000AB8                     l3766:
  2495                           
  2496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  2497  000AB8  0E00               	movlw	0
  2498  000ABA  0100               	movlb	0	; () banked
  2499  000ABC  6F94               	movwf	efgtoa@u& (0+255),b
  2500  000ABE  0E00               	movlw	0
  2501  000AC0  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2502  000AC2  0E80               	movlw	128
  2503  000AC4  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2504  000AC6  0E3F               	movlw	63
  2505  000AC8  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2506                           
  2507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  2508  000ACA  0E00               	movlw	0
  2509  000ACC  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2510  000ACE  0E00               	movlw	0
  2511  000AD0  6F90               	movwf	efgtoa@e& (0+255),b
  2512  000AD2                     
  2513                           ; BSR set to: 0
  2514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  2515  000AD2  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2516  000AD6  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2517  000ADA  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2518  000ADE  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2519  000AE2  0E00               	movlw	0
  2520  000AE4  6E05               	movwf	___fleq@ff2^0,c
  2521  000AE6  0E00               	movlw	0
  2522  000AE8  6E06               	movwf	(___fleq@ff2+1)^0,c
  2523  000AEA  0E00               	movlw	0
  2524  000AEC  6E07               	movwf	(___fleq@ff2+2)^0,c
  2525  000AEE  0E00               	movlw	0
  2526  000AF0  6E08               	movwf	(___fleq@ff2+3)^0,c
  2527  000AF2  ECD9  F01A         	call	___fleq	;wreg free
  2528  000AF6  B0D8               	btfsc	status,0,c
  2529  000AF8  EF80  F005         	goto	u4331
  2530  000AFC  EF82  F005         	goto	u4330
  2531  000B00                     u4331:
  2532  000B00  EF05  F006         	goto	l3784
  2533  000B04                     u4330:
  2534  000B04  EFA1  F005         	goto	l3776
  2535  000B08                     l3772:
  2536                           
  2537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  2538  000B08  C094  F001         	movff	efgtoa@u,___flmul@b
  2539  000B0C  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2540  000B10  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2541  000B14  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2542  000B18  0E00               	movlw	0
  2543  000B1A  6E05               	movwf	___flmul@a^0,c
  2544  000B1C  0E00               	movlw	0
  2545  000B1E  6E06               	movwf	(___flmul@a+1)^0,c
  2546  000B20  0E20               	movlw	32
  2547  000B22  6E07               	movwf	(___flmul@a+2)^0,c
  2548  000B24  0E41               	movlw	65
  2549  000B26  6E08               	movwf	(___flmul@a+3)^0,c
  2550  000B28  ECAA  F00E         	call	___flmul	;wreg free
  2551  000B2C  C001  F094         	movff	?___flmul,efgtoa@u
  2552  000B30  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  2553  000B34  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  2554  000B38  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  2555  000B3C                     
  2556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
  2557  000B3C  0100               	movlb	0	; () banked
  2558  000B3E  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2559  000B40  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2560  000B42                     l3776:
  2561                           
  2562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  2563  000B42  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2564  000B46  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2565  000B4A  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2566  000B4E  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2567  000B52  0E00               	movlw	0
  2568  000B54  6E05               	movwf	___flmul@a^0,c
  2569  000B56  0E00               	movlw	0
  2570  000B58  6E06               	movwf	(___flmul@a+1)^0,c
  2571  000B5A  0E20               	movlw	32
  2572  000B5C  6E07               	movwf	(___flmul@a+2)^0,c
  2573  000B5E  0E41               	movlw	65
  2574  000B60  6E08               	movwf	(___flmul@a+3)^0,c
  2575  000B62  C094  F001         	movff	efgtoa@u,___flmul@b
  2576  000B66  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2577  000B6A  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2578  000B6E  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2579  000B72  ECAA  F00E         	call	___flmul	;wreg free
  2580  000B76  C001  F01E         	movff	?___flmul,___flge@ff2
  2581  000B7A  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2582  000B7E  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2583  000B82  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2584  000B86  ECCB  F016         	call	___flge	;wreg free
  2585  000B8A  B0D8               	btfsc	status,0,c
  2586  000B8C  EFCA  F005         	goto	u4341
  2587  000B90  EFCC  F005         	goto	u4340
  2588  000B94                     u4341:
  2589  000B94  EF84  F005         	goto	l3772
  2590  000B98                     u4340:
  2591  000B98  EFEC  F005         	goto	l3782
  2592  000B9C                     l3778:
  2593                           
  2594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  2595  000B9C  C094  F001         	movff	efgtoa@u,___fldiv@b
  2596  000BA0  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2597  000BA4  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2598  000BA8  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2599  000BAC  0E00               	movlw	0
  2600  000BAE  6E05               	movwf	___fldiv@a^0,c
  2601  000BB0  0E00               	movlw	0
  2602  000BB2  6E06               	movwf	(___fldiv@a+1)^0,c
  2603  000BB4  0E20               	movlw	32
  2604  000BB6  6E07               	movwf	(___fldiv@a+2)^0,c
  2605  000BB8  0E41               	movlw	65
  2606  000BBA  6E08               	movwf	(___fldiv@a+3)^0,c
  2607  000BBC  ECBF  F010         	call	___fldiv	;wreg free
  2608  000BC0  C001  F094         	movff	?___fldiv,efgtoa@u
  2609  000BC4  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2610  000BC8  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2611  000BCC  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2612  000BD0                     
  2613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
  2614  000BD0  0100               	movlb	0	; () banked
  2615  000BD2  0790               	decf	efgtoa@e& (0+255),f,b
  2616  000BD4  A0D8               	btfss	status,0,c
  2617  000BD6  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2618  000BD8                     l3782:
  2619                           
  2620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  2621  000BD8  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2622  000BDC  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2623  000BE0  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2624  000BE4  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2625  000BE8  C094  F01E         	movff	efgtoa@u,___flge@ff2
  2626  000BEC  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2627  000BF0  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2628  000BF4  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2629  000BF8  ECCB  F016         	call	___flge	;wreg free
  2630  000BFC  A0D8               	btfss	status,0,c
  2631  000BFE  EF03  F006         	goto	u4351
  2632  000C02  EF05  F006         	goto	u4350
  2633  000C06                     u4351:
  2634  000C06  EFCE  F005         	goto	l3778
  2635  000C0A                     u4350:
  2636  000C0A                     l3784:
  2637                           
  2638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  2639  000C0A  C034  F007         	movff	efgtoa@c,tolower@c
  2640  000C0E  6A08               	clrf	(tolower@c+1)^0,c
  2641  000C10  EC9F  F01C         	call	_tolower	;wreg free
  2642  000C14  5007               	movf	?_tolower^0,w,c
  2643  000C16  0100               	movlb	0	; () banked
  2644  000C18  6F81               	movwf	efgtoa@mode& (0+255),b
  2645  000C1A                     
  2646                           ; BSR set to: 0
  2647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  2648  000C1A  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2649  000C1E                     
  2650                           ; BSR set to: 0
  2651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  2652  000C1E  0E67               	movlw	103
  2653  000C20  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2654  000C22  A4D8               	btfss	status,2,c
  2655  000C24  EF16  F006         	goto	u4361
  2656  000C28  EF18  F006         	goto	u4360
  2657  000C2C                     u4361:
  2658  000C2C  EF3E  F006         	goto	l3798
  2659  000C30                     u4360:
  2660  000C30                     
  2661                           ; BSR set to: 0
  2662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  2663  000C30  51F6               	movf	_prec& (0+255),w,b
  2664  000C32  11F7               	iorwf	(_prec+1)& (0+255),w,b
  2665  000C34  A4D8               	btfss	status,2,c
  2666  000C36  EF1F  F006         	goto	u4371
  2667  000C3A  EF21  F006         	goto	u4370
  2668  000C3E                     u4371:
  2669  000C3E  EF25  F006         	goto	l3794
  2670  000C42                     u4370:
  2671  000C42                     
  2672                           ; BSR set to: 0
  2673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  2674  000C42  0E00               	movlw	0
  2675  000C44  6FF7               	movwf	(_prec+1)& (0+255),b
  2676  000C46  0E01               	movlw	1
  2677  000C48  6FF6               	movwf	_prec& (0+255),b
  2678  000C4A                     l3794:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  2682  000C4A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  2683  000C4C  EF32  F006         	goto	u4380
  2684  000C50  51F7               	movf	(_prec+1)& (0+255),w,b
  2685  000C52  E106               	bnz	u4381
  2686  000C54  05F6               	decf	_prec& (0+255),w,b
  2687  000C56  B0D8               	btfsc	status,0,c
  2688  000C58  EF30  F006         	goto	u4381
  2689  000C5C  EF32  F006         	goto	u4380
  2690  000C60                     u4381:
  2691  000C60  EF38  F006         	goto	l283
  2692  000C64                     u4380:
  2693  000C64                     l3796:
  2694                           
  2695                           ; BSR set to: 0
  2696  000C64  0E00               	movlw	0
  2697  000C66  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2698  000C68  0E06               	movlw	6
  2699  000C6A  6F7C               	movwf	efgtoa@p& (0+255),b
  2700  000C6C  EF47  F006         	goto	l3804
  2701  000C70                     l283:
  2702                           
  2703                           ; BSR set to: 0
  2704  000C70  C0F6  F07C         	movff	_prec,efgtoa@p
  2705  000C74  C0F7  F07D         	movff	_prec+1,efgtoa@p+1
  2706  000C78  EF47  F006         	goto	l3804
  2707  000C7C                     l3798:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  2711  000C7C  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  2712  000C7E  EF43  F006         	goto	u4391
  2713  000C82  EF45  F006         	goto	u4390
  2714  000C86                     u4391:
  2715  000C86  EF32  F006         	goto	l3796
  2716  000C8A                     u4390:
  2717  000C8A  EF38  F006         	goto	l283
  2718  000C8E                     l3804:
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  2722  000C8E  0E67               	movlw	103
  2723  000C90  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2724  000C92  A4D8               	btfss	status,2,c
  2725  000C94  EF4E  F006         	goto	u4401
  2726  000C98  EF50  F006         	goto	u4400
  2727  000C9C                     u4401:
  2728  000C9C  EF7F  F006         	goto	l3814
  2729  000CA0                     u4400:
  2730  000CA0                     
  2731                           ; BSR set to: 0
  2732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  2733  000CA0  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2734  000CA2  EF5E  F006         	goto	u4410
  2735  000CA6  0EFC               	movlw	252
  2736  000CA8  5D90               	subwf	efgtoa@e& (0+255),w,b
  2737  000CAA  0EFF               	movlw	255
  2738  000CAC  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2739  000CAE  A0D8               	btfss	status,0,c
  2740  000CB0  EF5C  F006         	goto	u4411
  2741  000CB4  EF5E  F006         	goto	u4410
  2742  000CB8                     u4411:
  2743  000CB8  EF7D  F006         	goto	l3812
  2744  000CBC                     u4410:
  2745  000CBC                     
  2746                           ; BSR set to: 0
  2747  000CBC  0EFF               	movlw	255
  2748  000CBE  6E35               	movwf	??_efgtoa^0,c
  2749  000CC0  0EFF               	movlw	255
  2750  000CC2  6E36               	movwf	(??_efgtoa+1)^0,c
  2751  000CC4  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  2752  000CC8  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  2753  000CCC  5035               	movf	??_efgtoa^0,w,c
  2754  000CCE  2637               	addwf	(??_efgtoa+2)^0,f,c
  2755  000CD0  5036               	movf	(??_efgtoa+1)^0,w,c
  2756  000CD2  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2757  000CD4  5190               	movf	efgtoa@e& (0+255),w,b
  2758  000CD6  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2759  000CD8  5038               	movf	(??_efgtoa+3)^0,w,c
  2760  000CDA  0A80               	xorlw	128
  2761  000CDC  6E39               	movwf	(??_efgtoa+4)^0,c
  2762  000CDE  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2763  000CE0  0A80               	xorlw	128
  2764  000CE2  5839               	subwfb	(??_efgtoa+4)^0,w,c
  2765  000CE4  A0D8               	btfss	status,0,c
  2766  000CE6  EF77  F006         	goto	u4421
  2767  000CEA  EF79  F006         	goto	u4420
  2768  000CEE                     u4421:
  2769  000CEE  EF7D  F006         	goto	l3812
  2770  000CF2                     u4420:
  2771  000CF2                     
  2772                           ; BSR set to: 0
  2773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  2774  000CF2  0E66               	movlw	102
  2775  000CF4  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2776                           
  2777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 392:         } else {
  2778  000CF6  EF7F  F006         	goto	l3814
  2779  000CFA                     l3812:
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  2783  000CFA  0E65               	movlw	101
  2784  000CFC  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2785  000CFE                     l3814:
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
  2789  000CFE  C07C  F074         	movff	efgtoa@p,efgtoa@m
  2790  000D02  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  2791  000D06                     
  2792                           ; BSR set to: 0
  2793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  2794  000D06  0E67               	movlw	103
  2795  000D08  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2796  000D0A  A4D8               	btfss	status,2,c
  2797  000D0C  EF8A  F006         	goto	u4431
  2798  000D10  EF8C  F006         	goto	u4430
  2799  000D14                     u4431:
  2800  000D14  EF9C  F006         	goto	l3822
  2801  000D18                     u4430:
  2802  000D18                     
  2803                           ; BSR set to: 0
  2804  000D18  0E66               	movlw	102
  2805  000D1A  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2806  000D1C  A4D8               	btfss	status,2,c
  2807  000D1E  EF93  F006         	goto	u4441
  2808  000D22  EF95  F006         	goto	u4440
  2809  000D26                     u4441:
  2810  000D26  EF9E  F006         	goto	l3824
  2811  000D2A                     u4440:
  2812  000D2A                     
  2813                           ; BSR set to: 0
  2814  000D2A  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2815  000D2C  EF9C  F006         	goto	u4450
  2816  000D30  EF9A  F006         	goto	u4451
  2817  000D34                     u4451:
  2818  000D34  EF9E  F006         	goto	l3824
  2819  000D38                     u4450:
  2820  000D38                     l3822:
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
  2824  000D38  4B74               	infsnz	efgtoa@m& (0+255),f,b
  2825  000D3A  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  2826  000D3C                     l3824:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  2830  000D3C  0E66               	movlw	102
  2831  000D3E  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2832  000D40  A4D8               	btfss	status,2,c
  2833  000D42  EFA5  F006         	goto	u4461
  2834  000D46  EFA7  F006         	goto	u4460
  2835  000D4A                     u4461:
  2836  000D4A  EFC7  F006         	goto	l3834
  2837  000D4E                     u4460:
  2838  000D4E                     
  2839                           ; BSR set to: 0
  2840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  2841  000D4E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2842  000D50  EFAE  F006         	goto	u4470
  2843  000D54  EFAC  F006         	goto	u4471
  2844  000D58                     u4471:
  2845  000D58  EFBA  F006         	goto	l3830
  2846  000D5C                     u4470:
  2847  000D5C                     
  2848                           ; BSR set to: 0
  2849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  2850  000D5C  0E00               	movlw	0
  2851  000D5E  6F94               	movwf	efgtoa@u& (0+255),b
  2852  000D60  0E00               	movlw	0
  2853  000D62  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2854  000D64  0E80               	movlw	128
  2855  000D66  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2856  000D68  0E3F               	movlw	63
  2857  000D6A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2858                           
  2859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  2860  000D6C  0E00               	movlw	0
  2861  000D6E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2862  000D70  0E00               	movlw	0
  2863  000D72  6F90               	movwf	efgtoa@e& (0+255),b
  2864  000D74                     l3830:
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  2868  000D74  0E67               	movlw	103
  2869  000D76  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2870  000D78  B4D8               	btfsc	status,2,c
  2871  000D7A  EFC1  F006         	goto	u4481
  2872  000D7E  EFC3  F006         	goto	u4480
  2873  000D82                     u4481:
  2874  000D82  EFC7  F006         	goto	l3834
  2875  000D86                     u4480:
  2876  000D86                     
  2877                           ; BSR set to: 0
  2878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
  2879  000D86  5190               	movf	efgtoa@e& (0+255),w,b
  2880  000D88  2774               	addwf	efgtoa@m& (0+255),f,b
  2881  000D8A  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2882  000D8C  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2883  000D8E                     l3834:
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  2887  000D8E  0E00               	movlw	0
  2888  000D90  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2889  000D92  0E00               	movlw	0
  2890  000D94  6F8A               	movwf	efgtoa@i& (0+255),b
  2891  000D96                     
  2892                           ; BSR set to: 0
  2893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
  2894  000D96  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2895  000D9A  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2896  000D9E  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2897  000DA2  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2898  000DA6                     
  2899                           ; BSR set to: 0
  2900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  2901  000DA6  C094  F060         	movff	efgtoa@u,efgtoa@ou
  2902  000DAA  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  2903  000DAE  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  2904  000DB2  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  2905                           
  2906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  2907  000DB6  EF58  F007         	goto	l3848
  2908  000DBA                     l3840:
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  2912  000DBA  C082  F001         	movff	efgtoa@h,___fldiv@b
  2913  000DBE  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2914  000DC2  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2915  000DC6  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2916  000DCA  C094  F005         	movff	efgtoa@u,___fldiv@a
  2917  000DCE  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2918  000DD2  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2919  000DD6  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2920  000DDA  ECBF  F010         	call	___fldiv	;wreg free
  2921  000DDE  C001  F01A         	movff	?___fldiv,floorf@x
  2922  000DE2  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2923  000DE6  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2924  000DEA  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2925  000DEE  EC8C  F012         	call	_floorf	;wreg free
  2926  000DF2  C01A  F086         	movff	?_floorf,efgtoa@l
  2927  000DF6  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  2928  000DFA  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  2929  000DFE  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  2930                           
  2931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  2932  000E02  C086  F001         	movff	efgtoa@l,___fltol@f1
  2933  000E06  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2934  000E0A  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2935  000E0E  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2936  000E12  EC48  F016         	call	___fltol	;wreg free
  2937  000E16  C001  F078         	movff	?___fltol,efgtoa@d
  2938  000E1A  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  2939  000E1E                     
  2940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  2941  000E1E  C082  F01A         	movff	efgtoa@h,___flsub@b
  2942  000E22  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2943  000E26  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2944  000E2A  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2945  000E2E  C094  F005         	movff	efgtoa@u,___flmul@a
  2946  000E32  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  2947  000E36  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  2948  000E3A  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  2949  000E3E  C086  F001         	movff	efgtoa@l,___flmul@b
  2950  000E42  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  2951  000E46  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  2952  000E4A  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  2953  000E4E  ECAA  F00E         	call	___flmul	;wreg free
  2954  000E52  C001  F01E         	movff	?___flmul,___flsub@a
  2955  000E56  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2956  000E5A  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2957  000E5E  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2958  000E62  EC7D  F01D         	call	___flsub	;wreg free
  2959  000E66  C01A  F082         	movff	?___flsub,efgtoa@h
  2960  000E6A  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  2961  000E6E  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  2962  000E72  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  2963  000E76                     
  2964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  2965  000E76  C094  F001         	movff	efgtoa@u,___fldiv@b
  2966  000E7A  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2967  000E7E  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2968  000E82  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2969  000E86  0E00               	movlw	0
  2970  000E88  6E05               	movwf	___fldiv@a^0,c
  2971  000E8A  0E00               	movlw	0
  2972  000E8C  6E06               	movwf	(___fldiv@a+1)^0,c
  2973  000E8E  0E20               	movlw	32
  2974  000E90  6E07               	movwf	(___fldiv@a+2)^0,c
  2975  000E92  0E41               	movlw	65
  2976  000E94  6E08               	movwf	(___fldiv@a+3)^0,c
  2977  000E96  ECBF  F010         	call	___fldiv	;wreg free
  2978  000E9A  C001  F094         	movff	?___fldiv,efgtoa@u
  2979  000E9E  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2980  000EA2  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2981  000EA6  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2982  000EAA                     
  2983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
  2984  000EAA  0100               	movlb	0	; () banked
  2985  000EAC  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  2986  000EAE  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  2987  000EB0                     l3848:
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  2991  000EB0  5174               	movf	efgtoa@m& (0+255),w,b
  2992  000EB2  5D8A               	subwf	efgtoa@i& (0+255),w,b
  2993  000EB4  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  2994  000EB6  0A80               	xorlw	128
  2995  000EB8  6E35               	movwf	??_efgtoa^0,c
  2996  000EBA  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  2997  000EBC  0A80               	xorlw	128
  2998  000EBE  5835               	subwfb	??_efgtoa^0,w,c
  2999  000EC0  A0D8               	btfss	status,0,c
  3000  000EC2  EF65  F007         	goto	u4491
  3001  000EC6  EF67  F007         	goto	u4490
  3002  000ECA                     u4491:
  3003  000ECA  EFDD  F006         	goto	l3840
  3004  000ECE                     u4490:
  3005  000ECE                     
  3006                           ; BSR set to: 0
  3007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  3008  000ECE  C094  F001         	movff	efgtoa@u,___flmul@b
  3009  000ED2  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3010  000ED6  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3011  000EDA  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3012  000EDE  0E00               	movlw	0
  3013  000EE0  6E05               	movwf	___flmul@a^0,c
  3014  000EE2  0E00               	movlw	0
  3015  000EE4  6E06               	movwf	(___flmul@a+1)^0,c
  3016  000EE6  0EA0               	movlw	160
  3017  000EE8  6E07               	movwf	(___flmul@a+2)^0,c
  3018  000EEA  0E40               	movlw	64
  3019  000EEC  6E08               	movwf	(___flmul@a+3)^0,c
  3020  000EEE  ECAA  F00E         	call	___flmul	;wreg free
  3021  000EF2  C001  F086         	movff	?___flmul,efgtoa@l
  3022  000EF6  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  3023  000EFA  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  3024  000EFE  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  3025  000F02                     
  3026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  3027  000F02  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3028  000F06  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3029  000F0A  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3030  000F0E  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3031  000F12  C086  F01E         	movff	efgtoa@l,___flge@ff2
  3032  000F16  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3033  000F1A  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3034  000F1E  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3035  000F22  ECCB  F016         	call	___flge	;wreg free
  3036  000F26  B0D8               	btfsc	status,0,c
  3037  000F28  EF98  F007         	goto	u4501
  3038  000F2C  EF9A  F007         	goto	u4500
  3039  000F30                     u4501:
  3040  000F30  EFA5  F007         	goto	l3856
  3041  000F34                     u4500:
  3042  000F34                     
  3043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  3044  000F34  0E00               	movlw	0
  3045  000F36  0100               	movlb	0	; () banked
  3046  000F38  6F86               	movwf	efgtoa@l& (0+255),b
  3047  000F3A  0E00               	movlw	0
  3048  000F3C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3049  000F3E  0E00               	movlw	0
  3050  000F40  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3051  000F42  0E00               	movlw	0
  3052  000F44  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3053                           
  3054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
  3055  000F46  EFCE  F007         	goto	l3862
  3056  000F4A                     l3856:
  3057                           
  3058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  3059  000F4A  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3060  000F4E  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3061  000F52  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3062  000F56  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3063  000F5A  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3064  000F5E  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3065  000F62  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3066  000F66  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3067  000F6A  ECD9  F01A         	call	___fleq	;wreg free
  3068  000F6E  A0D8               	btfss	status,0,c
  3069  000F70  EFBC  F007         	goto	u4511
  3070  000F74  EFBE  F007         	goto	u4510
  3071  000F78                     u4511:
  3072  000F78  EFCE  F007         	goto	l3862
  3073  000F7C                     u4510:
  3074  000F7C  0100               	movlb	0	; () banked
  3075  000F7E  B178               	btfsc	efgtoa@d& (0+255),0,b
  3076  000F80  EFC4  F007         	goto	u4521
  3077  000F84  EFC6  F007         	goto	u4520
  3078  000F88                     u4521:
  3079  000F88  EFCE  F007         	goto	l3862
  3080  000F8C                     u4520:
  3081  000F8C                     
  3082                           ; BSR set to: 0
  3083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  3084  000F8C  0E00               	movlw	0
  3085  000F8E  6F86               	movwf	efgtoa@l& (0+255),b
  3086  000F90  0E00               	movlw	0
  3087  000F92  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3088  000F94  0E00               	movlw	0
  3089  000F96  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3090  000F98  0E00               	movlw	0
  3091  000F9A  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3092  000F9C                     l3862:
  3093                           
  3094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  3095  000F9C  C08C  F001         	movff	efgtoa@g,___fladd@b
  3096  000FA0  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3097  000FA4  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3098  000FA8  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3099  000FAC  C086  F005         	movff	efgtoa@l,___fladd@a
  3100  000FB0  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3101  000FB4  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3102  000FB8  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3103  000FBC  EC1A  F00A         	call	___fladd	;wreg free
  3104  000FC0  C001  F082         	movff	?___fladd,efgtoa@h
  3105  000FC4  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3106  000FC8  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3107  000FCC  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3108  000FD0                     
  3109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  3110  000FD0  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3111  000FD4  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3112  000FD8  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3113  000FDC  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3114  000FE0                     
  3115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  3116  000FE0  0E65               	movlw	101
  3117  000FE2  0100               	movlb	0	; () banked
  3118  000FE4  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3119  000FE6  B4D8               	btfsc	status,2,c
  3120  000FE8  EFF8  F007         	goto	u4531
  3121  000FEC  EFFA  F007         	goto	u4530
  3122  000FF0                     u4531:
  3123  000FF0  EF00  F008         	goto	l3870
  3124  000FF4                     u4530:
  3125  000FF4                     
  3126                           ; BSR set to: 0
  3127  000FF4  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3128  000FF8  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3129  000FFC  EF04  F008         	goto	l309
  3130  001000                     l3870:
  3131                           
  3132                           ; BSR set to: 0
  3133  001000  0E00               	movlw	0
  3134  001002  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3135  001004  0E00               	movlw	0
  3136  001006  6F76               	movwf	efgtoa@ne& (0+255),b
  3137  001008                     l309:
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  3141  001008  0E00               	movlw	0
  3142  00100A  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3143  00100C  0E00               	movlw	0
  3144  00100E  6F72               	movwf	efgtoa@pp& (0+255),b
  3145                           
  3146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  3147  001010  0E00               	movlw	0
  3148  001012  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3149  001014  0E00               	movlw	0
  3150  001016  6F70               	movwf	efgtoa@t& (0+255),b
  3151                           
  3152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  3153  001018  0E00               	movlw	0
  3154  00101A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3155  00101C  0E00               	movlw	0
  3156  00101E  6F8A               	movwf	efgtoa@i& (0+255),b
  3157                           
  3158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3159  001020  EFFF  F008         	goto	l3920
  3160  001024                     l3872:
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  3164  001024  C082  F001         	movff	efgtoa@h,___fldiv@b
  3165  001028  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3166  00102C  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3167  001030  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3168  001034  C094  F005         	movff	efgtoa@u,___fldiv@a
  3169  001038  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3170  00103C  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3171  001040  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3172  001044  ECBF  F010         	call	___fldiv	;wreg free
  3173  001048  C001  F01A         	movff	?___fldiv,floorf@x
  3174  00104C  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3175  001050  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3176  001054  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3177  001058  EC8C  F012         	call	_floorf	;wreg free
  3178  00105C  C01A  F086         	movff	?_floorf,efgtoa@l
  3179  001060  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3180  001064  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3181  001068  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3182                           
  3183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  3184  00106C  C086  F001         	movff	efgtoa@l,___fltol@f1
  3185  001070  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3186  001074  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3187  001078  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3188  00107C  EC48  F016         	call	___fltol	;wreg free
  3189  001080  C001  F078         	movff	?___fltol,efgtoa@d
  3190  001084  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3191  001088                     
  3192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3193  001088  0100               	movlb	0	; () banked
  3194  00108A  B9F8               	btfsc	_flags& (0+255),4,b
  3195  00108C  EF4A  F008         	goto	u4541
  3196  001090  EF4C  F008         	goto	u4540
  3197  001094                     u4541:
  3198  001094  EF69  F008         	goto	l3884
  3199  001098                     u4540:
  3200  001098                     
  3201                           ; BSR set to: 0
  3202  001098  5178               	movf	efgtoa@d& (0+255),w,b
  3203  00109A  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3204  00109C  A4D8               	btfss	status,2,c
  3205  00109E  EF53  F008         	goto	u4551
  3206  0010A2  EF55  F008         	goto	u4550
  3207  0010A6                     u4551:
  3208  0010A6  EF69  F008         	goto	l3884
  3209  0010AA                     u4550:
  3210  0010AA                     
  3211                           ; BSR set to: 0
  3212  0010AA  0E67               	movlw	103
  3213  0010AC  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3214  0010AE  A4D8               	btfss	status,2,c
  3215  0010B0  EF5C  F008         	goto	u4561
  3216  0010B4  EF5E  F008         	goto	u4560
  3217  0010B8                     u4561:
  3218  0010B8  EF69  F008         	goto	l3884
  3219  0010BC                     u4560:
  3220  0010BC                     
  3221                           ; BSR set to: 0
  3222  0010BC  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3223  0010BE  EF65  F008         	goto	u4570
  3224  0010C2  EF63  F008         	goto	u4571
  3225  0010C6                     u4571:
  3226  0010C6  EF69  F008         	goto	l3884
  3227  0010CA                     u4570:
  3228  0010CA                     
  3229                           ; BSR set to: 0
  3230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
  3231  0010CA  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3232  0010CC  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3233                           
  3234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
  3235  0010CE  EFB3  F008         	goto	l3912
  3236  0010D2                     l3884:
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  3240  0010D2  5172               	movf	efgtoa@pp& (0+255),w,b
  3241  0010D4  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3242  0010D6  A4D8               	btfss	status,2,c
  3243  0010D8  EF70  F008         	goto	u4581
  3244  0010DC  EF72  F008         	goto	u4580
  3245  0010E0                     u4581:
  3246  0010E0  EF9C  F008         	goto	l3904
  3247  0010E4                     u4580:
  3248  0010E4                     
  3249                           ; BSR set to: 0
  3250  0010E4  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3251  0010E6  EF79  F008         	goto	u4590
  3252  0010EA  EF77  F008         	goto	u4591
  3253  0010EE                     u4591:
  3254  0010EE  EF9C  F008         	goto	l3904
  3255  0010F2                     u4590:
  3256  0010F2                     
  3257                           ; BSR set to: 0
  3258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  3259  0010F2  0E04               	movlw	low _dbuf
  3260  0010F4  2592               	addwf	efgtoa@n& (0+255),w,b
  3261  0010F6  6ED9               	movwf	fsr2l,c
  3262  0010F8  0E01               	movlw	high _dbuf
  3263  0010FA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3264  0010FC  6EDA               	movwf	fsr2h,c
  3265  0010FE  0E2E               	movlw	46
  3266  001100  6EDF               	movwf	indf2,c
  3267  001102                     
  3268                           ; BSR set to: 0
  3269  001102  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3270  001104  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3271  001106                     
  3272                           ; BSR set to: 0
  3273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
  3274  001106  077F               	decf	efgtoa@w& (0+255),f,b
  3275  001108  A0D8               	btfss	status,0,c
  3276  00110A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3277  00110C                     
  3278                           ; BSR set to: 0
  3279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  3280  00110C  0E00               	movlw	0
  3281  00110E  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3282  001110  0E01               	movlw	1
  3283  001112  6F72               	movwf	efgtoa@pp& (0+255),b
  3284  001114  EF9C  F008         	goto	l3904
  3285  001118                     l3896:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  3289  001118  0E04               	movlw	low _dbuf
  3290  00111A  2592               	addwf	efgtoa@n& (0+255),w,b
  3291  00111C  6ED9               	movwf	fsr2l,c
  3292  00111E  0E01               	movlw	high _dbuf
  3293  001120  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3294  001122  6EDA               	movwf	fsr2h,c
  3295  001124  0E30               	movlw	48
  3296  001126  6EDF               	movwf	indf2,c
  3297  001128                     
  3298                           ; BSR set to: 0
  3299  001128  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3300  00112A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3301  00112C                     
  3302                           ; BSR set to: 0
  3303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
  3304  00112C  077F               	decf	efgtoa@w& (0+255),f,b
  3305  00112E  A0D8               	btfss	status,0,c
  3306  001130  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3307  001132                     
  3308                           ; BSR set to: 0
  3309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
  3310  001132  0770               	decf	efgtoa@t& (0+255),f,b
  3311  001134  A0D8               	btfss	status,0,c
  3312  001136  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3313  001138                     l3904:
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  3317  001138  5170               	movf	efgtoa@t& (0+255),w,b
  3318  00113A  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3319  00113C  A4D8               	btfss	status,2,c
  3320  00113E  EFA3  F008         	goto	u4601
  3321  001142  EFA5  F008         	goto	u4600
  3322  001146                     u4601:
  3323  001146  EF8C  F008         	goto	l3896
  3324  00114A                     u4600:
  3325  00114A                     
  3326                           ; BSR set to: 0
  3327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  3328  00114A  0E04               	movlw	low _dbuf
  3329  00114C  2592               	addwf	efgtoa@n& (0+255),w,b
  3330  00114E  6ED9               	movwf	fsr2l,c
  3331  001150  0E01               	movlw	high _dbuf
  3332  001152  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3333  001154  6EDA               	movwf	fsr2h,c
  3334  001156  5178               	movf	efgtoa@d& (0+255),w,b
  3335  001158  0F30               	addlw	48
  3336  00115A  6EDF               	movwf	indf2,c
  3337  00115C                     
  3338                           ; BSR set to: 0
  3339  00115C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3340  00115E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3341  001160                     
  3342                           ; BSR set to: 0
  3343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
  3344  001160  077F               	decf	efgtoa@w& (0+255),f,b
  3345  001162  A0D8               	btfss	status,0,c
  3346  001164  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3347  001166                     l3912:
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  3351  001166  C082  F01A         	movff	efgtoa@h,___flsub@b
  3352  00116A  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3353  00116E  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3354  001172  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3355  001176  C094  F005         	movff	efgtoa@u,___flmul@a
  3356  00117A  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3357  00117E  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3358  001182  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3359  001186  C086  F001         	movff	efgtoa@l,___flmul@b
  3360  00118A  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3361  00118E  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3362  001192  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3363  001196  ECAA  F00E         	call	___flmul	;wreg free
  3364  00119A  C001  F01E         	movff	?___flmul,___flsub@a
  3365  00119E  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3366  0011A2  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3367  0011A6  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3368  0011AA  EC7D  F01D         	call	___flsub	;wreg free
  3369  0011AE  C01A  F082         	movff	?___flsub,efgtoa@h
  3370  0011B2  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3371  0011B6  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3372  0011BA  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3373  0011BE                     
  3374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  3375  0011BE  C094  F001         	movff	efgtoa@u,___fldiv@b
  3376  0011C2  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3377  0011C6  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3378  0011CA  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3379  0011CE  0E00               	movlw	0
  3380  0011D0  6E05               	movwf	___fldiv@a^0,c
  3381  0011D2  0E00               	movlw	0
  3382  0011D4  6E06               	movwf	(___fldiv@a+1)^0,c
  3383  0011D6  0E20               	movlw	32
  3384  0011D8  6E07               	movwf	(___fldiv@a+2)^0,c
  3385  0011DA  0E41               	movlw	65
  3386  0011DC  6E08               	movwf	(___fldiv@a+3)^0,c
  3387  0011DE  ECBF  F010         	call	___fldiv	;wreg free
  3388  0011E2  C001  F094         	movff	?___fldiv,efgtoa@u
  3389  0011E6  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3390  0011EA  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3391  0011EE  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3392  0011F2                     
  3393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
  3394  0011F2  0100               	movlb	0	; () banked
  3395  0011F4  0776               	decf	efgtoa@ne& (0+255),f,b
  3396  0011F6  A0D8               	btfss	status,0,c
  3397  0011F8  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3398  0011FA                     
  3399                           ; BSR set to: 0
  3400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
  3401  0011FA  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3402  0011FC  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3403  0011FE                     l3920:
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3407  0011FE  5174               	movf	efgtoa@m& (0+255),w,b
  3408  001200  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3409  001202  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3410  001204  0A80               	xorlw	128
  3411  001206  6E35               	movwf	??_efgtoa^0,c
  3412  001208  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3413  00120A  0A80               	xorlw	128
  3414  00120C  5835               	subwfb	??_efgtoa^0,w,c
  3415  00120E  B0D8               	btfsc	status,0,c
  3416  001210  EF0C  F009         	goto	u4611
  3417  001214  EF0E  F009         	goto	u4610
  3418  001218                     u4611:
  3419  001218  EF1C  F009         	goto	l3924
  3420  00121C                     u4610:
  3421  00121C                     
  3422                           ; BSR set to: 0
  3423  00121C  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3424  00121E  EF1A  F009         	goto	u4621
  3425  001222  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3426  001224  E109               	bnz	u4620
  3427  001226  0E4B               	movlw	75
  3428  001228  5D92               	subwf	efgtoa@n& (0+255),w,b
  3429  00122A  A0D8               	btfss	status,0,c
  3430  00122C  EF1A  F009         	goto	u4621
  3431  001230  EF1C  F009         	goto	u4620
  3432  001234                     u4621:
  3433  001234  EF12  F008         	goto	l3872
  3434  001238                     u4620:
  3435  001238                     l3924:
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  3439  001238  5172               	movf	efgtoa@pp& (0+255),w,b
  3440  00123A  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3441  00123C  A4D8               	btfss	status,2,c
  3442  00123E  EF23  F009         	goto	u4631
  3443  001242  EF25  F009         	goto	u4630
  3444  001246                     u4631:
  3445  001246  EF36  F009         	goto	l3932
  3446  00124A                     u4630:
  3447  00124A                     
  3448                           ; BSR set to: 0
  3449  00124A  A9F8               	btfss	_flags& (0+255),4,b
  3450  00124C  EF2A  F009         	goto	u4641
  3451  001250  EF2C  F009         	goto	u4640
  3452  001254                     u4641:
  3453  001254  EF36  F009         	goto	l3932
  3454  001258                     u4640:
  3455  001258                     
  3456                           ; BSR set to: 0
  3457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  3458  001258  0E04               	movlw	low _dbuf
  3459  00125A  2592               	addwf	efgtoa@n& (0+255),w,b
  3460  00125C  6ED9               	movwf	fsr2l,c
  3461  00125E  0E01               	movlw	high _dbuf
  3462  001260  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3463  001262  6EDA               	movwf	fsr2h,c
  3464  001264  0E2E               	movlw	46
  3465  001266  6EDF               	movwf	indf2,c
  3466  001268                     
  3467                           ; BSR set to: 0
  3468  001268  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3469  00126A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3470  00126C                     l3932:
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  3474  00126C  0E04               	movlw	low _dbuf
  3475  00126E  2592               	addwf	efgtoa@n& (0+255),w,b
  3476  001270  6ED9               	movwf	fsr2l,c
  3477  001272  0E01               	movlw	high _dbuf
  3478  001274  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3479  001276  6EDA               	movwf	fsr2h,c
  3480  001278  0E00               	movlw	0
  3481  00127A  6EDF               	movwf	indf2,c
  3482  00127C                     
  3483                           ; BSR set to: 0
  3484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  3485  00127C  0E65               	movlw	101
  3486  00127E  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3487  001280  A4D8               	btfss	status,2,c
  3488  001282  EF45  F009         	goto	u4651
  3489  001286  EF47  F009         	goto	u4650
  3490  00128A                     u4651:
  3491  00128A  EFF5  F004         	goto	l3744
  3492  00128E                     u4650:
  3493  00128E                     
  3494                           ; BSR set to: 0
  3495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  3496  00128E  0E00               	movlw	0
  3497  001290  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3498  001292  0E4F               	movlw	79
  3499  001294  6F8A               	movwf	efgtoa@i& (0+255),b
  3500  001296                     
  3501                           ; BSR set to: 0
  3502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  3503  001296  0E04               	movlw	low _dbuf
  3504  001298  258A               	addwf	efgtoa@i& (0+255),w,b
  3505  00129A  6ED9               	movwf	fsr2l,c
  3506  00129C  0E01               	movlw	high _dbuf
  3507  00129E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3508  0012A0  6EDA               	movwf	fsr2h,c
  3509  0012A2  0E00               	movlw	0
  3510  0012A4  6EDF               	movwf	indf2,c
  3511  0012A6                     
  3512                           ; BSR set to: 0
  3513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  3514  0012A6  0E00               	movlw	0
  3515  0012A8  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3516  0012AA  0E00               	movlw	0
  3517  0012AC  6F7A               	movwf	efgtoa@sign& (0+255),b
  3518  0012AE                     
  3519                           ; BSR set to: 0
  3520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  3521  0012AE  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3522  0012B0  EF5E  F009         	goto	u4660
  3523  0012B4  EF5C  F009         	goto	u4661
  3524  0012B8                     u4661:
  3525  0012B8  EF66  F009         	goto	l3948
  3526  0012BC                     u4660:
  3527  0012BC                     
  3528                           ; BSR set to: 0
  3529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  3530  0012BC  0E00               	movlw	0
  3531  0012BE  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3532  0012C0  0E01               	movlw	1
  3533  0012C2  6F7A               	movwf	efgtoa@sign& (0+255),b
  3534  0012C4                     
  3535                           ; BSR set to: 0
  3536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  3537  0012C4  6D90               	negf	efgtoa@e& (0+255),b
  3538  0012C6  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3539  0012C8  B0D8               	btfsc	status,0,c
  3540  0012CA  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3541  0012CC                     l3948:
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  3545  0012CC  0E00               	movlw	0
  3546  0012CE  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3547  0012D0  0E02               	movlw	2
  3548  0012D2  6F7C               	movwf	efgtoa@p& (0+255),b
  3549                           
  3550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3551  0012D4  EF97  F009         	goto	l3960
  3552  0012D8                     l3950:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
  3556  0012D8  078A               	decf	efgtoa@i& (0+255),f,b
  3557  0012DA  A0D8               	btfss	status,0,c
  3558  0012DC  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3559  0012DE                     
  3560                           ; BSR set to: 0
  3561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  3562  0012DE  0E04               	movlw	low _dbuf
  3563  0012E0  258A               	addwf	efgtoa@i& (0+255),w,b
  3564  0012E2  6ED9               	movwf	fsr2l,c
  3565  0012E4  0E01               	movlw	high _dbuf
  3566  0012E6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3567  0012E8  6EDA               	movwf	fsr2h,c
  3568  0012EA  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3569  0012EE  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3570  0012F2  0E00               	movlw	0
  3571  0012F4  6E04               	movwf	(___awmod@divisor+1)^0,c
  3572  0012F6  0E0A               	movlw	10
  3573  0012F8  6E03               	movwf	___awmod@divisor^0,c
  3574  0012FA  EC81  F01A         	call	___awmod	;wreg free
  3575  0012FE  5001               	movf	?___awmod^0,w,c
  3576  001300  0F30               	addlw	48
  3577  001302  6EDF               	movwf	indf2,c
  3578  001304                     
  3579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  3580  001304  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3581  001308  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3582  00130C  0E00               	movlw	0
  3583  00130E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3584  001310  0E0A               	movlw	10
  3585  001312  6E03               	movwf	___awdiv@divisor^0,c
  3586  001314  EC66  F019         	call	___awdiv	;wreg free
  3587  001318  C001  F090         	movff	?___awdiv,efgtoa@e
  3588  00131C  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3589  001320                     
  3590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
  3591  001320  0100               	movlb	0	; () banked
  3592  001322  077C               	decf	efgtoa@p& (0+255),f,b
  3593  001324  A0D8               	btfss	status,0,c
  3594  001326  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3595  001328                     
  3596                           ; BSR set to: 0
  3597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
  3598  001328  077F               	decf	efgtoa@w& (0+255),f,b
  3599  00132A  A0D8               	btfss	status,0,c
  3600  00132C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3601  00132E                     l3960:
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3605  00132E  5190               	movf	efgtoa@e& (0+255),w,b
  3606  001330  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3607  001332  A4D8               	btfss	status,2,c
  3608  001334  EF9E  F009         	goto	u4671
  3609  001338  EFA0  F009         	goto	u4670
  3610  00133C                     u4671:
  3611  00133C  EF6C  F009         	goto	l3950
  3612  001340                     u4670:
  3613  001340                     
  3614                           ; BSR set to: 0
  3615  001340  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3616  001342  EFAD  F009         	goto	u4680
  3617  001346  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3618  001348  E106               	bnz	u4681
  3619  00134A  057C               	decf	efgtoa@p& (0+255),w,b
  3620  00134C  B0D8               	btfsc	status,0,c
  3621  00134E  EFAB  F009         	goto	u4681
  3622  001352  EFAD  F009         	goto	u4680
  3623  001356                     u4681:
  3624  001356  EF6C  F009         	goto	l3950
  3625  00135A                     u4680:
  3626  00135A                     
  3627                           ; BSR set to: 0
  3628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
  3629  00135A  078A               	decf	efgtoa@i& (0+255),f,b
  3630  00135C  A0D8               	btfss	status,0,c
  3631  00135E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3632  001360                     
  3633                           ; BSR set to: 0
  3634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  3635  001360  517A               	movf	efgtoa@sign& (0+255),w,b
  3636  001362  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3637  001364  A4D8               	btfss	status,2,c
  3638  001366  EFB7  F009         	goto	u4691
  3639  00136A  EFB9  F009         	goto	u4690
  3640  00136E                     u4691:
  3641  00136E  EFBF  F009         	goto	l3970
  3642  001372                     u4690:
  3643  001372                     
  3644                           ; BSR set to: 0
  3645  001372  0E00               	movlw	0
  3646  001374  6F6B               	movwf	(_efgtoa$781+1)& (0+255),b
  3647  001376  0E2B               	movlw	43
  3648  001378  6F6A               	movwf	_efgtoa$781& (0+255),b
  3649  00137A  EFC3  F009         	goto	l3972
  3650  00137E                     l3970:
  3651                           
  3652                           ; BSR set to: 0
  3653  00137E  0E00               	movlw	0
  3654  001380  6F6B               	movwf	(_efgtoa$781+1)& (0+255),b
  3655  001382  0E2D               	movlw	45
  3656  001384  6F6A               	movwf	_efgtoa$781& (0+255),b
  3657  001386                     l3972:
  3658                           
  3659                           ; BSR set to: 0
  3660  001386  0E04               	movlw	low _dbuf
  3661  001388  258A               	addwf	efgtoa@i& (0+255),w,b
  3662  00138A  6ED9               	movwf	fsr2l,c
  3663  00138C  0E01               	movlw	high _dbuf
  3664  00138E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3665  001390  6EDA               	movwf	fsr2h,c
  3666  001392  C06A  FFDF         	movff	_efgtoa$781,indf2
  3667  001396                     
  3668                           ; BSR set to: 0
  3669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
  3670  001396  077F               	decf	efgtoa@w& (0+255),f,b
  3671  001398  A0D8               	btfss	status,0,c
  3672  00139A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3673  00139C                     
  3674                           ; BSR set to: 0
  3675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3676  00139C  078A               	decf	efgtoa@i& (0+255),f,b
  3677  00139E  A0D8               	btfss	status,0,c
  3678  0013A0  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3679  0013A2                     
  3680                           ; BSR set to: 0
  3681  0013A2  0EBF               	movlw	191
  3682  0013A4  6E35               	movwf	??_efgtoa^0,c
  3683  0013A6  0EFF               	movlw	255
  3684  0013A8  6E36               	movwf	(??_efgtoa+1)^0,c
  3685  0013AA  5034               	movf	efgtoa@c^0,w,c
  3686  0013AC  6E37               	movwf	(??_efgtoa+2)^0,c
  3687  0013AE  6A38               	clrf	(??_efgtoa+3)^0,c
  3688  0013B0  5035               	movf	??_efgtoa^0,w,c
  3689  0013B2  2637               	addwf	(??_efgtoa+2)^0,f,c
  3690  0013B4  5036               	movf	(??_efgtoa+1)^0,w,c
  3691  0013B6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3692  0013B8  5038               	movf	(??_efgtoa+3)^0,w,c
  3693  0013BA  E10A               	bnz	u4700
  3694  0013BC  0E1A               	movlw	26
  3695  0013BE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3696  0013C0  A0D8               	btfss	status,0,c
  3697  0013C2  EFE5  F009         	goto	u4701
  3698  0013C6  EFE8  F009         	goto	u4700
  3699  0013CA                     u4701:
  3700  0013CA  0E01               	movlw	1
  3701  0013CC  EFE9  F009         	goto	u4710
  3702  0013D0                     u4700:
  3703  0013D0  0E00               	movlw	0
  3704  0013D2                     u4710:
  3705  0013D2  6F6E               	movwf	_efgtoa$783& (0+255),b
  3706  0013D4  6B6F               	clrf	(_efgtoa$783+1)& (0+255),b
  3707  0013D6                     
  3708                           ; BSR set to: 0
  3709  0013D6  516E               	movf	_efgtoa$783& (0+255),w,b
  3710  0013D8  116F               	iorwf	(_efgtoa$783+1)& (0+255),w,b
  3711  0013DA  A4D8               	btfss	status,2,c
  3712  0013DC  EFF2  F009         	goto	u4721
  3713  0013E0  EFF4  F009         	goto	u4720
  3714  0013E4                     u4721:
  3715  0013E4  EFFA  F009         	goto	l3986
  3716  0013E8                     u4720:
  3717  0013E8                     
  3718                           ; BSR set to: 0
  3719  0013E8  0E00               	movlw	0
  3720  0013EA  6F6D               	movwf	(_efgtoa$782+1)& (0+255),b
  3721  0013EC  0E65               	movlw	101
  3722  0013EE  6F6C               	movwf	_efgtoa$782& (0+255),b
  3723  0013F0  EFFE  F009         	goto	l3988
  3724  0013F4                     l3986:
  3725                           
  3726                           ; BSR set to: 0
  3727  0013F4  0E00               	movlw	0
  3728  0013F6  6F6D               	movwf	(_efgtoa$782+1)& (0+255),b
  3729  0013F8  0E45               	movlw	69
  3730  0013FA  6F6C               	movwf	_efgtoa$782& (0+255),b
  3731  0013FC                     l3988:
  3732                           
  3733                           ; BSR set to: 0
  3734  0013FC  0E04               	movlw	low _dbuf
  3735  0013FE  258A               	addwf	efgtoa@i& (0+255),w,b
  3736  001400  6ED9               	movwf	fsr2l,c
  3737  001402  0E01               	movlw	high _dbuf
  3738  001404  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3739  001406  6EDA               	movwf	fsr2h,c
  3740  001408  C06C  FFDF         	movff	_efgtoa$782,indf2
  3741  00140C                     
  3742                           ; BSR set to: 0
  3743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
  3744  00140C  077F               	decf	efgtoa@w& (0+255),f,b
  3745  00140E  A0D8               	btfss	status,0,c
  3746  001410  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3747  001412                     
  3748                           ; BSR set to: 0
  3749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  3750  001412  0E04               	movlw	low _dbuf
  3751  001414  2592               	addwf	efgtoa@n& (0+255),w,b
  3752  001416  6E01               	movwf	strcpy@dest^0,c
  3753  001418  0E01               	movlw	high _dbuf
  3754  00141A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3755  00141C  6E02               	movwf	(strcpy@dest+1)^0,c
  3756  00141E  0E04               	movlw	low _dbuf
  3757  001420  258A               	addwf	efgtoa@i& (0+255),w,b
  3758  001422  6E03               	movwf	strcpy@src^0,c
  3759  001424  0E01               	movlw	high _dbuf
  3760  001426  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3761  001428  6E04               	movwf	(strcpy@src+1)^0,c
  3762  00142A  ECCF  F01C         	call	_strcpy	;wreg free
  3763  00142E  EFF5  F004         	goto	l3744
  3764  001432                     l265:
  3765  001432  0012               	return		;funcret
  3766  001434                     __end_of_efgtoa:
  3767                           	opt callstack 0
  3768                           
  3769 ;; *************** function _tolower *****************
  3770 ;; Defined at:
  3771 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  c               2    6[COMRAM] int 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  2    6[COMRAM] int 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3785 ;;      Params:         2       0       0       0       0       0       0       0       0
  3786 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3787 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3788 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3789 ;;Total ram usage:        8 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:    1
  3792 ;; This function calls:
  3793 ;;		_isupper
  3794 ;; This function is called by:
  3795 ;;		_efgtoa
  3796 ;;		_vfpfcnvrt
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text6
  3801  00393E                     __ptext6:
  3802                           	opt callstack 0
  3803  00393E                     _tolower:
  3804                           	opt callstack 26
  3805  00393E  0EBF               	movlw	191
  3806  003940  6E09               	movwf	??_tolower^0,c
  3807  003942  0EFF               	movlw	255
  3808  003944  6E0A               	movwf	(??_tolower+1)^0,c
  3809  003946  C007  F00B         	movff	tolower@c,??_tolower+2
  3810  00394A  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3811  00394E  5009               	movf	??_tolower^0,w,c
  3812  003950  260B               	addwf	(??_tolower+2)^0,f,c
  3813  003952  500A               	movf	(??_tolower+1)^0,w,c
  3814  003954  220C               	addwfc	(??_tolower+3)^0,f,c
  3815  003956  500C               	movf	(??_tolower+3)^0,w,c
  3816  003958  E10A               	bnz	u3320
  3817  00395A  0E1A               	movlw	26
  3818  00395C  5C0B               	subwf	(??_tolower+2)^0,w,c
  3819  00395E  A0D8               	btfss	status,0,c
  3820  003960  EFB4  F01C         	goto	u3321
  3821  003964  EFB7  F01C         	goto	u3320
  3822  003968                     u3321:
  3823  003968  0E01               	movlw	1
  3824  00396A  EFB8  F01C         	goto	u3330
  3825  00396E                     u3320:
  3826  00396E  0E00               	movlw	0
  3827  003970                     u3330:
  3828  003970  6E0D               	movwf	_tolower$1388^0,c
  3829  003972  6A0E               	clrf	(_tolower$1388+1)^0,c
  3830  003974  500D               	movf	_tolower$1388^0,w,c
  3831  003976  100E               	iorwf	(_tolower$1388+1)^0,w,c
  3832  003978  B4D8               	btfsc	status,2,c
  3833  00397A  EFC1  F01C         	goto	u3341
  3834  00397E  EFC3  F01C         	goto	u3340
  3835  003982                     u3341:
  3836  003982  EFCA  F01C         	goto	l1174
  3837  003986                     u3340:
  3838  003986  0E20               	movlw	32
  3839  003988  1007               	iorwf	tolower@c^0,w,c
  3840  00398A  6E07               	movwf	?_tolower^0,c
  3841  00398C  5008               	movf	(tolower@c+1)^0,w,c
  3842  00398E  6E08               	movwf	(?_tolower+1)^0,c
  3843  003990  EFCE  F01C         	goto	l1179
  3844  003994                     l1174:
  3845  003994  C007  F007         	movff	tolower@c,?_tolower
  3846  003998  C008  F008         	movff	tolower@c+1,?_tolower+1
  3847  00399C                     l1179:
  3848  00399C  0012               	return		;funcret
  3849  00399E                     __end_of_tolower:
  3850                           	opt callstack 0
  3851                           
  3852 ;; *************** function _isupper *****************
  3853 ;; Defined at:
  3854 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  c               2    0[COMRAM] int 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  2    0[COMRAM] int 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3868 ;;      Params:         2       0       0       0       0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3870 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3871 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3872 ;;Total ram usage:        6 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_efgtoa
  3878 ;;		_vfpfcnvrt
  3879 ;;		_tolower
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text7
  3884  003BC4                     __ptext7:
  3885                           	opt callstack 0
  3886  003BC4                     _isupper:
  3887                           	opt callstack 26
  3888  003BC4  0EBF               	movlw	191
  3889  003BC6  6E03               	movwf	??_isupper^0,c
  3890  003BC8  0EFF               	movlw	255
  3891  003BCA  6E04               	movwf	(??_isupper+1)^0,c
  3892  003BCC  C001  F005         	movff	isupper@c,??_isupper+2
  3893  003BD0  C002  F006         	movff	isupper@c+1,??_isupper+3
  3894  003BD4  5003               	movf	??_isupper^0,w,c
  3895  003BD6  2605               	addwf	(??_isupper+2)^0,f,c
  3896  003BD8  5004               	movf	(??_isupper+1)^0,w,c
  3897  003BDA  2206               	addwfc	(??_isupper+3)^0,f,c
  3898  003BDC  5006               	movf	(??_isupper+3)^0,w,c
  3899  003BDE  E10A               	bnz	u2780
  3900  003BE0  0E1A               	movlw	26
  3901  003BE2  5C05               	subwf	(??_isupper+2)^0,w,c
  3902  003BE4  A0D8               	btfss	status,0,c
  3903  003BE6  EFF7  F01D         	goto	u2781
  3904  003BEA  EFFA  F01D         	goto	u2780
  3905  003BEE                     u2781:
  3906  003BEE  0E01               	movlw	1
  3907  003BF0  EFFB  F01D         	goto	u2790
  3908  003BF4                     u2780:
  3909  003BF4  0E00               	movlw	0
  3910  003BF6                     u2790:
  3911  003BF6  6E01               	movwf	?_isupper^0,c
  3912  003BF8  6A02               	clrf	(?_isupper+1)^0,c
  3913  003BFA  0012               	return		;funcret
  3914  003BFC                     __end_of_isupper:
  3915                           	opt callstack 0
  3916                           
  3917 ;; *************** function _strcpy *****************
  3918 ;; Defined at:
  3919 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3922 ;;		 -> dbuf(80), 
  3923 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3924 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  3925 ;;		 -> dbuf(80), 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  d               2    8[COMRAM] PTR unsigned char 
  3928 ;;		 -> dbuf(80), 
  3929 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3930 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  3931 ;;		 -> dbuf(80), 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  2    0[COMRAM] PTR unsigned char 
  3934 ;; Registers used:
  3935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3941 ;;      Params:         4       0       0       0       0       0       0       0       0
  3942 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3943 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3944 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3945 ;;Total ram usage:       10 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_efgtoa
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text8
  3955  00399E                     __ptext8:
  3956                           	opt callstack 0
  3957  00399E                     _strcpy:
  3958                           	opt callstack 26
  3959  00399E  C003  F007         	movff	strcpy@src,strcpy@s
  3960  0039A2  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3961  0039A6  C001  F009         	movff	strcpy@dest,strcpy@d
  3962  0039AA  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3963  0039AE                     l3186:
  3964  0039AE  5007               	movf	strcpy@s^0,w,c
  3965  0039B0  6E05               	movwf	??_strcpy^0,c
  3966  0039B2  5008               	movf	(strcpy@s+1)^0,w,c
  3967  0039B4  6E06               	movwf	(??_strcpy+1)^0,c
  3968  0039B6  4A07               	infsnz	strcpy@s^0,f,c
  3969  0039B8  2A08               	incf	(strcpy@s+1)^0,f,c
  3970  0039BA  C005  FFF6         	movff	??_strcpy,tblptrl
  3971  0039BE  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3972  0039C2  6AF8               	clrf	tblptru,c
  3973  0039C4  C009  FFD9         	movff	strcpy@d,fsr2l
  3974  0039C8  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3975  0039CC  4A09               	infsnz	strcpy@d^0,f,c
  3976  0039CE  2A0A               	incf	(strcpy@d+1)^0,f,c
  3977  0039D0  0E07               	movlw	(high __ramtop+-1)
  3978  0039D2  64F7               	cpfsgt	tblptrh,c
  3979  0039D4  D003               	bra	u3307
  3980  0039D6  0008               	tblrd		*
  3981  0039D8  50F5               	movf	tablat,w,c
  3982  0039DA  D005               	bra	u3300
  3983  0039DC                     u3307:
  3984  0039DC  CFF6 FFE1          	movff	tblptrl,fsr1l
  3985  0039E0  CFF7 FFE2          	movff	tblptrh,fsr1h
  3986  0039E4  50E7               	movf	indf1,w,c
  3987  0039E6                     u3300:
  3988  0039E6  6EDF               	movwf	indf2,c
  3989  0039E8  50DF               	movf	indf2,w,c
  3990  0039EA  A4D8               	btfss	status,2,c
  3991  0039EC  EFFA  F01C         	goto	u3311
  3992  0039F0  EFFC  F01C         	goto	u3310
  3993  0039F4                     u3311:
  3994  0039F4  EFD7  F01C         	goto	l3186
  3995  0039F8                     u3310:
  3996  0039F8  0012               	return		;funcret
  3997  0039FA                     __end_of_strcpy:
  3998                           	opt callstack 0
  3999                           
  4000 ;; *************** function _pad *****************
  4001 ;; Defined at:
  4002 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4005 ;;		 -> sprintf@f(6), 
  4006 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4007 ;;		 -> dbuf(80), 
  4008 ;;  p               2   20[COMRAM] int 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  w               2   25[COMRAM] int 
  4011 ;;  i               2   23[COMRAM] int 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  2   16[COMRAM] int 
  4014 ;; Registers used:
  4015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4021 ;;      Params:         6       0       0       0       0       0       0       0       0
  4022 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4023 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4024 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4025 ;;Total ram usage:       11 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    3
  4028 ;; This function calls:
  4029 ;;		_fputc
  4030 ;;		_fputs
  4031 ;;		_strlen
  4032 ;; This function is called by:
  4033 ;;		_efgtoa
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text9
  4038  003206                     __ptext9:
  4039                           	opt callstack 0
  4040  003206                     _pad:
  4041                           	opt callstack 23
  4042  003206                     
  4043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  4044  003206  0100               	movlb	0	; () banked
  4045  003208  A1F8               	btfss	_flags& (0+255),0,b
  4046  00320A  EF09  F019         	goto	u3191
  4047  00320E  EF0B  F019         	goto	u3190
  4048  003212                     u3191:
  4049  003212  EF15  F019         	goto	l3144
  4050  003216                     u3190:
  4051  003216                     
  4052                           ; BSR set to: 0
  4053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  4054  003216  C013  F00A         	movff	pad@buf,fputs@s
  4055  00321A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4056  00321E  C011  F00C         	movff	pad@fp,fputs@fp
  4057  003222  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4058  003226  ECA0  F01D         	call	_fputs	;wreg free
  4059  00322A                     l3144:
  4060                           
  4061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4062  00322A  BE16               	btfsc	(pad@p+1)^0,7,c
  4063  00322C  EF1A  F019         	goto	u3201
  4064  003230  EF1C  F019         	goto	u3200
  4065  003234                     u3201:
  4066  003234  EF22  F019         	goto	l3148
  4067  003238                     u3200:
  4068  003238  C015  F01A         	movff	pad@p,pad@w
  4069  00323C  C016  F01B         	movff	pad@p+1,pad@w+1
  4070  003240  EF26  F019         	goto	l242
  4071  003244                     l3148:
  4072  003244  0E00               	movlw	0
  4073  003246  6E1B               	movwf	(pad@w+1)^0,c
  4074  003248  0E00               	movlw	0
  4075  00324A  6E1A               	movwf	pad@w^0,c
  4076  00324C                     l242:
  4077                           
  4078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4079  00324C  0E00               	movlw	0
  4080  00324E  6E19               	movwf	(pad@i+1)^0,c
  4081  003250  0E00               	movlw	0
  4082  003252  6E18               	movwf	pad@i^0,c
  4083                           
  4084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4085  003254  EF38  F019         	goto	l3154
  4086  003258                     l3150:
  4087                           
  4088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  4089  003258  0E00               	movlw	0
  4090  00325A  6E02               	movwf	(fputc@c+1)^0,c
  4091  00325C  0E20               	movlw	32
  4092  00325E  6E01               	movwf	fputc@c^0,c
  4093  003260  C011  F003         	movff	pad@fp,fputc@fp
  4094  003264  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4095  003268  EC9E  F018         	call	_fputc	;wreg free
  4096  00326C                     
  4097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4098  00326C  4A18               	infsnz	pad@i^0,f,c
  4099  00326E  2A19               	incf	(pad@i+1)^0,f,c
  4100  003270                     l3154:
  4101                           
  4102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4103  003270  501A               	movf	pad@w^0,w,c
  4104  003272  5C18               	subwf	pad@i^0,w,c
  4105  003274  5019               	movf	(pad@i+1)^0,w,c
  4106  003276  0A80               	xorlw	128
  4107  003278  6E17               	movwf	??_pad^0,c
  4108  00327A  501B               	movf	(pad@w+1)^0,w,c
  4109  00327C  0A80               	xorlw	128
  4110  00327E  5817               	subwfb	??_pad^0,w,c
  4111  003280  A0D8               	btfss	status,0,c
  4112  003282  EF45  F019         	goto	u3211
  4113  003286  EF47  F019         	goto	u3210
  4114  00328A                     u3211:
  4115  00328A  EF2C  F019         	goto	l3150
  4116  00328E                     u3210:
  4117  00328E                     
  4118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  4119  00328E  0100               	movlb	0	; () banked
  4120  003290  B1F8               	btfsc	_flags& (0+255),0,b
  4121  003292  EF4D  F019         	goto	u3221
  4122  003296  EF4F  F019         	goto	u3220
  4123  00329A                     u3221:
  4124  00329A  EF59  F019         	goto	l3158
  4125  00329E                     u3220:
  4126  00329E                     
  4127                           ; BSR set to: 0
  4128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  4129  00329E  C013  F00A         	movff	pad@buf,fputs@s
  4130  0032A2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4131  0032A6  C011  F00C         	movff	pad@fp,fputs@fp
  4132  0032AA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4133  0032AE  ECA0  F01D         	call	_fputs	;wreg free
  4134  0032B2                     l3158:
  4135                           
  4136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  4137  0032B2  C013  F001         	movff	pad@buf,strlen@s
  4138  0032B6  C014  F002         	movff	pad@buf+1,strlen@s+1
  4139  0032BA  EC6E  F01E         	call	_strlen	;wreg free
  4140  0032BE  501A               	movf	pad@w^0,w,c
  4141  0032C0  2401               	addwf	?_strlen^0,w,c
  4142  0032C2  6E11               	movwf	?_pad^0,c
  4143  0032C4  501B               	movf	(pad@w+1)^0,w,c
  4144  0032C6  2002               	addwfc	(?_strlen+1)^0,w,c
  4145  0032C8  6E12               	movwf	(?_pad+1)^0,c
  4146  0032CA  0012               	return		;funcret
  4147  0032CC                     __end_of_pad:
  4148                           	opt callstack 0
  4149                           
  4150 ;; *************** function _strlen *****************
  4151 ;; Defined at:
  4152 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4155 ;;		 -> dbuf(80), 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4158 ;;		 -> dbuf(80), 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  2    0[COMRAM] unsigned int 
  4161 ;; Registers used:
  4162 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4168 ;;      Params:         2       0       0       0       0       0       0       0       0
  4169 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4171 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4172 ;;Total ram usage:        4 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; This function calls:
  4175 ;;		Nothing
  4176 ;; This function is called by:
  4177 ;;		_pad
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           	psect	text10
  4182  003CDC                     __ptext10:
  4183                           	opt callstack 0
  4184  003CDC                     _strlen:
  4185                           	opt callstack 25
  4186  003CDC  C001  F003         	movff	strlen@s,strlen@a
  4187  003CE0  C002  F004         	movff	strlen@s+1,strlen@a+1
  4188  003CE4  EF76  F01E         	goto	l2928
  4189  003CE8                     l2926:
  4190  003CE8  4A01               	infsnz	strlen@s^0,f,c
  4191  003CEA  2A02               	incf	(strlen@s+1)^0,f,c
  4192  003CEC                     l2928:
  4193  003CEC  C001  FFD9         	movff	strlen@s,fsr2l
  4194  003CF0  C002  FFDA         	movff	strlen@s+1,fsr2h
  4195  003CF4  50DF               	movf	indf2,w,c
  4196  003CF6  A4D8               	btfss	status,2,c
  4197  003CF8  EF80  F01E         	goto	u2771
  4198  003CFC  EF82  F01E         	goto	u2770
  4199  003D00                     u2771:
  4200  003D00  EF74  F01E         	goto	l2926
  4201  003D04                     u2770:
  4202  003D04  5003               	movf	strlen@a^0,w,c
  4203  003D06  5C01               	subwf	strlen@s^0,w,c
  4204  003D08  6E01               	movwf	?_strlen^0,c
  4205  003D0A  5004               	movf	(strlen@a+1)^0,w,c
  4206  003D0C  5802               	subwfb	(strlen@s+1)^0,w,c
  4207  003D0E  6E02               	movwf	(?_strlen+1)^0,c
  4208  003D10  0012               	return		;funcret
  4209  003D12                     __end_of_strlen:
  4210                           	opt callstack 0
  4211                           
  4212 ;; *************** function _fputs *****************
  4213 ;; Defined at:
  4214 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4217 ;;		 -> dbuf(80), 
  4218 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4219 ;;		 -> sprintf@f(6), 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  i               2   14[COMRAM] int 
  4222 ;;  c               1   13[COMRAM] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  2    9[COMRAM] int 
  4225 ;; Registers used:
  4226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4232 ;;      Params:         4       0       0       0       0       0       0       0       0
  4233 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4235 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4236 ;;Total ram usage:        7 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    2
  4239 ;; This function calls:
  4240 ;;		_fputc
  4241 ;; This function is called by:
  4242 ;;		_pad
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text11
  4247  003B40                     __ptext11:
  4248                           	opt callstack 0
  4249  003B40                     _fputs:
  4250                           	opt callstack 23
  4251  003B40  0E00               	movlw	0
  4252  003B42  6E10               	movwf	(fputs@i+1)^0,c
  4253  003B44  0E00               	movlw	0
  4254  003B46  6E0F               	movwf	fputs@i^0,c
  4255  003B48  EFB1  F01D         	goto	l2922
  4256  003B4C                     l2918:
  4257  003B4C  C00E  F001         	movff	fputs@c,fputc@c
  4258  003B50  6A02               	clrf	(fputc@c+1)^0,c
  4259  003B52  C00C  F003         	movff	fputs@fp,fputc@fp
  4260  003B56  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4261  003B5A  EC9E  F018         	call	_fputc	;wreg free
  4262  003B5E  4A0F               	infsnz	fputs@i^0,f,c
  4263  003B60  2A10               	incf	(fputs@i+1)^0,f,c
  4264  003B62                     l2922:
  4265  003B62  500F               	movf	fputs@i^0,w,c
  4266  003B64  240A               	addwf	fputs@s^0,w,c
  4267  003B66  6ED9               	movwf	fsr2l,c
  4268  003B68  5010               	movf	(fputs@i+1)^0,w,c
  4269  003B6A  200B               	addwfc	(fputs@s+1)^0,w,c
  4270  003B6C  6EDA               	movwf	fsr2h,c
  4271  003B6E  50DF               	movf	indf2,w,c
  4272  003B70  6E0E               	movwf	fputs@c^0,c
  4273  003B72  500E               	movf	fputs@c^0,w,c
  4274  003B74  A4D8               	btfss	status,2,c
  4275  003B76  EFBF  F01D         	goto	u2761
  4276  003B7A  EFC1  F01D         	goto	u2760
  4277  003B7E                     u2761:
  4278  003B7E  EFA6  F01D         	goto	l2918
  4279  003B82                     u2760:
  4280  003B82  0012               	return		;funcret
  4281  003B84                     __end_of_fputs:
  4282                           	opt callstack 0
  4283                           
  4284 ;; *************** function _fputc *****************
  4285 ;; Defined at:
  4286 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  c               2    0[COMRAM] int 
  4289 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4290 ;;		 -> sprintf@f(6), 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  2    0[COMRAM] int 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4302 ;;      Params:         4       0       0       0       0       0       0       0       0
  4303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4304 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4305 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4306 ;;Total ram usage:        9 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    1
  4309 ;; This function calls:
  4310 ;;		_putch
  4311 ;; This function is called by:
  4312 ;;		_pad
  4313 ;;		_vfpfcnvrt
  4314 ;;		_fputs
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           	psect	text12
  4319  00313C                     __ptext12:
  4320                           	opt callstack 0
  4321  00313C                     _fputc:
  4322                           	opt callstack 26
  4323  00313C  5003               	movf	fputc@fp^0,w,c
  4324  00313E  1004               	iorwf	(fputc@fp+1)^0,w,c
  4325  003140  B4D8               	btfsc	status,2,c
  4326  003142  EFA5  F018         	goto	u2721
  4327  003146  EFA7  F018         	goto	u2720
  4328  00314A                     u2721:
  4329  00314A  EFB0  F018         	goto	l2906
  4330  00314E                     u2720:
  4331  00314E  5003               	movf	fputc@fp^0,w,c
  4332  003150  1004               	iorwf	(fputc@fp+1)^0,w,c
  4333  003152  A4D8               	btfss	status,2,c
  4334  003154  EFAE  F018         	goto	u2731
  4335  003158  EFB0  F018         	goto	u2730
  4336  00315C                     u2731:
  4337  00315C  EFB5  F018         	goto	l2908
  4338  003160                     u2730:
  4339  003160                     l2906:
  4340  003160  5001               	movf	fputc@c^0,w,c
  4341  003162  EC11  F01F         	call	_putch
  4342  003166  EF02  F019         	goto	l1130
  4343  00316A                     l2908:
  4344  00316A  EE20 F004          	lfsr	2,4
  4345  00316E  5003               	movf	fputc@fp^0,w,c
  4346  003170  26D9               	addwf	fsr2l,f,c
  4347  003172  5004               	movf	(fputc@fp+1)^0,w,c
  4348  003174  22DA               	addwfc	fsr2h,f,c
  4349  003176  50DE               	movf	postinc2,w,c
  4350  003178  10DE               	iorwf	postinc2,w,c
  4351  00317A  B4D8               	btfsc	status,2,c
  4352  00317C  EFC2  F018         	goto	u2741
  4353  003180  EFC4  F018         	goto	u2740
  4354  003184                     u2741:
  4355  003184  EFDF  F018         	goto	l2912
  4356  003188                     u2740:
  4357  003188  EE20 F004          	lfsr	2,4
  4358  00318C  5003               	movf	fputc@fp^0,w,c
  4359  00318E  26D9               	addwf	fsr2l,f,c
  4360  003190  5004               	movf	(fputc@fp+1)^0,w,c
  4361  003192  22DA               	addwfc	fsr2h,f,c
  4362  003194  EE10 F002          	lfsr	1,2
  4363  003198  5003               	movf	fputc@fp^0,w,c
  4364  00319A  26E1               	addwf	fsr1l,f,c
  4365  00319C  5004               	movf	(fputc@fp+1)^0,w,c
  4366  00319E  22E2               	addwfc	fsr1h,f,c
  4367  0031A0  50DE               	movf	postinc2,w,c
  4368  0031A2  5CE6               	subwf	postinc1,w,c
  4369  0031A4  50E6               	movf	postinc1,w,c
  4370  0031A6  0A80               	xorlw	128
  4371  0031A8  6E09               	movwf	(??_fputc+4)^0,c
  4372  0031AA  50DE               	movf	postinc2,w,c
  4373  0031AC  0A80               	xorlw	128
  4374  0031AE  5809               	subwfb	(??_fputc+4)^0,w,c
  4375  0031B0  B0D8               	btfsc	status,0,c
  4376  0031B2  EFDD  F018         	goto	u2751
  4377  0031B6  EFDF  F018         	goto	u2750
  4378  0031BA                     u2751:
  4379  0031BA  EF02  F019         	goto	l1130
  4380  0031BE                     u2750:
  4381  0031BE                     l2912:
  4382  0031BE  EE20 F002          	lfsr	2,2
  4383  0031C2  5003               	movf	fputc@fp^0,w,c
  4384  0031C4  26D9               	addwf	fsr2l,f,c
  4385  0031C6  5004               	movf	(fputc@fp+1)^0,w,c
  4386  0031C8  22DA               	addwfc	fsr2h,f,c
  4387  0031CA  CFDE F005          	movff	postinc2,??_fputc
  4388  0031CE  CFDD F006          	movff	postdec2,??_fputc+1
  4389  0031D2  C003  FFD9         	movff	fputc@fp,fsr2l
  4390  0031D6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4391  0031DA  CFDE F007          	movff	postinc2,??_fputc+2
  4392  0031DE  CFDD F008          	movff	postdec2,??_fputc+3
  4393  0031E2  5005               	movf	??_fputc^0,w,c
  4394  0031E4  2407               	addwf	(??_fputc+2)^0,w,c
  4395  0031E6  6ED9               	movwf	fsr2l,c
  4396  0031E8  5006               	movf	(??_fputc+1)^0,w,c
  4397  0031EA  2008               	addwfc	(??_fputc+3)^0,w,c
  4398  0031EC  6EDA               	movwf	fsr2h,c
  4399  0031EE  C001  FFDF         	movff	fputc@c,indf2
  4400  0031F2  EE20 F002          	lfsr	2,2
  4401  0031F6  5003               	movf	fputc@fp^0,w,c
  4402  0031F8  26D9               	addwf	fsr2l,f,c
  4403  0031FA  5004               	movf	(fputc@fp+1)^0,w,c
  4404  0031FC  22DA               	addwfc	fsr2h,f,c
  4405  0031FE  2ADE               	incf	postinc2,f,c
  4406  003200  0E00               	movlw	0
  4407  003202  22DD               	addwfc	postdec2,f,c
  4408  003204                     l1130:
  4409  003204  0012               	return		;funcret
  4410  003206                     __end_of_fputc:
  4411                           	opt callstack 0
  4412                           
  4413 ;; *************** function _putch *****************
  4414 ;; Defined at:
  4415 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/putch.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  c               1    wreg     unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  c               1    0[COMRAM] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4429 ;;      Params:         0       0       0       0       0       0       0       0       0
  4430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4432 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4433 ;;Total ram usage:        0 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_fputc
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text13
  4443  003E22                     __ptext13:
  4444                           	opt callstack 0
  4445  003E22                     _putch:
  4446                           	opt callstack 26
  4447  003E22  0012               	return		;funcret
  4448  003E24                     __end_of_putch:
  4449                           	opt callstack 0
  4450                           
  4451 ;; *************** function _floorf *****************
  4452 ;; Defined at:
  4453 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  x               4   25[COMRAM] float 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  u               4   41[COMRAM] struct .
  4458 ;;  m               4   35[COMRAM] unsigned long 
  4459 ;;  e               2   39[COMRAM] int 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  4   25[COMRAM] float 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4469 ;;      Params:         4       0       0       0       0       0       0       0       0
  4470 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4471 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4472 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4473 ;;Total ram usage:       20 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_efgtoa
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text14
  4483  002518                     __ptext14:
  4484                           	opt callstack 0
  4485  002518                     _floorf:
  4486                           	opt callstack 26
  4487  002518  C100  F02A         	movff	floorf@F524,floorf@u
  4488  00251C  C101  F02B         	movff	floorf@F524+1,floorf@u+1
  4489  002520  C102  F02C         	movff	floorf@F524+2,floorf@u+2
  4490  002524  C103  F02D         	movff	floorf@F524+3,floorf@u+3
  4491  002528  C01A  F02A         	movff	floorf@x,floorf@u
  4492  00252C  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4493  002530  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4494  002534  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4495  002538  0E81               	movlw	129
  4496  00253A  6E1E               	movwf	??_floorf^0,c
  4497  00253C  0EFF               	movlw	255
  4498  00253E  6E1F               	movwf	(??_floorf+1)^0,c
  4499  002540  C02A  F020         	movff	floorf@u,??_floorf+2
  4500  002544  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4501  002548  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4502  00254C  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4503  002550  0E18               	movlw	24
  4504  002552  EFB0  F012         	goto	u3350
  4505  002556                     u3355:
  4506  002556  90D8               	bcf	status,0,c
  4507  002558  3223               	rrcf	(??_floorf+5)^0,f,c
  4508  00255A  3222               	rrcf	(??_floorf+4)^0,f,c
  4509  00255C  3221               	rrcf	(??_floorf+3)^0,f,c
  4510  00255E  3220               	rrcf	(??_floorf+2)^0,f,c
  4511  002560                     u3350:
  4512  002560  2EE8               	decfsz	wreg,f,c
  4513  002562  EFAB  F012         	goto	u3355
  4514  002566  5020               	movf	(??_floorf+2)^0,w,c
  4515  002568  241E               	addwf	??_floorf^0,w,c
  4516  00256A  6E28               	movwf	floorf@e^0,c
  4517  00256C  0E00               	movlw	0
  4518  00256E  201F               	addwfc	(??_floorf+1)^0,w,c
  4519  002570  6E29               	movwf	(floorf@e+1)^0,c
  4520  002572  BE29               	btfsc	(floorf@e+1)^0,7,c
  4521  002574  EFC5  F012         	goto	u3361
  4522  002578  5029               	movf	(floorf@e+1)^0,w,c
  4523  00257A  E109               	bnz	u3360
  4524  00257C  0E17               	movlw	23
  4525  00257E  5C28               	subwf	floorf@e^0,w,c
  4526  002580  A0D8               	btfss	status,0,c
  4527  002582  EFC5  F012         	goto	u3361
  4528  002586  EFC7  F012         	goto	u3360
  4529  00258A                     u3361:
  4530  00258A  EFD1  F012         	goto	l3204
  4531  00258E                     u3360:
  4532  00258E                     l3202:
  4533  00258E  C01A  F01A         	movff	floorf@x,?_floorf
  4534  002592  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4535  002596  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4536  00259A  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4537  00259E  EF94  F013         	goto	l1091
  4538  0025A2                     l3204:
  4539  0025A2  BE29               	btfsc	(floorf@e+1)^0,7,c
  4540  0025A4  EFD6  F012         	goto	u3371
  4541  0025A8  EFD8  F012         	goto	u3370
  4542  0025AC                     u3371:
  4543  0025AC  EF48  F013         	goto	l3214
  4544  0025B0                     u3370:
  4545  0025B0  C028  F01E         	movff	floorf@e,??_floorf
  4546  0025B4  0EFF               	movlw	255
  4547  0025B6  6E1F               	movwf	(??_floorf+1)^0,c
  4548  0025B8  0EFF               	movlw	255
  4549  0025BA  6E20               	movwf	(??_floorf+2)^0,c
  4550  0025BC  0E7F               	movlw	127
  4551  0025BE  6E21               	movwf	(??_floorf+3)^0,c
  4552  0025C0  0E00               	movlw	0
  4553  0025C2  6E22               	movwf	(??_floorf+4)^0,c
  4554  0025C4                     u3385:
  4555  0025C4  661E               	tstfsz	??_floorf^0,c
  4556  0025C6  EFE7  F012         	goto	u3386
  4557  0025CA  EFEF  F012         	goto	u3387
  4558  0025CE                     u3386:
  4559  0025CE  3422               	rlcf	(??_floorf+4)^0,w,c
  4560  0025D0  3222               	rrcf	(??_floorf+4)^0,f,c
  4561  0025D2  3221               	rrcf	(??_floorf+3)^0,f,c
  4562  0025D4  3220               	rrcf	(??_floorf+2)^0,f,c
  4563  0025D6  321F               	rrcf	(??_floorf+1)^0,f,c
  4564  0025D8  2E1E               	decfsz	??_floorf^0,f,c
  4565  0025DA  EFE2  F012         	goto	u3385
  4566  0025DE                     u3387:
  4567  0025DE  C01F  F024         	movff	??_floorf+1,floorf@m
  4568  0025E2  C020  F025         	movff	??_floorf+2,floorf@m+1
  4569  0025E6  C021  F026         	movff	??_floorf+3,floorf@m+2
  4570  0025EA  C022  F027         	movff	??_floorf+4,floorf@m+3
  4571  0025EE  5024               	movf	floorf@m^0,w,c
  4572  0025F0  142A               	andwf	floorf@u^0,w,c
  4573  0025F2  6E1E               	movwf	??_floorf^0,c
  4574  0025F4  5025               	movf	(floorf@m+1)^0,w,c
  4575  0025F6  142B               	andwf	(floorf@u+1)^0,w,c
  4576  0025F8  6E1F               	movwf	(??_floorf+1)^0,c
  4577  0025FA  5026               	movf	(floorf@m+2)^0,w,c
  4578  0025FC  142C               	andwf	(floorf@u+2)^0,w,c
  4579  0025FE  6E20               	movwf	(??_floorf+2)^0,c
  4580  002600  5027               	movf	(floorf@m+3)^0,w,c
  4581  002602  142D               	andwf	(floorf@u+3)^0,w,c
  4582  002604  6E21               	movwf	(??_floorf+3)^0,c
  4583  002606  501E               	movf	??_floorf^0,w,c
  4584  002608  101F               	iorwf	(??_floorf+1)^0,w,c
  4585  00260A  1020               	iorwf	(??_floorf+2)^0,w,c
  4586  00260C  1021               	iorwf	(??_floorf+3)^0,w,c
  4587  00260E  A4D8               	btfss	status,2,c
  4588  002610  EF0C  F013         	goto	u3391
  4589  002614  EF0E  F013         	goto	u3390
  4590  002618                     u3391:
  4591  002618  EF10  F013         	goto	l3210
  4592  00261C                     u3390:
  4593  00261C  EFC7  F012         	goto	l3202
  4594  002620                     l3210:
  4595  002620  C02A  F01E         	movff	floorf@u,??_floorf
  4596  002624  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4597  002628  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4598  00262C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4599  002630  0E20               	movlw	32
  4600  002632  EF20  F013         	goto	u3400
  4601  002636                     u3405:
  4602  002636  90D8               	bcf	status,0,c
  4603  002638  3221               	rrcf	(??_floorf+3)^0,f,c
  4604  00263A  3220               	rrcf	(??_floorf+2)^0,f,c
  4605  00263C  321F               	rrcf	(??_floorf+1)^0,f,c
  4606  00263E  321E               	rrcf	??_floorf^0,f,c
  4607  002640                     u3400:
  4608  002640  2EE8               	decfsz	wreg,f,c
  4609  002642  EF1B  F013         	goto	u3405
  4610  002646  501E               	movf	??_floorf^0,w,c
  4611  002648  101F               	iorwf	(??_floorf+1)^0,w,c
  4612  00264A  1020               	iorwf	(??_floorf+2)^0,w,c
  4613  00264C  1021               	iorwf	(??_floorf+3)^0,w,c
  4614  00264E  B4D8               	btfsc	status,2,c
  4615  002650  EF2C  F013         	goto	u3411
  4616  002654  EF2E  F013         	goto	u3410
  4617  002658                     u3411:
  4618  002658  EF36  F013         	goto	l1094
  4619  00265C                     u3410:
  4620  00265C  5024               	movf	floorf@m^0,w,c
  4621  00265E  262A               	addwf	floorf@u^0,f,c
  4622  002660  5025               	movf	(floorf@m+1)^0,w,c
  4623  002662  222B               	addwfc	(floorf@u+1)^0,f,c
  4624  002664  5026               	movf	(floorf@m+2)^0,w,c
  4625  002666  222C               	addwfc	(floorf@u+2)^0,f,c
  4626  002668  5027               	movf	(floorf@m+3)^0,w,c
  4627  00266A  222D               	addwfc	(floorf@u+3)^0,f,c
  4628  00266C                     l1094:
  4629  00266C  1C24               	comf	floorf@m^0,w,c
  4630  00266E  6E1E               	movwf	??_floorf^0,c
  4631  002670  1C25               	comf	(floorf@m+1)^0,w,c
  4632  002672  6E1F               	movwf	(??_floorf+1)^0,c
  4633  002674  1C26               	comf	(floorf@m+2)^0,w,c
  4634  002676  6E20               	movwf	(??_floorf+2)^0,c
  4635  002678  1C27               	comf	(floorf@m+3)^0,w,c
  4636  00267A  6E21               	movwf	(??_floorf+3)^0,c
  4637  00267C  501E               	movf	??_floorf^0,w,c
  4638  00267E  162A               	andwf	floorf@u^0,f,c
  4639  002680  501F               	movf	(??_floorf+1)^0,w,c
  4640  002682  162B               	andwf	(floorf@u+1)^0,f,c
  4641  002684  5020               	movf	(??_floorf+2)^0,w,c
  4642  002686  162C               	andwf	(floorf@u+2)^0,f,c
  4643  002688  5021               	movf	(??_floorf+3)^0,w,c
  4644  00268A  162D               	andwf	(floorf@u+3)^0,f,c
  4645  00268C  EF8C  F013         	goto	l3222
  4646  002690                     l3214:
  4647  002690  C02A  F01E         	movff	floorf@u,??_floorf
  4648  002694  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4649  002698  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4650  00269C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4651  0026A0  0E20               	movlw	32
  4652  0026A2  EF58  F013         	goto	u3420
  4653  0026A6                     u3425:
  4654  0026A6  90D8               	bcf	status,0,c
  4655  0026A8  3221               	rrcf	(??_floorf+3)^0,f,c
  4656  0026AA  3220               	rrcf	(??_floorf+2)^0,f,c
  4657  0026AC  321F               	rrcf	(??_floorf+1)^0,f,c
  4658  0026AE  321E               	rrcf	??_floorf^0,f,c
  4659  0026B0                     u3420:
  4660  0026B0  2EE8               	decfsz	wreg,f,c
  4661  0026B2  EF53  F013         	goto	u3425
  4662  0026B6  501E               	movf	??_floorf^0,w,c
  4663  0026B8  101F               	iorwf	(??_floorf+1)^0,w,c
  4664  0026BA  1020               	iorwf	(??_floorf+2)^0,w,c
  4665  0026BC  1021               	iorwf	(??_floorf+3)^0,w,c
  4666  0026BE  A4D8               	btfss	status,2,c
  4667  0026C0  EF64  F013         	goto	u3431
  4668  0026C4  EF66  F013         	goto	u3430
  4669  0026C8                     u3431:
  4670  0026C8  EF70  F013         	goto	l3218
  4671  0026CC                     u3430:
  4672  0026CC  0E00               	movlw	0
  4673  0026CE  6E2A               	movwf	floorf@u^0,c
  4674  0026D0  0E00               	movlw	0
  4675  0026D2  6E2B               	movwf	(floorf@u+1)^0,c
  4676  0026D4  0E00               	movlw	0
  4677  0026D6  6E2C               	movwf	(floorf@u+2)^0,c
  4678  0026D8  0E00               	movlw	0
  4679  0026DA  6E2D               	movwf	(floorf@u+3)^0,c
  4680  0026DC  EF8C  F013         	goto	l3222
  4681  0026E0                     l3218:
  4682  0026E0  90D8               	bcf	status,0,c
  4683  0026E2  342A               	rlcf	floorf@u^0,w,c
  4684  0026E4  6E1E               	movwf	??_floorf^0,c
  4685  0026E6  342B               	rlcf	(floorf@u+1)^0,w,c
  4686  0026E8  6E1F               	movwf	(??_floorf+1)^0,c
  4687  0026EA  342C               	rlcf	(floorf@u+2)^0,w,c
  4688  0026EC  6E20               	movwf	(??_floorf+2)^0,c
  4689  0026EE  342D               	rlcf	(floorf@u+3)^0,w,c
  4690  0026F0  6E21               	movwf	(??_floorf+3)^0,c
  4691  0026F2  501E               	movf	??_floorf^0,w,c
  4692  0026F4  101F               	iorwf	(??_floorf+1)^0,w,c
  4693  0026F6  1020               	iorwf	(??_floorf+2)^0,w,c
  4694  0026F8  1021               	iorwf	(??_floorf+3)^0,w,c
  4695  0026FA  B4D8               	btfsc	status,2,c
  4696  0026FC  EF82  F013         	goto	u3441
  4697  002700  EF84  F013         	goto	u3440
  4698  002704                     u3441:
  4699  002704  EF8C  F013         	goto	l3222
  4700  002708                     u3440:
  4701  002708  0E00               	movlw	0
  4702  00270A  6E2A               	movwf	floorf@u^0,c
  4703  00270C  0E00               	movlw	0
  4704  00270E  6E2B               	movwf	(floorf@u+1)^0,c
  4705  002710  0E80               	movlw	128
  4706  002712  6E2C               	movwf	(floorf@u+2)^0,c
  4707  002714  0EBF               	movlw	191
  4708  002716  6E2D               	movwf	(floorf@u+3)^0,c
  4709  002718                     l3222:
  4710  002718  C02A  F01A         	movff	floorf@u,?_floorf
  4711  00271C  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4712  002720  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4713  002724  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4714  002728                     l1091:
  4715  002728  0012               	return		;funcret
  4716  00272A                     __end_of_floorf:
  4717                           	opt callstack 0
  4718                           
  4719 ;; *************** function ___fpclassifyf *****************
  4720 ;; Defined at:
  4721 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  x               4    0[COMRAM] float 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  u               4   10[COMRAM] struct .
  4726 ;;  e               2    8[COMRAM] int 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  2    0[COMRAM] int 
  4729 ;; Registers used:
  4730 ;;		wreg, status,2, status,0
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4736 ;;      Params:         4       0       0       0       0       0       0       0       0
  4737 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4738 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4739 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4740 ;;Total ram usage:       14 bytes
  4741 ;; Hardware stack levels used:    1
  4742 ;; This function calls:
  4743 ;;		Nothing
  4744 ;; This function is called by:
  4745 ;;		_efgtoa
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text15
  4750  002E9A                     __ptext15:
  4751                           	opt callstack 0
  4752  002E9A                     ___fpclassifyf:
  4753                           	opt callstack 26
  4754  002E9A  C0EE  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4755  002E9E  C0EF  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4756  002EA2  C0F0  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4757  002EA6  C0F1  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4758  002EAA  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4759  002EAE  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4760  002EB2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4761  002EB6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4762  002EBA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4763  002EBE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4764  002EC2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4765  002EC6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4766  002ECA  0E18               	movlw	24
  4767  002ECC  EF6D  F017         	goto	u3230
  4768  002ED0                     u3235:
  4769  002ED0  90D8               	bcf	status,0,c
  4770  002ED2  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4771  002ED4  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4772  002ED6  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4773  002ED8  3205               	rrcf	??___fpclassifyf^0,f,c
  4774  002EDA                     u3230:
  4775  002EDA  2EE8               	decfsz	wreg,f,c
  4776  002EDC  EF68  F017         	goto	u3235
  4777  002EE0  5005               	movf	??___fpclassifyf^0,w,c
  4778  002EE2  6E09               	movwf	___fpclassifyf@e^0,c
  4779  002EE4  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4780  002EE6  5009               	movf	___fpclassifyf@e^0,w,c
  4781  002EE8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4782  002EEA  A4D8               	btfss	status,2,c
  4783  002EEC  EF7A  F017         	goto	u3241
  4784  002EF0  EF7C  F017         	goto	u3240
  4785  002EF4                     u3241:
  4786  002EF4  EF9C  F017         	goto	l3174
  4787  002EF8                     u3240:
  4788  002EF8  90D8               	bcf	status,0,c
  4789  002EFA  340B               	rlcf	___fpclassifyf@u^0,w,c
  4790  002EFC  6E05               	movwf	??___fpclassifyf^0,c
  4791  002EFE  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4792  002F00  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4793  002F02  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4794  002F04  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4795  002F06  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4796  002F08  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4797  002F0A  5005               	movf	??___fpclassifyf^0,w,c
  4798  002F0C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4799  002F0E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4800  002F10  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4801  002F12  A4D8               	btfss	status,2,c
  4802  002F14  EF8E  F017         	goto	u3251
  4803  002F18  EF90  F017         	goto	u3250
  4804  002F1C                     u3251:
  4805  002F1C  EF96  F017         	goto	l3170
  4806  002F20                     u3250:
  4807  002F20  0E00               	movlw	0
  4808  002F22  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4809  002F24  0E02               	movlw	2
  4810  002F26  6E01               	movwf	?___fpclassifyf^0,c
  4811  002F28  EFCB  F017         	goto	l1053
  4812  002F2C                     l3170:
  4813  002F2C  0E00               	movlw	0
  4814  002F2E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4815  002F30  0E03               	movlw	3
  4816  002F32  6E01               	movwf	?___fpclassifyf^0,c
  4817  002F34  EFCB  F017         	goto	l1053
  4818  002F38                     l3174:
  4819  002F38  2809               	incf	___fpclassifyf@e^0,w,c
  4820  002F3A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4821  002F3C  A4D8               	btfss	status,2,c
  4822  002F3E  EFA3  F017         	goto	u3261
  4823  002F42  EFA5  F017         	goto	u3260
  4824  002F46                     u3261:
  4825  002F46  EFC7  F017         	goto	l3180
  4826  002F4A                     u3260:
  4827  002F4A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4828  002F4E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4829  002F52  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4830  002F56  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4831  002F5A  0E09               	movlw	9
  4832  002F5C                     u3275:
  4833  002F5C  90D8               	bcf	status,0,c
  4834  002F5E  3605               	rlcf	??___fpclassifyf^0,f,c
  4835  002F60  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4836  002F62  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4837  002F64  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4838  002F66  2EE8               	decfsz	wreg,f,c
  4839  002F68  EFAE  F017         	goto	u3275
  4840  002F6C  5005               	movf	??___fpclassifyf^0,w,c
  4841  002F6E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4842  002F70  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4843  002F72  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4844  002F74  B4D8               	btfsc	status,2,c
  4845  002F76  EFBF  F017         	goto	u3281
  4846  002F7A  EFC2  F017         	goto	u3280
  4847  002F7E                     u3281:
  4848  002F7E  0E01               	movlw	1
  4849  002F80  EFC3  F017         	goto	u3290
  4850  002F84                     u3280:
  4851  002F84  0E00               	movlw	0
  4852  002F86                     u3290:
  4853  002F86  6E01               	movwf	?___fpclassifyf^0,c
  4854  002F88  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4855  002F8A  EFCB  F017         	goto	l1053
  4856  002F8E                     l3180:
  4857  002F8E  0E00               	movlw	0
  4858  002F90  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4859  002F92  0E04               	movlw	4
  4860  002F94  6E01               	movwf	?___fpclassifyf^0,c
  4861  002F96                     l1053:
  4862  002F96  0012               	return		;funcret
  4863  002F98                     __end_of___fpclassifyf:
  4864                           	opt callstack 0
  4865                           
  4866 ;; *************** function ___fltol *****************
  4867 ;; Defined at:
  4868 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  f1              4    0[COMRAM] int 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  exp1            1    9[COMRAM] unsigned char 
  4873 ;;  sign1           1    8[COMRAM] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  4    0[COMRAM] long 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4883 ;;      Params:         4       0       0       0       0       0       0       0       0
  4884 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4885 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4886 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4887 ;;Total ram usage:       10 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_efgtoa
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text16
  4897  002C90                     __ptext16:
  4898                           	opt callstack 0
  4899  002C90                     ___fltol:
  4900                           	opt callstack 26
  4901  002C90  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4902  002C92  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4903  002C94  6E0A               	movwf	___fltol@exp1^0,c
  4904  002C96  500A               	movf	___fltol@exp1^0,w,c
  4905  002C98  A4D8               	btfss	status,2,c
  4906  002C9A  EF51  F016         	goto	u4101
  4907  002C9E  EF53  F016         	goto	u4100
  4908  002CA2                     u4101:
  4909  002CA2  EF5D  F016         	goto	l3642
  4910  002CA6                     u4100:
  4911  002CA6                     l3638:
  4912  002CA6  0E00               	movlw	0
  4913  002CA8  6E01               	movwf	?___fltol^0,c
  4914  002CAA  0E00               	movlw	0
  4915  002CAC  6E02               	movwf	(?___fltol+1)^0,c
  4916  002CAE  0E00               	movlw	0
  4917  002CB0  6E03               	movwf	(?___fltol+2)^0,c
  4918  002CB2  0E00               	movlw	0
  4919  002CB4  6E04               	movwf	(?___fltol+3)^0,c
  4920  002CB6  EFCA  F016         	goto	l669
  4921  002CBA                     l3642:
  4922  002CBA  C001  F005         	movff	___fltol@f1,??___fltol
  4923  002CBE  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4924  002CC2  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4925  002CC6  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4926  002CCA  0E20               	movlw	32
  4927  002CCC  EF6D  F016         	goto	u4110
  4928  002CD0                     u4115:
  4929  002CD0  90D8               	bcf	status,0,c
  4930  002CD2  3208               	rrcf	(??___fltol+3)^0,f,c
  4931  002CD4  3207               	rrcf	(??___fltol+2)^0,f,c
  4932  002CD6  3206               	rrcf	(??___fltol+1)^0,f,c
  4933  002CD8  3205               	rrcf	??___fltol^0,f,c
  4934  002CDA                     u4110:
  4935  002CDA  2EE8               	decfsz	wreg,f,c
  4936  002CDC  EF68  F016         	goto	u4115
  4937  002CE0  5005               	movf	??___fltol^0,w,c
  4938  002CE2  6E09               	movwf	___fltol@sign1^0,c
  4939  002CE4  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4940  002CE6  0EFF               	movlw	255
  4941  002CE8  1601               	andwf	___fltol@f1^0,f,c
  4942  002CEA  0EFF               	movlw	255
  4943  002CEC  1602               	andwf	(___fltol@f1+1)^0,f,c
  4944  002CEE  0EFF               	movlw	255
  4945  002CF0  1603               	andwf	(___fltol@f1+2)^0,f,c
  4946  002CF2  0E00               	movlw	0
  4947  002CF4  1604               	andwf	(___fltol@f1+3)^0,f,c
  4948  002CF6  0E96               	movlw	150
  4949  002CF8  5E0A               	subwf	___fltol@exp1^0,f,c
  4950  002CFA  BE0A               	btfsc	___fltol@exp1^0,7,c
  4951  002CFC  EF84  F016         	goto	u4120
  4952  002D00  EF82  F016         	goto	u4121
  4953  002D04                     u4121:
  4954  002D04  EF9A  F016         	goto	l3662
  4955  002D08                     u4120:
  4956  002D08  500A               	movf	___fltol@exp1^0,w,c
  4957  002D0A  0A80               	xorlw	128
  4958  002D0C  0F97               	addlw	151
  4959  002D0E  B0D8               	btfsc	status,0,c
  4960  002D10  EF8C  F016         	goto	u4131
  4961  002D14  EF8E  F016         	goto	u4130
  4962  002D18                     u4131:
  4963  002D18  EF90  F016         	goto	l3658
  4964  002D1C                     u4130:
  4965  002D1C  EF53  F016         	goto	l3638
  4966  002D20                     l3658:
  4967  002D20  90D8               	bcf	status,0,c
  4968  002D22  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4969  002D24  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4970  002D26  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4971  002D28  3201               	rrcf	___fltol@f1^0,f,c
  4972  002D2A  3E0A               	incfsz	___fltol@exp1^0,f,c
  4973  002D2C  EF90  F016         	goto	l3658
  4974  002D30  EFB2  F016         	goto	l3672
  4975  002D34                     l3662:
  4976  002D34  0E1F               	movlw	31
  4977  002D36  640A               	cpfsgt	___fltol@exp1^0,c
  4978  002D38  EFA0  F016         	goto	u4141
  4979  002D3C  EFA2  F016         	goto	u4140
  4980  002D40                     u4141:
  4981  002D40  EFAA  F016         	goto	l3670
  4982  002D44                     u4140:
  4983  002D44  EF53  F016         	goto	l3638
  4984  002D48                     l3668:
  4985  002D48  90D8               	bcf	status,0,c
  4986  002D4A  3601               	rlcf	___fltol@f1^0,f,c
  4987  002D4C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4988  002D4E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4989  002D50  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4990  002D52  060A               	decf	___fltol@exp1^0,f,c
  4991  002D54                     l3670:
  4992  002D54  500A               	movf	___fltol@exp1^0,w,c
  4993  002D56  A4D8               	btfss	status,2,c
  4994  002D58  EFB0  F016         	goto	u4151
  4995  002D5C  EFB2  F016         	goto	u4150
  4996  002D60                     u4151:
  4997  002D60  EFA4  F016         	goto	l3668
  4998  002D64                     u4150:
  4999  002D64                     l3672:
  5000  002D64  5009               	movf	___fltol@sign1^0,w,c
  5001  002D66  B4D8               	btfsc	status,2,c
  5002  002D68  EFB8  F016         	goto	u4161
  5003  002D6C  EFBA  F016         	goto	u4160
  5004  002D70                     u4161:
  5005  002D70  EFC2  F016         	goto	l3676
  5006  002D74                     u4160:
  5007  002D74  1E04               	comf	(___fltol@f1+3)^0,f,c
  5008  002D76  1E03               	comf	(___fltol@f1+2)^0,f,c
  5009  002D78  1E02               	comf	(___fltol@f1+1)^0,f,c
  5010  002D7A  6C01               	negf	___fltol@f1^0,c
  5011  002D7C  0E00               	movlw	0
  5012  002D7E  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5013  002D80  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5014  002D82  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5015  002D84                     l3676:
  5016  002D84  C001  F001         	movff	___fltol@f1,?___fltol
  5017  002D88  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5018  002D8C  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5019  002D90  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5020  002D94                     l669:
  5021  002D94  0012               	return		;funcret
  5022  002D96                     __end_of___fltol:
  5023                           	opt callstack 0
  5024                           
  5025 ;; *************** function ___flsub *****************
  5026 ;; Defined at:
  5027 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  b               4   25[COMRAM] long 
  5030 ;;  a               4   29[COMRAM] long 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  4   25[COMRAM] long 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0, cstack
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5042 ;;      Params:         8       0       0       0       0       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5045 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5046 ;;Total ram usage:        8 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    1
  5049 ;; This function calls:
  5050 ;;		___fladd
  5051 ;; This function is called by:
  5052 ;;		_efgtoa
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text17
  5057  003AFA                     __ptext17:
  5058                           	opt callstack 0
  5059  003AFA                     ___flsub:
  5060                           	opt callstack 25
  5061  003AFA  0E00               	movlw	0
  5062  003AFC  1A1E               	xorwf	___flsub@a^0,f,c
  5063  003AFE  0E00               	movlw	0
  5064  003B00  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5065  003B02  0E00               	movlw	0
  5066  003B04  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5067  003B06  0E80               	movlw	128
  5068  003B08  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5069  003B0A  C01A  F001         	movff	___flsub@b,___fladd@b
  5070  003B0E  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5071  003B12  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5072  003B16  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5073  003B1A  C01E  F005         	movff	___flsub@a,___fladd@a
  5074  003B1E  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5075  003B22  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5076  003B26  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5077  003B2A  EC1A  F00A         	call	___fladd	;wreg free
  5078  003B2E  C001  F01A         	movff	?___fladd,?___flsub
  5079  003B32  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5080  003B36  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5081  003B3A  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5082  003B3E  0012               	return		;funcret
  5083  003B40                     __end_of___flsub:
  5084                           	opt callstack 0
  5085                           
  5086 ;; *************** function ___fladd *****************
  5087 ;; Defined at:
  5088 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  b               4    0[COMRAM] long 
  5091 ;;  a               4    4[COMRAM] long 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  grs             1   15[COMRAM] unsigned char 
  5094 ;;  bexp            1   14[COMRAM] unsigned char 
  5095 ;;  aexp            1   13[COMRAM] unsigned char 
  5096 ;;  signs           1   12[COMRAM] unsigned char 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  4    0[COMRAM] unsigned char 
  5099 ;; Registers used:
  5100 ;;		wreg, status,2, status,0
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5106 ;;      Params:         8       0       0       0       0       0       0       0       0
  5107 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5108 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5109 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5110 ;;Total ram usage:       16 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; This function calls:
  5113 ;;		Nothing
  5114 ;; This function is called by:
  5115 ;;		_efgtoa
  5116 ;;		___flsub
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text18
  5121  001434                     __ptext18:
  5122                           	opt callstack 0
  5123  001434                     ___fladd:
  5124                           	opt callstack 25
  5125  001434  5004               	movf	(___fladd@b+3)^0,w,c
  5126  001436  0B80               	andlw	128
  5127  001438  6E0D               	movwf	___fladd@signs^0,c
  5128  00143A  5004               	movf	(___fladd@b+3)^0,w,c
  5129  00143C  2404               	addwf	(___fladd@b+3)^0,w,c
  5130  00143E  6E0F               	movwf	___fladd@bexp^0,c
  5131  001440  AE03               	btfss	(___fladd@b+2)^0,7,c
  5132  001442  EF25  F00A         	goto	u2801
  5133  001446  EF27  F00A         	goto	u2800
  5134  00144A                     u2801:
  5135  00144A  EF28  F00A         	goto	l2944
  5136  00144E                     u2800:
  5137  00144E  800F               	bsf	___fladd@bexp^0,0,c
  5138  001450                     l2944:
  5139  001450  500F               	movf	___fladd@bexp^0,w,c
  5140  001452  B4D8               	btfsc	status,2,c
  5141  001454  EF2E  F00A         	goto	u2811
  5142  001458  EF30  F00A         	goto	u2810
  5143  00145C                     u2811:
  5144  00145C  EF45  F00A         	goto	l2954
  5145  001460                     u2810:
  5146  001460  280F               	incf	___fladd@bexp^0,w,c
  5147  001462  A4D8               	btfss	status,2,c
  5148  001464  EF36  F00A         	goto	u2821
  5149  001468  EF38  F00A         	goto	u2820
  5150  00146C                     u2821:
  5151  00146C  EF40  F00A         	goto	l2950
  5152  001470                     u2820:
  5153  001470  0E00               	movlw	0
  5154  001472  6E01               	movwf	___fladd@b^0,c
  5155  001474  0E00               	movlw	0
  5156  001476  6E02               	movwf	(___fladd@b+1)^0,c
  5157  001478  0E00               	movlw	0
  5158  00147A  6E03               	movwf	(___fladd@b+2)^0,c
  5159  00147C  0E00               	movlw	0
  5160  00147E  6E04               	movwf	(___fladd@b+3)^0,c
  5161  001480                     l2950:
  5162  001480  8E03               	bsf	(___fladd@b+2)^0,7,c
  5163  001482  0E00               	movlw	0
  5164  001484  6E04               	movwf	(___fladd@b+3)^0,c
  5165  001486  EF4D  F00A         	goto	l2956
  5166  00148A                     l2954:
  5167  00148A  0E00               	movlw	0
  5168  00148C  6E01               	movwf	___fladd@b^0,c
  5169  00148E  0E00               	movlw	0
  5170  001490  6E02               	movwf	(___fladd@b+1)^0,c
  5171  001492  0E00               	movlw	0
  5172  001494  6E03               	movwf	(___fladd@b+2)^0,c
  5173  001496  0E00               	movlw	0
  5174  001498  6E04               	movwf	(___fladd@b+3)^0,c
  5175  00149A                     l2956:
  5176  00149A  5008               	movf	(___fladd@a+3)^0,w,c
  5177  00149C  0B80               	andlw	128
  5178  00149E  6E0E               	movwf	___fladd@aexp^0,c
  5179  0014A0  500D               	movf	___fladd@signs^0,w,c
  5180  0014A2  180E               	xorwf	___fladd@aexp^0,w,c
  5181  0014A4  B4D8               	btfsc	status,2,c
  5182  0014A6  EF57  F00A         	goto	u2831
  5183  0014AA  EF59  F00A         	goto	u2830
  5184  0014AE                     u2831:
  5185  0014AE  EF5A  F00A         	goto	l2962
  5186  0014B2                     u2830:
  5187  0014B2  8C0D               	bsf	___fladd@signs^0,6,c
  5188  0014B4                     l2962:
  5189  0014B4  5008               	movf	(___fladd@a+3)^0,w,c
  5190  0014B6  2408               	addwf	(___fladd@a+3)^0,w,c
  5191  0014B8  6E0E               	movwf	___fladd@aexp^0,c
  5192  0014BA  AE07               	btfss	(___fladd@a+2)^0,7,c
  5193  0014BC  EF62  F00A         	goto	u2841
  5194  0014C0  EF64  F00A         	goto	u2840
  5195  0014C4                     u2841:
  5196  0014C4  EF65  F00A         	goto	l2968
  5197  0014C8                     u2840:
  5198  0014C8  800E               	bsf	___fladd@aexp^0,0,c
  5199  0014CA                     l2968:
  5200  0014CA  500E               	movf	___fladd@aexp^0,w,c
  5201  0014CC  B4D8               	btfsc	status,2,c
  5202  0014CE  EF6B  F00A         	goto	u2851
  5203  0014D2  EF6D  F00A         	goto	u2850
  5204  0014D6                     u2851:
  5205  0014D6  EF82  F00A         	goto	l2978
  5206  0014DA                     u2850:
  5207  0014DA  280E               	incf	___fladd@aexp^0,w,c
  5208  0014DC  A4D8               	btfss	status,2,c
  5209  0014DE  EF73  F00A         	goto	u2861
  5210  0014E2  EF75  F00A         	goto	u2860
  5211  0014E6                     u2861:
  5212  0014E6  EF7D  F00A         	goto	l2974
  5213  0014EA                     u2860:
  5214  0014EA  0E00               	movlw	0
  5215  0014EC  6E05               	movwf	___fladd@a^0,c
  5216  0014EE  0E00               	movlw	0
  5217  0014F0  6E06               	movwf	(___fladd@a+1)^0,c
  5218  0014F2  0E00               	movlw	0
  5219  0014F4  6E07               	movwf	(___fladd@a+2)^0,c
  5220  0014F6  0E00               	movlw	0
  5221  0014F8  6E08               	movwf	(___fladd@a+3)^0,c
  5222  0014FA                     l2974:
  5223  0014FA  8E07               	bsf	(___fladd@a+2)^0,7,c
  5224  0014FC  0E00               	movlw	0
  5225  0014FE  6E08               	movwf	(___fladd@a+3)^0,c
  5226  001500  EF8A  F00A         	goto	l2980
  5227  001504                     l2978:
  5228  001504  0E00               	movlw	0
  5229  001506  6E05               	movwf	___fladd@a^0,c
  5230  001508  0E00               	movlw	0
  5231  00150A  6E06               	movwf	(___fladd@a+1)^0,c
  5232  00150C  0E00               	movlw	0
  5233  00150E  6E07               	movwf	(___fladd@a+2)^0,c
  5234  001510  0E00               	movlw	0
  5235  001512  6E08               	movwf	(___fladd@a+3)^0,c
  5236  001514                     l2980:
  5237  001514  500F               	movf	___fladd@bexp^0,w,c
  5238  001516  5C0E               	subwf	___fladd@aexp^0,w,c
  5239  001518  B0D8               	btfsc	status,0,c
  5240  00151A  EF91  F00A         	goto	u2871
  5241  00151E  EF93  F00A         	goto	u2870
  5242  001522                     u2871:
  5243  001522  EFBA  F00A         	goto	l3016
  5244  001526                     u2870:
  5245  001526  AC0D               	btfss	___fladd@signs^0,6,c
  5246  001528  EF98  F00A         	goto	u2881
  5247  00152C  EF9A  F00A         	goto	u2880
  5248  001530                     u2881:
  5249  001530  EF9C  F00A         	goto	l2986
  5250  001534                     u2880:
  5251  001534  0E80               	movlw	128
  5252  001536  1A0D               	xorwf	___fladd@signs^0,f,c
  5253  001538                     l2986:
  5254  001538  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5255  00153C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5256  001540  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5257  001544  C001  F010         	movff	___fladd@b,___fladd@grs
  5258  001548  C005  F001         	movff	___fladd@a,___fladd@b
  5259  00154C  C010  F005         	movff	___fladd@grs,___fladd@a
  5260  001550  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5261  001554  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5262  001558  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5263  00155C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5264  001560  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5265  001564  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5266  001568  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5267  00156C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5268  001570  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5269  001574                     l3016:
  5270  001574  0E00               	movlw	0
  5271  001576  6E10               	movwf	___fladd@grs^0,c
  5272  001578  500F               	movf	___fladd@bexp^0,w,c
  5273  00157A  C00E  F009         	movff	___fladd@aexp,??___fladd
  5274  00157E  6A0A               	clrf	(??___fladd+1)^0,c
  5275  001580  5E09               	subwf	??___fladd^0,f,c
  5276  001582  0E00               	movlw	0
  5277  001584  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5278  001586  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5279  001588  EFCF  F00A         	goto	u2891
  5280  00158C  500A               	movf	(??___fladd+1)^0,w,c
  5281  00158E  E109               	bnz	u2890
  5282  001590  0E1A               	movlw	26
  5283  001592  5C09               	subwf	??___fladd^0,w,c
  5284  001594  A0D8               	btfss	status,0,c
  5285  001596  EFCF  F00A         	goto	u2891
  5286  00159A  EFD1  F00A         	goto	u2890
  5287  00159E                     u2891:
  5288  00159E  EF08  F00B         	goto	l901
  5289  0015A2                     u2890:
  5290  0015A2  5001               	movf	___fladd@b^0,w,c
  5291  0015A4  1002               	iorwf	(___fladd@b+1)^0,w,c
  5292  0015A6  1003               	iorwf	(___fladd@b+2)^0,w,c
  5293  0015A8  1004               	iorwf	(___fladd@b+3)^0,w,c
  5294  0015AA  A4D8               	btfss	status,2,c
  5295  0015AC  EFDA  F00A         	goto	u2901
  5296  0015B0  EFDD  F00A         	goto	u2900
  5297  0015B4                     u2901:
  5298  0015B4  0E01               	movlw	1
  5299  0015B6  EFDE  F00A         	goto	u2910
  5300  0015BA                     u2900:
  5301  0015BA  0E00               	movlw	0
  5302  0015BC                     u2910:
  5303  0015BC  6E10               	movwf	___fladd@grs^0,c
  5304  0015BE  0E00               	movlw	0
  5305  0015C0  6E01               	movwf	___fladd@b^0,c
  5306  0015C2  0E00               	movlw	0
  5307  0015C4  6E02               	movwf	(___fladd@b+1)^0,c
  5308  0015C6  0E00               	movlw	0
  5309  0015C8  6E03               	movwf	(___fladd@b+2)^0,c
  5310  0015CA  0E00               	movlw	0
  5311  0015CC  6E04               	movwf	(___fladd@b+3)^0,c
  5312  0015CE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5313  0015D2  EF11  F00B         	goto	l900
  5314  0015D6                     l902:
  5315  0015D6  A010               	btfss	___fladd@grs^0,0,c
  5316  0015D8  EFF0  F00A         	goto	u2921
  5317  0015DC  EFF2  F00A         	goto	u2920
  5318  0015E0                     u2921:
  5319  0015E0  EFF8  F00A         	goto	l3028
  5320  0015E4                     u2920:
  5321  0015E4  90D8               	bcf	status,0,c
  5322  0015E6  3010               	rrcf	___fladd@grs^0,w,c
  5323  0015E8  0901               	iorlw	1
  5324  0015EA  6E10               	movwf	___fladd@grs^0,c
  5325  0015EC  EFFA  F00A         	goto	l3030
  5326  0015F0                     l3028:
  5327  0015F0  90D8               	bcf	status,0,c
  5328  0015F2  3210               	rrcf	___fladd@grs^0,f,c
  5329  0015F4                     l3030:
  5330  0015F4  A001               	btfss	___fladd@b^0,0,c
  5331  0015F6  EFFF  F00A         	goto	u2931
  5332  0015FA  EF01  F00B         	goto	u2930
  5333  0015FE                     u2931:
  5334  0015FE  EF02  F00B         	goto	l3034
  5335  001602                     u2930:
  5336  001602  8E10               	bsf	___fladd@grs^0,7,c
  5337  001604                     l3034:
  5338  001604  3404               	rlcf	(___fladd@b+3)^0,w,c
  5339  001606  3204               	rrcf	(___fladd@b+3)^0,f,c
  5340  001608  3203               	rrcf	(___fladd@b+2)^0,f,c
  5341  00160A  3202               	rrcf	(___fladd@b+1)^0,f,c
  5342  00160C  3201               	rrcf	___fladd@b^0,f,c
  5343  00160E  2A0F               	incf	___fladd@bexp^0,f,c
  5344  001610                     l901:
  5345  001610  500E               	movf	___fladd@aexp^0,w,c
  5346  001612  5C0F               	subwf	___fladd@bexp^0,w,c
  5347  001614  A0D8               	btfss	status,0,c
  5348  001616  EF0F  F00B         	goto	u2941
  5349  00161A  EF11  F00B         	goto	u2940
  5350  00161E                     u2941:
  5351  00161E  EFEB  F00A         	goto	l902
  5352  001622                     u2940:
  5353  001622                     l900:
  5354  001622  BC0D               	btfsc	___fladd@signs^0,6,c
  5355  001624  EF16  F00B         	goto	u2951
  5356  001628  EF18  F00B         	goto	u2950
  5357  00162C                     u2951:
  5358  00162C  EF58  F00B         	goto	l3062
  5359  001630                     u2950:
  5360  001630  500F               	movf	___fladd@bexp^0,w,c
  5361  001632  A4D8               	btfss	status,2,c
  5362  001634  EF1E  F00B         	goto	u2961
  5363  001638  EF20  F00B         	goto	u2960
  5364  00163C                     u2961:
  5365  00163C  EF2A  F00B         	goto	l3044
  5366  001640                     u2960:
  5367  001640  0E00               	movlw	0
  5368  001642  6E01               	movwf	?___fladd^0,c
  5369  001644  0E00               	movlw	0
  5370  001646  6E02               	movwf	(?___fladd+1)^0,c
  5371  001648  0E00               	movlw	0
  5372  00164A  6E03               	movwf	(?___fladd+2)^0,c
  5373  00164C  0E00               	movlw	0
  5374  00164E  6E04               	movwf	(?___fladd+3)^0,c
  5375  001650  EF79  F00C         	goto	l909
  5376  001654                     l3044:
  5377  001654  5005               	movf	___fladd@a^0,w,c
  5378  001656  2601               	addwf	___fladd@b^0,f,c
  5379  001658  5006               	movf	(___fladd@a+1)^0,w,c
  5380  00165A  2202               	addwfc	(___fladd@b+1)^0,f,c
  5381  00165C  5007               	movf	(___fladd@a+2)^0,w,c
  5382  00165E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5383  001660  5008               	movf	(___fladd@a+3)^0,w,c
  5384  001662  2204               	addwfc	(___fladd@b+3)^0,f,c
  5385  001664  A004               	btfss	(___fladd@b+3)^0,0,c
  5386  001666  EF37  F00B         	goto	u2971
  5387  00166A  EF39  F00B         	goto	u2970
  5388  00166E                     u2971:
  5389  00166E  EFE5  F00B         	goto	l3098
  5390  001672                     u2970:
  5391  001672  A010               	btfss	___fladd@grs^0,0,c
  5392  001674  EF3E  F00B         	goto	u2981
  5393  001678  EF40  F00B         	goto	u2980
  5394  00167C                     u2981:
  5395  00167C  EF46  F00B         	goto	l3052
  5396  001680                     u2980:
  5397  001680  90D8               	bcf	status,0,c
  5398  001682  3010               	rrcf	___fladd@grs^0,w,c
  5399  001684  0901               	iorlw	1
  5400  001686  6E10               	movwf	___fladd@grs^0,c
  5401  001688  EF48  F00B         	goto	l3054
  5402  00168C                     l3052:
  5403  00168C  90D8               	bcf	status,0,c
  5404  00168E  3210               	rrcf	___fladd@grs^0,f,c
  5405  001690                     l3054:
  5406  001690  A001               	btfss	___fladd@b^0,0,c
  5407  001692  EF4D  F00B         	goto	u2991
  5408  001696  EF4F  F00B         	goto	u2990
  5409  00169A                     u2991:
  5410  00169A  EF50  F00B         	goto	l3058
  5411  00169E                     u2990:
  5412  00169E  8E10               	bsf	___fladd@grs^0,7,c
  5413  0016A0                     l3058:
  5414  0016A0  3404               	rlcf	(___fladd@b+3)^0,w,c
  5415  0016A2  3204               	rrcf	(___fladd@b+3)^0,f,c
  5416  0016A4  3203               	rrcf	(___fladd@b+2)^0,f,c
  5417  0016A6  3202               	rrcf	(___fladd@b+1)^0,f,c
  5418  0016A8  3201               	rrcf	___fladd@b^0,f,c
  5419  0016AA  2A0F               	incf	___fladd@bexp^0,f,c
  5420  0016AC  EFE5  F00B         	goto	l3098
  5421  0016B0                     l3062:
  5422  0016B0  5005               	movf	___fladd@a^0,w,c
  5423  0016B2  5C01               	subwf	___fladd@b^0,w,c
  5424  0016B4  5006               	movf	(___fladd@a+1)^0,w,c
  5425  0016B6  5802               	subwfb	(___fladd@b+1)^0,w,c
  5426  0016B8  5007               	movf	(___fladd@a+2)^0,w,c
  5427  0016BA  5803               	subwfb	(___fladd@b+2)^0,w,c
  5428  0016BC  5004               	movf	(___fladd@b+3)^0,w,c
  5429  0016BE  0A80               	xorlw	128
  5430  0016C0  6E09               	movwf	??___fladd^0,c
  5431  0016C2  5008               	movf	(___fladd@a+3)^0,w,c
  5432  0016C4  0A80               	xorlw	128
  5433  0016C6  5809               	subwfb	??___fladd^0,w,c
  5434  0016C8  B0D8               	btfsc	status,0,c
  5435  0016CA  EF69  F00B         	goto	u3001
  5436  0016CE  EF6B  F00B         	goto	u3000
  5437  0016D2                     u3001:
  5438  0016D2  EF96  F00B         	goto	l3072
  5439  0016D6                     u3000:
  5440  0016D6  5001               	movf	___fladd@b^0,w,c
  5441  0016D8  5C05               	subwf	___fladd@a^0,w,c
  5442  0016DA  6E09               	movwf	??___fladd^0,c
  5443  0016DC  5002               	movf	(___fladd@b+1)^0,w,c
  5444  0016DE  5806               	subwfb	(___fladd@a+1)^0,w,c
  5445  0016E0  6E0A               	movwf	(??___fladd+1)^0,c
  5446  0016E2  5003               	movf	(___fladd@b+2)^0,w,c
  5447  0016E4  5807               	subwfb	(___fladd@a+2)^0,w,c
  5448  0016E6  6E0B               	movwf	(??___fladd+2)^0,c
  5449  0016E8  5004               	movf	(___fladd@b+3)^0,w,c
  5450  0016EA  5808               	subwfb	(___fladd@a+3)^0,w,c
  5451  0016EC  6E0C               	movwf	(??___fladd+3)^0,c
  5452  0016EE  0EFF               	movlw	255
  5453  0016F0  2409               	addwf	??___fladd^0,w,c
  5454  0016F2  6E01               	movwf	___fladd@b^0,c
  5455  0016F4  0EFF               	movlw	255
  5456  0016F6  200A               	addwfc	(??___fladd+1)^0,w,c
  5457  0016F8  6E02               	movwf	(___fladd@b+1)^0,c
  5458  0016FA  0EFF               	movlw	255
  5459  0016FC  200B               	addwfc	(??___fladd+2)^0,w,c
  5460  0016FE  6E03               	movwf	(___fladd@b+2)^0,c
  5461  001700  0EFF               	movlw	255
  5462  001702  200C               	addwfc	(??___fladd+3)^0,w,c
  5463  001704  6E04               	movwf	(___fladd@b+3)^0,c
  5464  001706  0E80               	movlw	128
  5465  001708  1A0D               	xorwf	___fladd@signs^0,f,c
  5466  00170A  6C10               	negf	___fladd@grs^0,c
  5467  00170C  5010               	movf	___fladd@grs^0,w,c
  5468  00170E  A4D8               	btfss	status,2,c
  5469  001710  EF8C  F00B         	goto	u3011
  5470  001714  EF8E  F00B         	goto	u3010
  5471  001718                     u3011:
  5472  001718  EF9E  F00B         	goto	l917
  5473  00171C                     u3010:
  5474  00171C  0E01               	movlw	1
  5475  00171E  2601               	addwf	___fladd@b^0,f,c
  5476  001720  0E00               	movlw	0
  5477  001722  2202               	addwfc	(___fladd@b+1)^0,f,c
  5478  001724  2203               	addwfc	(___fladd@b+2)^0,f,c
  5479  001726  2204               	addwfc	(___fladd@b+3)^0,f,c
  5480  001728  EF9E  F00B         	goto	l917
  5481  00172C                     l3072:
  5482  00172C  5005               	movf	___fladd@a^0,w,c
  5483  00172E  5E01               	subwf	___fladd@b^0,f,c
  5484  001730  5006               	movf	(___fladd@a+1)^0,w,c
  5485  001732  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5486  001734  5007               	movf	(___fladd@a+2)^0,w,c
  5487  001736  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5488  001738  5008               	movf	(___fladd@a+3)^0,w,c
  5489  00173A  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5490  00173C                     l917:
  5491  00173C  5001               	movf	___fladd@b^0,w,c
  5492  00173E  1002               	iorwf	(___fladd@b+1)^0,w,c
  5493  001740  1003               	iorwf	(___fladd@b+2)^0,w,c
  5494  001742  1004               	iorwf	(___fladd@b+3)^0,w,c
  5495  001744  A4D8               	btfss	status,2,c
  5496  001746  EFA7  F00B         	goto	u3021
  5497  00174A  EFA9  F00B         	goto	u3020
  5498  00174E                     u3021:
  5499  00174E  EFDE  F00B         	goto	l3096
  5500  001752                     u3020:
  5501  001752  5010               	movf	___fladd@grs^0,w,c
  5502  001754  A4D8               	btfss	status,2,c
  5503  001756  EFAF  F00B         	goto	u3031
  5504  00175A  EFB1  F00B         	goto	u3030
  5505  00175E                     u3031:
  5506  00175E  EFDE  F00B         	goto	l3096
  5507  001762                     u3030:
  5508  001762  0E00               	movlw	0
  5509  001764  6E01               	movwf	?___fladd^0,c
  5510  001766  0E00               	movlw	0
  5511  001768  6E02               	movwf	(?___fladd+1)^0,c
  5512  00176A  0E00               	movlw	0
  5513  00176C  6E03               	movwf	(?___fladd+2)^0,c
  5514  00176E  0E00               	movlw	0
  5515  001770  6E04               	movwf	(?___fladd+3)^0,c
  5516  001772  EF79  F00C         	goto	l909
  5517  001776                     l3080:
  5518  001776  90D8               	bcf	status,0,c
  5519  001778  3601               	rlcf	___fladd@b^0,f,c
  5520  00177A  3602               	rlcf	(___fladd@b+1)^0,f,c
  5521  00177C  3603               	rlcf	(___fladd@b+2)^0,f,c
  5522  00177E  3604               	rlcf	(___fladd@b+3)^0,f,c
  5523  001780  AE10               	btfss	___fladd@grs^0,7,c
  5524  001782  EFC5  F00B         	goto	u3041
  5525  001786  EFC7  F00B         	goto	u3040
  5526  00178A                     u3041:
  5527  00178A  EFC8  F00B         	goto	l3086
  5528  00178E                     u3040:
  5529  00178E  8001               	bsf	___fladd@b^0,0,c
  5530  001790                     l3086:
  5531  001790  A010               	btfss	___fladd@grs^0,0,c
  5532  001792  EFCD  F00B         	goto	u3051
  5533  001796  EFCF  F00B         	goto	u3050
  5534  00179A                     u3051:
  5535  00179A  EFD3  F00B         	goto	l3090
  5536  00179E                     u3050:
  5537  00179E  80D8               	bsf	status,0,c
  5538  0017A0  3610               	rlcf	___fladd@grs^0,f,c
  5539  0017A2  EFD5  F00B         	goto	l3092
  5540  0017A6                     l3090:
  5541  0017A6  90D8               	bcf	status,0,c
  5542  0017A8  3610               	rlcf	___fladd@grs^0,f,c
  5543  0017AA                     l3092:
  5544  0017AA  500F               	movf	___fladd@bexp^0,w,c
  5545  0017AC  B4D8               	btfsc	status,2,c
  5546  0017AE  EFDB  F00B         	goto	u3061
  5547  0017B2  EFDD  F00B         	goto	u3060
  5548  0017B6                     u3061:
  5549  0017B6  EFDE  F00B         	goto	l3096
  5550  0017BA                     u3060:
  5551  0017BA  060F               	decf	___fladd@bexp^0,f,c
  5552  0017BC                     l3096:
  5553  0017BC  AE03               	btfss	(___fladd@b+2)^0,7,c
  5554  0017BE  EFE3  F00B         	goto	u3071
  5555  0017C2  EFE5  F00B         	goto	u3070
  5556  0017C6                     u3071:
  5557  0017C6  EFBB  F00B         	goto	l3080
  5558  0017CA                     u3070:
  5559  0017CA                     l3098:
  5560  0017CA  0E00               	movlw	0
  5561  0017CC  6E0E               	movwf	___fladd@aexp^0,c
  5562  0017CE  AE10               	btfss	___fladd@grs^0,7,c
  5563  0017D0  EFEC  F00B         	goto	u3081
  5564  0017D4  EFEE  F00B         	goto	u3080
  5565  0017D8                     u3081:
  5566  0017D8  EF06  F00C         	goto	l926
  5567  0017DC                     u3080:
  5568  0017DC  C010  F009         	movff	___fladd@grs,??___fladd
  5569  0017E0  0E7F               	movlw	127
  5570  0017E2  1609               	andwf	??___fladd^0,f,c
  5571  0017E4  B4D8               	btfsc	status,2,c
  5572  0017E6  EFF7  F00B         	goto	u3091
  5573  0017EA  EFF9  F00B         	goto	u3090
  5574  0017EE                     u3091:
  5575  0017EE  EFFD  F00B         	goto	l927
  5576  0017F2                     u3090:
  5577  0017F2                     l3104:
  5578  0017F2  0E01               	movlw	1
  5579  0017F4  6E0E               	movwf	___fladd@aexp^0,c
  5580  0017F6  EF06  F00C         	goto	l926
  5581  0017FA                     l927:
  5582  0017FA  A001               	btfss	___fladd@b^0,0,c
  5583  0017FC  EF02  F00C         	goto	u3101
  5584  001800  EF04  F00C         	goto	u3100
  5585  001804                     u3101:
  5586  001804  EF06  F00C         	goto	l926
  5587  001808                     u3100:
  5588  001808  EFF9  F00B         	goto	l3104
  5589  00180C                     l926:
  5590  00180C  500E               	movf	___fladd@aexp^0,w,c
  5591  00180E  B4D8               	btfsc	status,2,c
  5592  001810  EF0C  F00C         	goto	u3111
  5593  001814  EF0E  F00C         	goto	u3110
  5594  001818                     u3111:
  5595  001818  EF39  F00C         	goto	l3116
  5596  00181C                     u3110:
  5597  00181C  0E01               	movlw	1
  5598  00181E  2601               	addwf	___fladd@b^0,f,c
  5599  001820  0E00               	movlw	0
  5600  001822  2202               	addwfc	(___fladd@b+1)^0,f,c
  5601  001824  2203               	addwfc	(___fladd@b+2)^0,f,c
  5602  001826  2204               	addwfc	(___fladd@b+3)^0,f,c
  5603  001828  A004               	btfss	(___fladd@b+3)^0,0,c
  5604  00182A  EF19  F00C         	goto	u3121
  5605  00182E  EF1B  F00C         	goto	u3120
  5606  001832                     u3121:
  5607  001832  EF39  F00C         	goto	l3116
  5608  001836                     u3120:
  5609  001836  C001  F009         	movff	___fladd@b,??___fladd
  5610  00183A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5611  00183E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5612  001842  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5613  001846  340C               	rlcf	(??___fladd+3)^0,w,c
  5614  001848  320C               	rrcf	(??___fladd+3)^0,f,c
  5615  00184A  320B               	rrcf	(??___fladd+2)^0,f,c
  5616  00184C  320A               	rrcf	(??___fladd+1)^0,f,c
  5617  00184E  3209               	rrcf	??___fladd^0,f,c
  5618  001850  C009  F001         	movff	??___fladd,___fladd@b
  5619  001854  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5620  001858  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5621  00185C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5622  001860  280F               	incf	___fladd@bexp^0,w,c
  5623  001862  B4D8               	btfsc	status,2,c
  5624  001864  EF36  F00C         	goto	u3131
  5625  001868  EF38  F00C         	goto	u3130
  5626  00186C                     u3131:
  5627  00186C  EF39  F00C         	goto	l3116
  5628  001870                     u3130:
  5629  001870  2A0F               	incf	___fladd@bexp^0,f,c
  5630  001872                     l3116:
  5631  001872  280F               	incf	___fladd@bexp^0,w,c
  5632  001874  B4D8               	btfsc	status,2,c
  5633  001876  EF3F  F00C         	goto	u3141
  5634  00187A  EF41  F00C         	goto	u3140
  5635  00187E                     u3141:
  5636  00187E  EF49  F00C         	goto	l3120
  5637  001882                     u3140:
  5638  001882  500F               	movf	___fladd@bexp^0,w,c
  5639  001884  A4D8               	btfss	status,2,c
  5640  001886  EF47  F00C         	goto	u3151
  5641  00188A  EF49  F00C         	goto	u3150
  5642  00188E                     u3151:
  5643  00188E  EF5B  F00C         	goto	l3124
  5644  001892                     u3150:
  5645  001892                     l3120:
  5646  001892  0E00               	movlw	0
  5647  001894  6E01               	movwf	___fladd@b^0,c
  5648  001896  0E00               	movlw	0
  5649  001898  6E02               	movwf	(___fladd@b+1)^0,c
  5650  00189A  0E00               	movlw	0
  5651  00189C  6E03               	movwf	(___fladd@b+2)^0,c
  5652  00189E  0E00               	movlw	0
  5653  0018A0  6E04               	movwf	(___fladd@b+3)^0,c
  5654  0018A2  500F               	movf	___fladd@bexp^0,w,c
  5655  0018A4  A4D8               	btfss	status,2,c
  5656  0018A6  EF57  F00C         	goto	u3161
  5657  0018AA  EF59  F00C         	goto	u3160
  5658  0018AE                     u3161:
  5659  0018AE  EF5B  F00C         	goto	l3124
  5660  0018B2                     u3160:
  5661  0018B2  0E00               	movlw	0
  5662  0018B4  6E0D               	movwf	___fladd@signs^0,c
  5663  0018B6                     l3124:
  5664  0018B6  A00F               	btfss	___fladd@bexp^0,0,c
  5665  0018B8  EF60  F00C         	goto	u3171
  5666  0018BC  EF62  F00C         	goto	u3170
  5667  0018C0                     u3171:
  5668  0018C0  EF65  F00C         	goto	l3128
  5669  0018C4                     u3170:
  5670  0018C4  8E03               	bsf	(___fladd@b+2)^0,7,c
  5671  0018C6  EF66  F00C         	goto	l3130
  5672  0018CA                     l3128:
  5673  0018CA  9E03               	bcf	(___fladd@b+2)^0,7,c
  5674  0018CC                     l3130:
  5675  0018CC  90D8               	bcf	status,0,c
  5676  0018CE  300F               	rrcf	___fladd@bexp^0,w,c
  5677  0018D0  6E04               	movwf	(___fladd@b+3)^0,c
  5678  0018D2  AE0D               	btfss	___fladd@signs^0,7,c
  5679  0018D4  EF6E  F00C         	goto	u3181
  5680  0018D8  EF70  F00C         	goto	u3180
  5681  0018DC                     u3181:
  5682  0018DC  EF71  F00C         	goto	l3136
  5683  0018E0                     u3180:
  5684  0018E0  8E04               	bsf	(___fladd@b+3)^0,7,c
  5685  0018E2                     l3136:
  5686  0018E2  C001  F001         	movff	___fladd@b,?___fladd
  5687  0018E6  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5688  0018EA  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5689  0018EE  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5690  0018F2                     l909:
  5691  0018F2  0012               	return		;funcret
  5692  0018F4                     __end_of___fladd:
  5693                           	opt callstack 0
  5694                           
  5695 ;; *************** function ___flneg *****************
  5696 ;; Defined at:
  5697 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  f1              4    0[COMRAM] unsigned char 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;		None
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  4    0[COMRAM] unsigned char 
  5704 ;; Registers used:
  5705 ;;		wreg, status,2, status,0
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5711 ;;      Params:         4       0       0       0       0       0       0       0       0
  5712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5714 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5715 ;;Total ram usage:        4 bytes
  5716 ;; Hardware stack levels used:    1
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_efgtoa
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text19
  5725  003BFC                     __ptext19:
  5726                           	opt callstack 0
  5727  003BFC                     ___flneg:
  5728                           	opt callstack 26
  5729  003BFC  5001               	movf	___flneg@f1^0,w,c
  5730  003BFE  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5731  003C00  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5732  003C02  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5733  003C04  B4D8               	btfsc	status,2,c
  5734  003C06  EF07  F01E         	goto	u4091
  5735  003C0A  EF09  F01E         	goto	u4090
  5736  003C0E                     u4091:
  5737  003C0E  EF11  F01E         	goto	l3632
  5738  003C12                     u4090:
  5739  003C12  0E00               	movlw	0
  5740  003C14  1A01               	xorwf	___flneg@f1^0,f,c
  5741  003C16  0E00               	movlw	0
  5742  003C18  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5743  003C1A  0E00               	movlw	0
  5744  003C1C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5745  003C1E  0E80               	movlw	128
  5746  003C20  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5747  003C22                     l3632:
  5748  003C22  C001  F001         	movff	___flneg@f1,?___flneg
  5749  003C26  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5750  003C2A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5751  003C2E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5752  003C32  0012               	return		;funcret
  5753  003C34                     __end_of___flneg:
  5754                           	opt callstack 0
  5755                           
  5756 ;; *************** function ___flge *****************
  5757 ;; Defined at:
  5758 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  ff1             4   25[COMRAM] unsigned char 
  5761 ;;  ff2             4   29[COMRAM] unsigned char 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;		None
  5764 ;; Return value:  Size  Location     Type
  5765 ;;		None               void
  5766 ;; Registers used:
  5767 ;;		wreg, status,2, status,0
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5773 ;;      Params:         8       0       0       0       0       0       0       0       0
  5774 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5775 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5776 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5777 ;;Total ram usage:       12 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_efgtoa
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text20
  5787  002D96                     __ptext20:
  5788                           	opt callstack 0
  5789  002D96                     ___flge:
  5790                           	opt callstack 26
  5791  002D96  0E00               	movlw	0
  5792  002D98  141A               	andwf	___flge@ff1^0,w,c
  5793  002D9A  6E22               	movwf	??___flge^0,c
  5794  002D9C  0E00               	movlw	0
  5795  002D9E  141B               	andwf	(___flge@ff1+1)^0,w,c
  5796  002DA0  6E23               	movwf	(??___flge+1)^0,c
  5797  002DA2  0E80               	movlw	128
  5798  002DA4  141C               	andwf	(___flge@ff1+2)^0,w,c
  5799  002DA6  6E24               	movwf	(??___flge+2)^0,c
  5800  002DA8  0E7F               	movlw	127
  5801  002DAA  141D               	andwf	(___flge@ff1+3)^0,w,c
  5802  002DAC  6E25               	movwf	(??___flge+3)^0,c
  5803  002DAE  5022               	movf	??___flge^0,w,c
  5804  002DB0  1023               	iorwf	(??___flge+1)^0,w,c
  5805  002DB2  1024               	iorwf	(??___flge+2)^0,w,c
  5806  002DB4  1025               	iorwf	(??___flge+3)^0,w,c
  5807  002DB6  A4D8               	btfss	status,2,c
  5808  002DB8  EFE0  F016         	goto	u4041
  5809  002DBC  EFE2  F016         	goto	u4040
  5810  002DC0                     u4041:
  5811  002DC0  EFEA  F016         	goto	l3610
  5812  002DC4                     u4040:
  5813  002DC4  0E00               	movlw	0
  5814  002DC6  6E1A               	movwf	___flge@ff1^0,c
  5815  002DC8  0E00               	movlw	0
  5816  002DCA  6E1B               	movwf	(___flge@ff1+1)^0,c
  5817  002DCC  0E00               	movlw	0
  5818  002DCE  6E1C               	movwf	(___flge@ff1+2)^0,c
  5819  002DD0  0E00               	movlw	0
  5820  002DD2  6E1D               	movwf	(___flge@ff1+3)^0,c
  5821  002DD4                     l3610:
  5822  002DD4  0E00               	movlw	0
  5823  002DD6  141E               	andwf	___flge@ff2^0,w,c
  5824  002DD8  6E22               	movwf	??___flge^0,c
  5825  002DDA  0E00               	movlw	0
  5826  002DDC  141F               	andwf	(___flge@ff2+1)^0,w,c
  5827  002DDE  6E23               	movwf	(??___flge+1)^0,c
  5828  002DE0  0E80               	movlw	128
  5829  002DE2  1420               	andwf	(___flge@ff2+2)^0,w,c
  5830  002DE4  6E24               	movwf	(??___flge+2)^0,c
  5831  002DE6  0E7F               	movlw	127
  5832  002DE8  1421               	andwf	(___flge@ff2+3)^0,w,c
  5833  002DEA  6E25               	movwf	(??___flge+3)^0,c
  5834  002DEC  5022               	movf	??___flge^0,w,c
  5835  002DEE  1023               	iorwf	(??___flge+1)^0,w,c
  5836  002DF0  1024               	iorwf	(??___flge+2)^0,w,c
  5837  002DF2  1025               	iorwf	(??___flge+3)^0,w,c
  5838  002DF4  A4D8               	btfss	status,2,c
  5839  002DF6  EFFF  F016         	goto	u4051
  5840  002DFA  EF01  F017         	goto	u4050
  5841  002DFE                     u4051:
  5842  002DFE  EF09  F017         	goto	l3614
  5843  002E02                     u4050:
  5844  002E02  0E00               	movlw	0
  5845  002E04  6E1E               	movwf	___flge@ff2^0,c
  5846  002E06  0E00               	movlw	0
  5847  002E08  6E1F               	movwf	(___flge@ff2+1)^0,c
  5848  002E0A  0E00               	movlw	0
  5849  002E0C  6E20               	movwf	(___flge@ff2+2)^0,c
  5850  002E0E  0E00               	movlw	0
  5851  002E10  6E21               	movwf	(___flge@ff2+3)^0,c
  5852  002E12                     l3614:
  5853  002E12  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  5854  002E14  EF0E  F017         	goto	u4061
  5855  002E18  EF10  F017         	goto	u4060
  5856  002E1C                     u4061:
  5857  002E1C  EF19  F017         	goto	l3618
  5858  002E20                     u4060:
  5859  002E20  6C1A               	negf	___flge@ff1^0,c
  5860  002E22  1E1B               	comf	(___flge@ff1+1)^0,f,c
  5861  002E24  B0D8               	btfsc	status,0,c
  5862  002E26  2A1B               	incf	(___flge@ff1+1)^0,f,c
  5863  002E28  1E1C               	comf	(___flge@ff1+2)^0,f,c
  5864  002E2A  B0D8               	btfsc	status,0,c
  5865  002E2C  2A1C               	incf	(___flge@ff1+2)^0,f,c
  5866  002E2E  0E80               	movlw	128
  5867  002E30  561D               	subfwb	(___flge@ff1+3)^0,f,c
  5868  002E32                     l3618:
  5869  002E32  AE21               	btfss	(___flge@ff2+3)^0,7,c
  5870  002E34  EF1E  F017         	goto	u4071
  5871  002E38  EF20  F017         	goto	u4070
  5872  002E3C                     u4071:
  5873  002E3C  EF29  F017         	goto	l637
  5874  002E40                     u4070:
  5875  002E40  6C1E               	negf	___flge@ff2^0,c
  5876  002E42  1E1F               	comf	(___flge@ff2+1)^0,f,c
  5877  002E44  B0D8               	btfsc	status,0,c
  5878  002E46  2A1F               	incf	(___flge@ff2+1)^0,f,c
  5879  002E48  1E20               	comf	(___flge@ff2+2)^0,f,c
  5880  002E4A  B0D8               	btfsc	status,0,c
  5881  002E4C  2A20               	incf	(___flge@ff2+2)^0,f,c
  5882  002E4E  0E80               	movlw	128
  5883  002E50  5621               	subfwb	(___flge@ff2+3)^0,f,c
  5884  002E52                     l637:
  5885  002E52  0E00               	movlw	0
  5886  002E54  1A1A               	xorwf	___flge@ff1^0,f,c
  5887  002E56  0E00               	movlw	0
  5888  002E58  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  5889  002E5A  0E00               	movlw	0
  5890  002E5C  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  5891  002E5E  0E80               	movlw	128
  5892  002E60  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  5893  002E62  0E00               	movlw	0
  5894  002E64  1A1E               	xorwf	___flge@ff2^0,f,c
  5895  002E66  0E00               	movlw	0
  5896  002E68  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  5897  002E6A  0E00               	movlw	0
  5898  002E6C  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  5899  002E6E  0E80               	movlw	128
  5900  002E70  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  5901  002E72  501E               	movf	___flge@ff2^0,w,c
  5902  002E74  5C1A               	subwf	___flge@ff1^0,w,c
  5903  002E76  501F               	movf	(___flge@ff2+1)^0,w,c
  5904  002E78  581B               	subwfb	(___flge@ff1+1)^0,w,c
  5905  002E7A  5020               	movf	(___flge@ff2+2)^0,w,c
  5906  002E7C  581C               	subwfb	(___flge@ff1+2)^0,w,c
  5907  002E7E  5021               	movf	(___flge@ff2+3)^0,w,c
  5908  002E80  581D               	subwfb	(___flge@ff1+3)^0,w,c
  5909  002E82  B0D8               	btfsc	status,0,c
  5910  002E84  EF46  F017         	goto	u4081
  5911  002E88  EF48  F017         	goto	u4080
  5912  002E8C                     u4081:
  5913  002E8C  EF4B  F017         	goto	l3624
  5914  002E90                     u4080:
  5915  002E90  90D8               	bcf	status,0,c
  5916  002E92  EF4C  F017         	goto	l642
  5917  002E96                     l3624:
  5918  002E96  80D8               	bsf	status,0,c
  5919  002E98                     l642:
  5920  002E98  0012               	return		;funcret
  5921  002E9A                     __end_of___flge:
  5922                           	opt callstack 0
  5923                           
  5924 ;; *************** function ___fleq *****************
  5925 ;; Defined at:
  5926 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  ff1             4    0[COMRAM] unsigned char 
  5929 ;;  ff2             4    4[COMRAM] unsigned char 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;		None
  5932 ;; Return value:  Size  Location     Type
  5933 ;;		None               void
  5934 ;; Registers used:
  5935 ;;		wreg, status,2, status,0
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5941 ;;      Params:         8       0       0       0       0       0       0       0       0
  5942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5943 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5944 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5945 ;;Total ram usage:       12 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; This function calls:
  5948 ;;		Nothing
  5949 ;; This function is called by:
  5950 ;;		_efgtoa
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           	psect	text21
  5955  0035B2                     __ptext21:
  5956                           	opt callstack 0
  5957  0035B2                     ___fleq:
  5958                           	opt callstack 26
  5959  0035B2  0E00               	movlw	0
  5960  0035B4  1401               	andwf	___fleq@ff1^0,w,c
  5961  0035B6  6E09               	movwf	??___fleq^0,c
  5962  0035B8  0E00               	movlw	0
  5963  0035BA  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5964  0035BC  6E0A               	movwf	(??___fleq+1)^0,c
  5965  0035BE  0E80               	movlw	128
  5966  0035C0  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5967  0035C2  6E0B               	movwf	(??___fleq+2)^0,c
  5968  0035C4  0E7F               	movlw	127
  5969  0035C6  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5970  0035C8  6E0C               	movwf	(??___fleq+3)^0,c
  5971  0035CA  5009               	movf	??___fleq^0,w,c
  5972  0035CC  100A               	iorwf	(??___fleq+1)^0,w,c
  5973  0035CE  100B               	iorwf	(??___fleq+2)^0,w,c
  5974  0035D0  100C               	iorwf	(??___fleq+3)^0,w,c
  5975  0035D2  A4D8               	btfss	status,2,c
  5976  0035D4  EFEE  F01A         	goto	u4011
  5977  0035D8  EFF0  F01A         	goto	u4010
  5978  0035DC                     u4011:
  5979  0035DC  EFF8  F01A         	goto	l3594
  5980  0035E0                     u4010:
  5981  0035E0  0E00               	movlw	0
  5982  0035E2  6E01               	movwf	___fleq@ff1^0,c
  5983  0035E4  0E00               	movlw	0
  5984  0035E6  6E02               	movwf	(___fleq@ff1+1)^0,c
  5985  0035E8  0E00               	movlw	0
  5986  0035EA  6E03               	movwf	(___fleq@ff1+2)^0,c
  5987  0035EC  0E00               	movlw	0
  5988  0035EE  6E04               	movwf	(___fleq@ff1+3)^0,c
  5989  0035F0                     l3594:
  5990  0035F0  0E00               	movlw	0
  5991  0035F2  1405               	andwf	___fleq@ff2^0,w,c
  5992  0035F4  6E09               	movwf	??___fleq^0,c
  5993  0035F6  0E00               	movlw	0
  5994  0035F8  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5995  0035FA  6E0A               	movwf	(??___fleq+1)^0,c
  5996  0035FC  0E80               	movlw	128
  5997  0035FE  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5998  003600  6E0B               	movwf	(??___fleq+2)^0,c
  5999  003602  0E7F               	movlw	127
  6000  003604  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6001  003606  6E0C               	movwf	(??___fleq+3)^0,c
  6002  003608  5009               	movf	??___fleq^0,w,c
  6003  00360A  100A               	iorwf	(??___fleq+1)^0,w,c
  6004  00360C  100B               	iorwf	(??___fleq+2)^0,w,c
  6005  00360E  100C               	iorwf	(??___fleq+3)^0,w,c
  6006  003610  A4D8               	btfss	status,2,c
  6007  003612  EF0D  F01B         	goto	u4021
  6008  003616  EF0F  F01B         	goto	u4020
  6009  00361A                     u4021:
  6010  00361A  EF17  F01B         	goto	l3598
  6011  00361E                     u4020:
  6012  00361E  0E00               	movlw	0
  6013  003620  6E05               	movwf	___fleq@ff2^0,c
  6014  003622  0E00               	movlw	0
  6015  003624  6E06               	movwf	(___fleq@ff2+1)^0,c
  6016  003626  0E00               	movlw	0
  6017  003628  6E07               	movwf	(___fleq@ff2+2)^0,c
  6018  00362A  0E00               	movlw	0
  6019  00362C  6E08               	movwf	(___fleq@ff2+3)^0,c
  6020  00362E                     l3598:
  6021  00362E  5005               	movf	___fleq@ff2^0,w,c
  6022  003630  1801               	xorwf	___fleq@ff1^0,w,c
  6023  003632  E10F               	bnz	u4030
  6024  003634  5006               	movf	(___fleq@ff2+1)^0,w,c
  6025  003636  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6026  003638  E10C               	bnz	u4030
  6027  00363A  5007               	movf	(___fleq@ff2+2)^0,w,c
  6028  00363C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6029  00363E  E109               	bnz	u4030
  6030  003640  5008               	movf	(___fleq@ff2+3)^0,w,c
  6031  003642  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6032  003644  B4D8               	btfsc	status,2,c
  6033  003646  EF27  F01B         	goto	u4031
  6034  00364A  EF29  F01B         	goto	u4030
  6035  00364E                     u4031:
  6036  00364E  EF2C  F01B         	goto	l3602
  6037  003652                     u4030:
  6038  003652  90D8               	bcf	status,0,c
  6039  003654  EF2D  F01B         	goto	l631
  6040  003658                     l3602:
  6041  003658  80D8               	bsf	status,0,c
  6042  00365A                     l631:
  6043  00365A  0012               	return		;funcret
  6044  00365C                     __end_of___fleq:
  6045                           	opt callstack 0
  6046                           
  6047 ;; *************** function ___fldiv *****************
  6048 ;; Defined at:
  6049 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  b               4    0[COMRAM] unsigned char 
  6052 ;;  a               4    4[COMRAM] unsigned char 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  grs             4   19[COMRAM] unsigned long 
  6055 ;;  rem             4   12[COMRAM] unsigned long 
  6056 ;;  new_exp         2   17[COMRAM] short 
  6057 ;;  aexp            1   24[COMRAM] unsigned char 
  6058 ;;  bexp            1   23[COMRAM] unsigned char 
  6059 ;;  sign            1   16[COMRAM] unsigned char 
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  4    0[COMRAM] unsigned char 
  6062 ;; Registers used:
  6063 ;;		wreg, status,2, status,0
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6069 ;;      Params:         8       0       0       0       0       0       0       0       0
  6070 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6071 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6072 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6073 ;;Total ram usage:       25 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; This function calls:
  6076 ;;		Nothing
  6077 ;; This function is called by:
  6078 ;;		_efgtoa
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           	psect	text22
  6083  00217E                     __ptext22:
  6084                           	opt callstack 0
  6085  00217E                     ___fldiv:
  6086                           	opt callstack 26
  6087  00217E  5004               	movf	(___fldiv@b+3)^0,w,c
  6088  002180  0B80               	andlw	128
  6089  002182  6E11               	movwf	___fldiv@sign^0,c
  6090  002184  5004               	movf	(___fldiv@b+3)^0,w,c
  6091  002186  2404               	addwf	(___fldiv@b+3)^0,w,c
  6092  002188  6E18               	movwf	___fldiv@bexp^0,c
  6093  00218A  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6094  00218C  EFCA  F010         	goto	u3471
  6095  002190  EFCC  F010         	goto	u3470
  6096  002194                     u3471:
  6097  002194  EFCD  F010         	goto	l3242
  6098  002198                     u3470:
  6099  002198  8018               	bsf	___fldiv@bexp^0,0,c
  6100  00219A                     l3242:
  6101  00219A  5018               	movf	___fldiv@bexp^0,w,c
  6102  00219C  B4D8               	btfsc	status,2,c
  6103  00219E  EFD3  F010         	goto	u3481
  6104  0021A2  EFD5  F010         	goto	u3480
  6105  0021A6                     u3481:
  6106  0021A6  EFEA  F010         	goto	l3252
  6107  0021AA                     u3480:
  6108  0021AA  2818               	incf	___fldiv@bexp^0,w,c
  6109  0021AC  A4D8               	btfss	status,2,c
  6110  0021AE  EFDB  F010         	goto	u3491
  6111  0021B2  EFDD  F010         	goto	u3490
  6112  0021B6                     u3491:
  6113  0021B6  EFE5  F010         	goto	l3248
  6114  0021BA                     u3490:
  6115  0021BA  0E00               	movlw	0
  6116  0021BC  6E01               	movwf	___fldiv@b^0,c
  6117  0021BE  0E00               	movlw	0
  6118  0021C0  6E02               	movwf	(___fldiv@b+1)^0,c
  6119  0021C2  0E00               	movlw	0
  6120  0021C4  6E03               	movwf	(___fldiv@b+2)^0,c
  6121  0021C6  0E00               	movlw	0
  6122  0021C8  6E04               	movwf	(___fldiv@b+3)^0,c
  6123  0021CA                     l3248:
  6124  0021CA  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6125  0021CC  0E00               	movlw	0
  6126  0021CE  6E04               	movwf	(___fldiv@b+3)^0,c
  6127  0021D0  EFF2  F010         	goto	l3254
  6128  0021D4                     l3252:
  6129  0021D4  0E00               	movlw	0
  6130  0021D6  6E01               	movwf	___fldiv@b^0,c
  6131  0021D8  0E00               	movlw	0
  6132  0021DA  6E02               	movwf	(___fldiv@b+1)^0,c
  6133  0021DC  0E00               	movlw	0
  6134  0021DE  6E03               	movwf	(___fldiv@b+2)^0,c
  6135  0021E0  0E00               	movlw	0
  6136  0021E2  6E04               	movwf	(___fldiv@b+3)^0,c
  6137  0021E4                     l3254:
  6138  0021E4  5008               	movf	(___fldiv@a+3)^0,w,c
  6139  0021E6  0B80               	andlw	128
  6140  0021E8  1A11               	xorwf	___fldiv@sign^0,f,c
  6141  0021EA  5008               	movf	(___fldiv@a+3)^0,w,c
  6142  0021EC  2408               	addwf	(___fldiv@a+3)^0,w,c
  6143  0021EE  6E19               	movwf	___fldiv@aexp^0,c
  6144  0021F0  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6145  0021F2  EFFD  F010         	goto	u3501
  6146  0021F6  EFFF  F010         	goto	u3500
  6147  0021FA                     u3501:
  6148  0021FA  EF00  F011         	goto	l3262
  6149  0021FE                     u3500:
  6150  0021FE  8019               	bsf	___fldiv@aexp^0,0,c
  6151  002200                     l3262:
  6152  002200  5019               	movf	___fldiv@aexp^0,w,c
  6153  002202  B4D8               	btfsc	status,2,c
  6154  002204  EF06  F011         	goto	u3511
  6155  002208  EF08  F011         	goto	u3510
  6156  00220C                     u3511:
  6157  00220C  EF1D  F011         	goto	l3272
  6158  002210                     u3510:
  6159  002210  2819               	incf	___fldiv@aexp^0,w,c
  6160  002212  A4D8               	btfss	status,2,c
  6161  002214  EF0E  F011         	goto	u3521
  6162  002218  EF10  F011         	goto	u3520
  6163  00221C                     u3521:
  6164  00221C  EF18  F011         	goto	l3268
  6165  002220                     u3520:
  6166  002220  0E00               	movlw	0
  6167  002222  6E05               	movwf	___fldiv@a^0,c
  6168  002224  0E00               	movlw	0
  6169  002226  6E06               	movwf	(___fldiv@a+1)^0,c
  6170  002228  0E00               	movlw	0
  6171  00222A  6E07               	movwf	(___fldiv@a+2)^0,c
  6172  00222C  0E00               	movlw	0
  6173  00222E  6E08               	movwf	(___fldiv@a+3)^0,c
  6174  002230                     l3268:
  6175  002230  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6176  002232  0E00               	movlw	0
  6177  002234  6E08               	movwf	(___fldiv@a+3)^0,c
  6178  002236  EF25  F011         	goto	l3274
  6179  00223A                     l3272:
  6180  00223A  0E00               	movlw	0
  6181  00223C  6E05               	movwf	___fldiv@a^0,c
  6182  00223E  0E00               	movlw	0
  6183  002240  6E06               	movwf	(___fldiv@a+1)^0,c
  6184  002242  0E00               	movlw	0
  6185  002244  6E07               	movwf	(___fldiv@a+2)^0,c
  6186  002246  0E00               	movlw	0
  6187  002248  6E08               	movwf	(___fldiv@a+3)^0,c
  6188  00224A                     l3274:
  6189  00224A  5005               	movf	___fldiv@a^0,w,c
  6190  00224C  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6191  00224E  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6192  002250  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6193  002252  A4D8               	btfss	status,2,c
  6194  002254  EF2E  F011         	goto	u3531
  6195  002258  EF30  F011         	goto	u3530
  6196  00225C                     u3531:
  6197  00225C  EF48  F011         	goto	l3286
  6198  002260                     u3530:
  6199  002260  0E00               	movlw	0
  6200  002262  6E01               	movwf	___fldiv@b^0,c
  6201  002264  0E00               	movlw	0
  6202  002266  6E02               	movwf	(___fldiv@b+1)^0,c
  6203  002268  0E00               	movlw	0
  6204  00226A  6E03               	movwf	(___fldiv@b+2)^0,c
  6205  00226C  0E00               	movlw	0
  6206  00226E  6E04               	movwf	(___fldiv@b+3)^0,c
  6207  002270  0E80               	movlw	128
  6208  002272  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6209  002274  0E7F               	movlw	127
  6210  002276  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6211  002278                     l3280:
  6212  002278  5011               	movf	___fldiv@sign^0,w,c
  6213  00227A  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6214  00227C  C001  F001         	movff	___fldiv@b,?___fldiv
  6215  002280  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6216  002284  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6217  002288  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6218  00228C  EF8B  F012         	goto	l954
  6219  002290                     l3286:
  6220  002290  5018               	movf	___fldiv@bexp^0,w,c
  6221  002292  A4D8               	btfss	status,2,c
  6222  002294  EF4E  F011         	goto	u3541
  6223  002298  EF50  F011         	goto	u3540
  6224  00229C                     u3541:
  6225  00229C  EF5A  F011         	goto	l3294
  6226  0022A0                     u3540:
  6227  0022A0  0E00               	movlw	0
  6228  0022A2  6E01               	movwf	?___fldiv^0,c
  6229  0022A4  0E00               	movlw	0
  6230  0022A6  6E02               	movwf	(?___fldiv+1)^0,c
  6231  0022A8  0E00               	movlw	0
  6232  0022AA  6E03               	movwf	(?___fldiv+2)^0,c
  6233  0022AC  0E00               	movlw	0
  6234  0022AE  6E04               	movwf	(?___fldiv+3)^0,c
  6235  0022B0  EF8B  F012         	goto	l954
  6236  0022B4                     l3294:
  6237  0022B4  5019               	movf	___fldiv@aexp^0,w,c
  6238  0022B6  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6239  0022BA  6A0A               	clrf	(??___fldiv+1)^0,c
  6240  0022BC  5E09               	subwf	??___fldiv^0,f,c
  6241  0022BE  0E00               	movlw	0
  6242  0022C0  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6243  0022C2  0E7F               	movlw	127
  6244  0022C4  2409               	addwf	??___fldiv^0,w,c
  6245  0022C6  6E12               	movwf	___fldiv@new_exp^0,c
  6246  0022C8  0E00               	movlw	0
  6247  0022CA  200A               	addwfc	(??___fldiv+1)^0,w,c
  6248  0022CC  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6249  0022CE  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6250  0022D2  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6251  0022D6  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6252  0022DA  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6253  0022DE  0E00               	movlw	0
  6254  0022E0  6E01               	movwf	___fldiv@b^0,c
  6255  0022E2  0E00               	movlw	0
  6256  0022E4  6E02               	movwf	(___fldiv@b+1)^0,c
  6257  0022E6  0E00               	movlw	0
  6258  0022E8  6E03               	movwf	(___fldiv@b+2)^0,c
  6259  0022EA  0E00               	movlw	0
  6260  0022EC  6E04               	movwf	(___fldiv@b+3)^0,c
  6261  0022EE  0E00               	movlw	0
  6262  0022F0  6E14               	movwf	___fldiv@grs^0,c
  6263  0022F2  0E00               	movlw	0
  6264  0022F4  6E15               	movwf	(___fldiv@grs+1)^0,c
  6265  0022F6  0E00               	movlw	0
  6266  0022F8  6E16               	movwf	(___fldiv@grs+2)^0,c
  6267  0022FA  0E00               	movlw	0
  6268  0022FC  6E17               	movwf	(___fldiv@grs+3)^0,c
  6269  0022FE  0E00               	movlw	0
  6270  002300  6E19               	movwf	___fldiv@aexp^0,c
  6271  002302  EFBB  F011         	goto	l956
  6272  002306                     l3304:
  6273  002306  5019               	movf	___fldiv@aexp^0,w,c
  6274  002308  B4D8               	btfsc	status,2,c
  6275  00230A  EF89  F011         	goto	u3551
  6276  00230E  EF8B  F011         	goto	u3550
  6277  002312                     u3551:
  6278  002312  EFA2  F011         	goto	l3312
  6279  002316                     u3550:
  6280  002316  90D8               	bcf	status,0,c
  6281  002318  360D               	rlcf	___fldiv@rem^0,f,c
  6282  00231A  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6283  00231C  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6284  00231E  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6285  002320  90D8               	bcf	status,0,c
  6286  002322  3601               	rlcf	___fldiv@b^0,f,c
  6287  002324  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6288  002326  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6289  002328  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6290  00232A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6291  00232C  EF9A  F011         	goto	u3561
  6292  002330  EF9C  F011         	goto	u3560
  6293  002334                     u3561:
  6294  002334  EF9D  F011         	goto	l959
  6295  002338                     u3560:
  6296  002338  8001               	bsf	___fldiv@b^0,0,c
  6297  00233A                     l959:
  6298  00233A  90D8               	bcf	status,0,c
  6299  00233C  3614               	rlcf	___fldiv@grs^0,f,c
  6300  00233E  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6301  002340  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6302  002342  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6303  002344                     l3312:
  6304  002344  5005               	movf	___fldiv@a^0,w,c
  6305  002346  5C0D               	subwf	___fldiv@rem^0,w,c
  6306  002348  5006               	movf	(___fldiv@a+1)^0,w,c
  6307  00234A  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6308  00234C  5007               	movf	(___fldiv@a+2)^0,w,c
  6309  00234E  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6310  002350  5008               	movf	(___fldiv@a+3)^0,w,c
  6311  002352  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6312  002354  A0D8               	btfss	status,0,c
  6313  002356  EFAF  F011         	goto	u3571
  6314  00235A  EFB1  F011         	goto	u3570
  6315  00235E                     u3571:
  6316  00235E  EFBA  F011         	goto	l3318
  6317  002362                     u3570:
  6318  002362  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6319  002364  5005               	movf	___fldiv@a^0,w,c
  6320  002366  5E0D               	subwf	___fldiv@rem^0,f,c
  6321  002368  5006               	movf	(___fldiv@a+1)^0,w,c
  6322  00236A  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6323  00236C  5007               	movf	(___fldiv@a+2)^0,w,c
  6324  00236E  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6325  002370  5008               	movf	(___fldiv@a+3)^0,w,c
  6326  002372  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6327  002374                     l3318:
  6328  002374  2A19               	incf	___fldiv@aexp^0,f,c
  6329  002376                     l956:
  6330  002376  0E19               	movlw	25
  6331  002378  6419               	cpfsgt	___fldiv@aexp^0,c
  6332  00237A  EFC1  F011         	goto	u3581
  6333  00237E  EFC3  F011         	goto	u3580
  6334  002382                     u3581:
  6335  002382  EF83  F011         	goto	l3304
  6336  002386                     u3580:
  6337  002386  500D               	movf	___fldiv@rem^0,w,c
  6338  002388  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6339  00238A  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6340  00238C  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6341  00238E  B4D8               	btfsc	status,2,c
  6342  002390  EFCC  F011         	goto	u3591
  6343  002394  EFCE  F011         	goto	u3590
  6344  002398                     u3591:
  6345  002398  EFE6  F011         	goto	l3330
  6346  00239C                     u3590:
  6347  00239C  8014               	bsf	___fldiv@grs^0,0,c
  6348  00239E  EFE6  F011         	goto	l3330
  6349  0023A2                     l3324:
  6350  0023A2  90D8               	bcf	status,0,c
  6351  0023A4  3601               	rlcf	___fldiv@b^0,f,c
  6352  0023A6  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6353  0023A8  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6354  0023AA  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6355  0023AC  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6356  0023AE  EFDB  F011         	goto	u3601
  6357  0023B2  EFDD  F011         	goto	u3600
  6358  0023B6                     u3601:
  6359  0023B6  EFDE  F011         	goto	l965
  6360  0023BA                     u3600:
  6361  0023BA  8001               	bsf	___fldiv@b^0,0,c
  6362  0023BC                     l965:
  6363  0023BC  90D8               	bcf	status,0,c
  6364  0023BE  3614               	rlcf	___fldiv@grs^0,f,c
  6365  0023C0  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6366  0023C2  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6367  0023C4  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6368  0023C6  0612               	decf	___fldiv@new_exp^0,f,c
  6369  0023C8  A0D8               	btfss	status,0,c
  6370  0023CA  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6371  0023CC                     l3330:
  6372  0023CC  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6373  0023CE  EFEB  F011         	goto	u3611
  6374  0023D2  EFED  F011         	goto	u3610
  6375  0023D6                     u3611:
  6376  0023D6  EFD1  F011         	goto	l3324
  6377  0023DA                     u3610:
  6378  0023DA  0E00               	movlw	0
  6379  0023DC  6E19               	movwf	___fldiv@aexp^0,c
  6380  0023DE  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6381  0023E0  EFF4  F011         	goto	u3621
  6382  0023E4  EFF6  F011         	goto	u3620
  6383  0023E8                     u3621:
  6384  0023E8  EF1A  F012         	goto	l967
  6385  0023EC                     u3620:
  6386  0023EC  0EFF               	movlw	255
  6387  0023EE  1414               	andwf	___fldiv@grs^0,w,c
  6388  0023F0  6E09               	movwf	??___fldiv^0,c
  6389  0023F2  0EFF               	movlw	255
  6390  0023F4  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6391  0023F6  6E0A               	movwf	(??___fldiv+1)^0,c
  6392  0023F8  0EFF               	movlw	255
  6393  0023FA  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6394  0023FC  6E0B               	movwf	(??___fldiv+2)^0,c
  6395  0023FE  0E7F               	movlw	127
  6396  002400  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6397  002402  6E0C               	movwf	(??___fldiv+3)^0,c
  6398  002404  5009               	movf	??___fldiv^0,w,c
  6399  002406  100A               	iorwf	(??___fldiv+1)^0,w,c
  6400  002408  100B               	iorwf	(??___fldiv+2)^0,w,c
  6401  00240A  100C               	iorwf	(??___fldiv+3)^0,w,c
  6402  00240C  B4D8               	btfsc	status,2,c
  6403  00240E  EF0B  F012         	goto	u3631
  6404  002412  EF0D  F012         	goto	u3630
  6405  002416                     u3631:
  6406  002416  EF11  F012         	goto	l968
  6407  00241A                     u3630:
  6408  00241A                     l3338:
  6409  00241A  0E01               	movlw	1
  6410  00241C  6E19               	movwf	___fldiv@aexp^0,c
  6411  00241E  EF1A  F012         	goto	l967
  6412  002422                     l968:
  6413  002422  A001               	btfss	___fldiv@b^0,0,c
  6414  002424  EF16  F012         	goto	u3641
  6415  002428  EF18  F012         	goto	u3640
  6416  00242C                     u3641:
  6417  00242C  EF1A  F012         	goto	l967
  6418  002430                     u3640:
  6419  002430  EF0D  F012         	goto	l3338
  6420  002434                     l967:
  6421  002434  5019               	movf	___fldiv@aexp^0,w,c
  6422  002436  B4D8               	btfsc	status,2,c
  6423  002438  EF20  F012         	goto	u3651
  6424  00243C  EF22  F012         	goto	u3650
  6425  002440                     u3651:
  6426  002440  EF46  F012         	goto	l3350
  6427  002444                     u3650:
  6428  002444  0E01               	movlw	1
  6429  002446  2601               	addwf	___fldiv@b^0,f,c
  6430  002448  0E00               	movlw	0
  6431  00244A  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6432  00244C  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6433  00244E  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6434  002450  A004               	btfss	(___fldiv@b+3)^0,0,c
  6435  002452  EF2D  F012         	goto	u3661
  6436  002456  EF2F  F012         	goto	u3660
  6437  00245A                     u3661:
  6438  00245A  EF46  F012         	goto	l3350
  6439  00245E                     u3660:
  6440  00245E  C001  F009         	movff	___fldiv@b,??___fldiv
  6441  002462  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6442  002466  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6443  00246A  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6444  00246E  340C               	rlcf	(??___fldiv+3)^0,w,c
  6445  002470  320C               	rrcf	(??___fldiv+3)^0,f,c
  6446  002472  320B               	rrcf	(??___fldiv+2)^0,f,c
  6447  002474  320A               	rrcf	(??___fldiv+1)^0,f,c
  6448  002476  3209               	rrcf	??___fldiv^0,f,c
  6449  002478  C009  F001         	movff	??___fldiv,___fldiv@b
  6450  00247C  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6451  002480  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6452  002484  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6453  002488  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6454  00248A  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6455  00248C                     l3350:
  6456  00248C  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6457  00248E  EF51  F012         	goto	u3671
  6458  002492  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6459  002494  E108               	bnz	u3670
  6460  002496  2812               	incf	___fldiv@new_exp^0,w,c
  6461  002498  A0D8               	btfss	status,0,c
  6462  00249A  EF51  F012         	goto	u3671
  6463  00249E  EF53  F012         	goto	u3670
  6464  0024A2                     u3671:
  6465  0024A2  EF5E  F012         	goto	l3354
  6466  0024A6                     u3670:
  6467  0024A6  0E00               	movlw	0
  6468  0024A8  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6469  0024AA  6812               	setf	___fldiv@new_exp^0,c
  6470  0024AC  0E00               	movlw	0
  6471  0024AE  6E01               	movwf	___fldiv@b^0,c
  6472  0024B0  0E00               	movlw	0
  6473  0024B2  6E02               	movwf	(___fldiv@b+1)^0,c
  6474  0024B4  0E00               	movlw	0
  6475  0024B6  6E03               	movwf	(___fldiv@b+2)^0,c
  6476  0024B8  0E00               	movlw	0
  6477  0024BA  6E04               	movwf	(___fldiv@b+3)^0,c
  6478  0024BC                     l3354:
  6479  0024BC  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6480  0024BE  EF6B  F012         	goto	u3680
  6481  0024C2  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6482  0024C4  E106               	bnz	u3681
  6483  0024C6  0412               	decf	___fldiv@new_exp^0,w,c
  6484  0024C8  B0D8               	btfsc	status,0,c
  6485  0024CA  EF69  F012         	goto	u3681
  6486  0024CE  EF6B  F012         	goto	u3680
  6487  0024D2                     u3681:
  6488  0024D2  EF79  F012         	goto	l3358
  6489  0024D6                     u3680:
  6490  0024D6  0E00               	movlw	0
  6491  0024D8  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6492  0024DA  0E00               	movlw	0
  6493  0024DC  6E12               	movwf	___fldiv@new_exp^0,c
  6494  0024DE  0E00               	movlw	0
  6495  0024E0  6E01               	movwf	___fldiv@b^0,c
  6496  0024E2  0E00               	movlw	0
  6497  0024E4  6E02               	movwf	(___fldiv@b+1)^0,c
  6498  0024E6  0E00               	movlw	0
  6499  0024E8  6E03               	movwf	(___fldiv@b+2)^0,c
  6500  0024EA  0E00               	movlw	0
  6501  0024EC  6E04               	movwf	(___fldiv@b+3)^0,c
  6502  0024EE  0E00               	movlw	0
  6503  0024F0  6E11               	movwf	___fldiv@sign^0,c
  6504  0024F2                     l3358:
  6505  0024F2  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6506  0024F6  A018               	btfss	___fldiv@bexp^0,0,c
  6507  0024F8  EF80  F012         	goto	u3691
  6508  0024FC  EF82  F012         	goto	u3690
  6509  002500                     u3691:
  6510  002500  EF85  F012         	goto	l3364
  6511  002504                     u3690:
  6512  002504  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6513  002506  EF86  F012         	goto	l3366
  6514  00250A                     l3364:
  6515  00250A  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6516  00250C                     l3366:
  6517  00250C  90D8               	bcf	status,0,c
  6518  00250E  3018               	rrcf	___fldiv@bexp^0,w,c
  6519  002510  6E04               	movwf	(___fldiv@b+3)^0,c
  6520  002512  EF3C  F011         	goto	l3280
  6521  002516                     l954:
  6522  002516  0012               	return		;funcret
  6523  002518                     __end_of___fldiv:
  6524                           	opt callstack 0
  6525                           
  6526 ;; *************** function ___awmod *****************
  6527 ;; Defined at:
  6528 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;  dividend        2    0[COMRAM] int 
  6531 ;;  divisor         2    2[COMRAM] int 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  sign            1    5[COMRAM] unsigned char 
  6534 ;;  counter         1    4[COMRAM] unsigned char 
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  2    0[COMRAM] int 
  6537 ;; Registers used:
  6538 ;;		wreg, status,2, status,0
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6544 ;;      Params:         4       0       0       0       0       0       0       0       0
  6545 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6547 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6548 ;;Total ram usage:        6 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; This function calls:
  6551 ;;		Nothing
  6552 ;; This function is called by:
  6553 ;;		_efgtoa
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text23
  6558  003502                     __ptext23:
  6559                           	opt callstack 0
  6560  003502                     ___awmod:
  6561                           	opt callstack 26
  6562  003502  0E00               	movlw	0
  6563  003504  6E06               	movwf	___awmod@sign^0,c
  6564  003506  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6565  003508  EF8A  F01A         	goto	u3950
  6566  00350C  EF88  F01A         	goto	u3951
  6567  003510                     u3951:
  6568  003510  EF90  F01A         	goto	l3562
  6569  003514                     u3950:
  6570  003514  6C01               	negf	___awmod@dividend^0,c
  6571  003516  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6572  003518  B0D8               	btfsc	status,0,c
  6573  00351A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6574  00351C  0E01               	movlw	1
  6575  00351E  6E06               	movwf	___awmod@sign^0,c
  6576  003520                     l3562:
  6577  003520  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6578  003522  EF97  F01A         	goto	u3960
  6579  003526  EF95  F01A         	goto	u3961
  6580  00352A                     u3961:
  6581  00352A  EF9B  F01A         	goto	l3566
  6582  00352E                     u3960:
  6583  00352E  6C03               	negf	___awmod@divisor^0,c
  6584  003530  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6585  003532  B0D8               	btfsc	status,0,c
  6586  003534  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6587  003536                     l3566:
  6588  003536  5003               	movf	___awmod@divisor^0,w,c
  6589  003538  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6590  00353A  B4D8               	btfsc	status,2,c
  6591  00353C  EFA2  F01A         	goto	u3971
  6592  003540  EFA4  F01A         	goto	u3970
  6593  003544                     u3971:
  6594  003544  EFC8  F01A         	goto	l3582
  6595  003548                     u3970:
  6596  003548  0E01               	movlw	1
  6597  00354A  6E05               	movwf	___awmod@counter^0,c
  6598  00354C  EFAC  F01A         	goto	l3572
  6599  003550                     l3570:
  6600  003550  90D8               	bcf	status,0,c
  6601  003552  3603               	rlcf	___awmod@divisor^0,f,c
  6602  003554  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6603  003556  2A05               	incf	___awmod@counter^0,f,c
  6604  003558                     l3572:
  6605  003558  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6606  00355A  EFB1  F01A         	goto	u3981
  6607  00355E  EFB3  F01A         	goto	u3980
  6608  003562                     u3981:
  6609  003562  EFA8  F01A         	goto	l3570
  6610  003566                     u3980:
  6611  003566                     l3574:
  6612  003566  5003               	movf	___awmod@divisor^0,w,c
  6613  003568  5C01               	subwf	___awmod@dividend^0,w,c
  6614  00356A  5004               	movf	(___awmod@divisor+1)^0,w,c
  6615  00356C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6616  00356E  A0D8               	btfss	status,0,c
  6617  003570  EFBC  F01A         	goto	u3991
  6618  003574  EFBE  F01A         	goto	u3990
  6619  003578                     u3991:
  6620  003578  EFC2  F01A         	goto	l3578
  6621  00357C                     u3990:
  6622  00357C  5003               	movf	___awmod@divisor^0,w,c
  6623  00357E  5E01               	subwf	___awmod@dividend^0,f,c
  6624  003580  5004               	movf	(___awmod@divisor+1)^0,w,c
  6625  003582  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6626  003584                     l3578:
  6627  003584  90D8               	bcf	status,0,c
  6628  003586  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6629  003588  3203               	rrcf	___awmod@divisor^0,f,c
  6630  00358A  2E05               	decfsz	___awmod@counter^0,f,c
  6631  00358C  EFB3  F01A         	goto	l3574
  6632  003590                     l3582:
  6633  003590  5006               	movf	___awmod@sign^0,w,c
  6634  003592  B4D8               	btfsc	status,2,c
  6635  003594  EFCE  F01A         	goto	u4001
  6636  003598  EFD0  F01A         	goto	u4000
  6637  00359C                     u4001:
  6638  00359C  EFD4  F01A         	goto	l3586
  6639  0035A0                     u4000:
  6640  0035A0  6C01               	negf	___awmod@dividend^0,c
  6641  0035A2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6642  0035A4  B0D8               	btfsc	status,0,c
  6643  0035A6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6644  0035A8                     l3586:
  6645  0035A8  C001  F001         	movff	___awmod@dividend,?___awmod
  6646  0035AC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6647  0035B0  0012               	return		;funcret
  6648  0035B2                     __end_of___awmod:
  6649                           	opt callstack 0
  6650                           
  6651 ;; *************** function ___awdiv *****************
  6652 ;; Defined at:
  6653 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  dividend        2    0[COMRAM] int 
  6656 ;;  divisor         2    2[COMRAM] int 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  quotient        2    6[COMRAM] int 
  6659 ;;  sign            1    5[COMRAM] unsigned char 
  6660 ;;  counter         1    4[COMRAM] unsigned char 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  2    0[COMRAM] int 
  6663 ;; Registers used:
  6664 ;;		wreg, status,2, status,0
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6670 ;;      Params:         4       0       0       0       0       0       0       0       0
  6671 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6673 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6674 ;;Total ram usage:        8 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; This function calls:
  6677 ;;		Nothing
  6678 ;; This function is called by:
  6679 ;;		_efgtoa
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text24
  6684  0032CC                     __ptext24:
  6685                           	opt callstack 0
  6686  0032CC                     ___awdiv:
  6687                           	opt callstack 26
  6688  0032CC  0E00               	movlw	0
  6689  0032CE  6E06               	movwf	___awdiv@sign^0,c
  6690  0032D0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6691  0032D2  EF6F  F019         	goto	u3890
  6692  0032D6  EF6D  F019         	goto	u3891
  6693  0032DA                     u3891:
  6694  0032DA  EF75  F019         	goto	l3518
  6695  0032DE                     u3890:
  6696  0032DE  6C03               	negf	___awdiv@divisor^0,c
  6697  0032E0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6698  0032E2  B0D8               	btfsc	status,0,c
  6699  0032E4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6700  0032E6  0E01               	movlw	1
  6701  0032E8  6E06               	movwf	___awdiv@sign^0,c
  6702  0032EA                     l3518:
  6703  0032EA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6704  0032EC  EF7C  F019         	goto	u3900
  6705  0032F0  EF7A  F019         	goto	u3901
  6706  0032F4                     u3901:
  6707  0032F4  EF82  F019         	goto	l3524
  6708  0032F8                     u3900:
  6709  0032F8  6C01               	negf	___awdiv@dividend^0,c
  6710  0032FA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6711  0032FC  B0D8               	btfsc	status,0,c
  6712  0032FE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6713  003300  0E01               	movlw	1
  6714  003302  1A06               	xorwf	___awdiv@sign^0,f,c
  6715  003304                     l3524:
  6716  003304  0E00               	movlw	0
  6717  003306  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6718  003308  0E00               	movlw	0
  6719  00330A  6E07               	movwf	___awdiv@quotient^0,c
  6720  00330C  5003               	movf	___awdiv@divisor^0,w,c
  6721  00330E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6722  003310  B4D8               	btfsc	status,2,c
  6723  003312  EF8D  F019         	goto	u3911
  6724  003316  EF8F  F019         	goto	u3910
  6725  00331A                     u3911:
  6726  00331A  EFB7  F019         	goto	l3546
  6727  00331E                     u3910:
  6728  00331E  0E01               	movlw	1
  6729  003320  6E05               	movwf	___awdiv@counter^0,c
  6730  003322  EF97  F019         	goto	l3532
  6731  003326                     l3530:
  6732  003326  90D8               	bcf	status,0,c
  6733  003328  3603               	rlcf	___awdiv@divisor^0,f,c
  6734  00332A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6735  00332C  2A05               	incf	___awdiv@counter^0,f,c
  6736  00332E                     l3532:
  6737  00332E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6738  003330  EF9C  F019         	goto	u3921
  6739  003334  EF9E  F019         	goto	u3920
  6740  003338                     u3921:
  6741  003338  EF93  F019         	goto	l3530
  6742  00333C                     u3920:
  6743  00333C                     l3534:
  6744  00333C  90D8               	bcf	status,0,c
  6745  00333E  3607               	rlcf	___awdiv@quotient^0,f,c
  6746  003340  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6747  003342  5003               	movf	___awdiv@divisor^0,w,c
  6748  003344  5C01               	subwf	___awdiv@dividend^0,w,c
  6749  003346  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6750  003348  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6751  00334A  A0D8               	btfss	status,0,c
  6752  00334C  EFAA  F019         	goto	u3931
  6753  003350  EFAC  F019         	goto	u3930
  6754  003354                     u3931:
  6755  003354  EFB1  F019         	goto	l3542
  6756  003358                     u3930:
  6757  003358  5003               	movf	___awdiv@divisor^0,w,c
  6758  00335A  5E01               	subwf	___awdiv@dividend^0,f,c
  6759  00335C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6760  00335E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6761  003360  8007               	bsf	___awdiv@quotient^0,0,c
  6762  003362                     l3542:
  6763  003362  90D8               	bcf	status,0,c
  6764  003364  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6765  003366  3203               	rrcf	___awdiv@divisor^0,f,c
  6766  003368  2E05               	decfsz	___awdiv@counter^0,f,c
  6767  00336A  EF9E  F019         	goto	l3534
  6768  00336E                     l3546:
  6769  00336E  5006               	movf	___awdiv@sign^0,w,c
  6770  003370  B4D8               	btfsc	status,2,c
  6771  003372  EFBD  F019         	goto	u3941
  6772  003376  EFBF  F019         	goto	u3940
  6773  00337A                     u3941:
  6774  00337A  EFC3  F019         	goto	l3550
  6775  00337E                     u3940:
  6776  00337E  6C07               	negf	___awdiv@quotient^0,c
  6777  003380  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6778  003382  B0D8               	btfsc	status,0,c
  6779  003384  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6780  003386                     l3550:
  6781  003386  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6782  00338A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6783  00338E  0012               	return		;funcret
  6784  003390                     __end_of___awdiv:
  6785                           	opt callstack 0
  6786                           
  6787 ;; *************** function _atoi *****************
  6788 ;; Defined at:
  6789 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6792 ;;		 -> STR_8(6), STR_7(11), 
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;  n               2   20[COMRAM] int 
  6795 ;;  neg             2   13[COMRAM] int 
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  2    7[COMRAM] int 
  6798 ;; Registers used:
  6799 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6805 ;;      Params:         2       0       0       0       0       0       0       0       0
  6806 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6807 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6808 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6809 ;;Total ram usage:       15 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; Hardware stack levels required when called:    1
  6812 ;; This function calls:
  6813 ;;		___wmul
  6814 ;;		_isdigit
  6815 ;;		_isspace
  6816 ;; This function is called by:
  6817 ;;		_vfpfcnvrt
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           	psect	text25
  6822  0028DE                     __ptext25:
  6823                           	opt callstack 0
  6824  0028DE                     _atoi:
  6825                           	opt callstack 26
  6826  0028DE  0E00               	movlw	0
  6827  0028E0  6E16               	movwf	(atoi@n+1)^0,c
  6828  0028E2  0E00               	movlw	0
  6829  0028E4  6E15               	movwf	atoi@n^0,c
  6830  0028E6  0E00               	movlw	0
  6831  0028E8  6E0F               	movwf	(atoi@neg+1)^0,c
  6832  0028EA  0E00               	movlw	0
  6833  0028EC  6E0E               	movwf	atoi@neg^0,c
  6834  0028EE  EF7B  F014         	goto	l4002
  6835  0028F2                     l4000:
  6836  0028F2  4A08               	infsnz	atoi@s^0,f,c
  6837  0028F4  2A09               	incf	(atoi@s+1)^0,f,c
  6838  0028F6                     l4002:
  6839  0028F6  0E01               	movlw	1
  6840  0028F8  6E14               	movwf	_atoi$1273^0,c
  6841  0028FA  C008  FFF6         	movff	atoi@s,tblptrl
  6842  0028FE  C009  FFF7         	movff	atoi@s+1,tblptrh
  6843  002902                     	if	0	;tblptru may be non-zero
  6844  002902                     	endif
  6845  002902                     	if	0	;tblptru may be non-zero
  6846  002902                     	endif
  6847  002902  0008               	tblrd		*
  6848  002904  50F5               	movf	tablat,w,c
  6849  002906  0A20               	xorlw	32
  6850  002908  B4D8               	btfsc	status,2,c
  6851  00290A  EF89  F014         	goto	u4731
  6852  00290E  EF8B  F014         	goto	u4730
  6853  002912                     u4731:
  6854  002912  EFA8  F014         	goto	l4010
  6855  002916                     u4730:
  6856  002916  0EF7               	movlw	247
  6857  002918  6E0A               	movwf	??_atoi^0,c
  6858  00291A  0EFF               	movlw	255
  6859  00291C  6E0B               	movwf	(??_atoi+1)^0,c
  6860  00291E  C008  FFF6         	movff	atoi@s,tblptrl
  6861  002922  C009  FFF7         	movff	atoi@s+1,tblptrh
  6862  002926                     	if	0	;tblptru may be non-zero
  6863  002926                     	endif
  6864  002926                     	if	0	;tblptru may be non-zero
  6865  002926                     	endif
  6866  002926  0008               	tblrd		*
  6867  002928  50F5               	movf	tablat,w,c
  6868  00292A  6E0C               	movwf	(??_atoi+2)^0,c
  6869  00292C  6A0D               	clrf	(??_atoi+3)^0,c
  6870  00292E  500A               	movf	??_atoi^0,w,c
  6871  002930  260C               	addwf	(??_atoi+2)^0,f,c
  6872  002932  500B               	movf	(??_atoi+1)^0,w,c
  6873  002934  220D               	addwfc	(??_atoi+3)^0,f,c
  6874  002936  500D               	movf	(??_atoi+3)^0,w,c
  6875  002938  E109               	bnz	u4740
  6876  00293A  0E05               	movlw	5
  6877  00293C  5C0C               	subwf	(??_atoi+2)^0,w,c
  6878  00293E  A0D8               	btfss	status,0,c
  6879  002940  EFA4  F014         	goto	u4741
  6880  002944  EFA6  F014         	goto	u4740
  6881  002948                     u4741:
  6882  002948  EFA8  F014         	goto	l4010
  6883  00294C                     u4740:
  6884  00294C  0E00               	movlw	0
  6885  00294E  6E14               	movwf	_atoi$1273^0,c
  6886  002950                     l4010:
  6887  002950  C014  F010         	movff	_atoi$1273,_atoi$1272
  6888  002954  6A11               	clrf	(_atoi$1272+1)^0,c
  6889  002956  5010               	movf	_atoi$1272^0,w,c
  6890  002958  1011               	iorwf	(_atoi$1272+1)^0,w,c
  6891  00295A  A4D8               	btfss	status,2,c
  6892  00295C  EFB2  F014         	goto	u4751
  6893  002960  EFB4  F014         	goto	u4750
  6894  002964                     u4751:
  6895  002964  EF79  F014         	goto	l4000
  6896  002968                     u4750:
  6897  002968  EFBE  F014         	goto	l4020
  6898  00296C                     l4016:
  6899  00296C  0E00               	movlw	0
  6900  00296E  6E0F               	movwf	(atoi@neg+1)^0,c
  6901  002970  0E01               	movlw	1
  6902  002972  6E0E               	movwf	atoi@neg^0,c
  6903  002974                     l4018:
  6904  002974  4A08               	infsnz	atoi@s^0,f,c
  6905  002976  2A09               	incf	(atoi@s+1)^0,f,c
  6906  002978  EFF3  F014         	goto	l4026
  6907  00297C                     l4020:
  6908  00297C  C008  FFF6         	movff	atoi@s,tblptrl
  6909  002980  C009  FFF7         	movff	atoi@s+1,tblptrh
  6910  002984                     	if	0	;tblptru may be non-zero
  6911  002984                     	endif
  6912  002984                     	if	0	;tblptru may be non-zero
  6913  002984                     	endif
  6914  002984  0008               	tblrd		*
  6915  002986  50F5               	movf	tablat,w,c
  6916  002988  6E0A               	movwf	??_atoi^0,c
  6917  00298A  6A0B               	clrf	(??_atoi+1)^0,c
  6918                           
  6919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6920                           ; Switch size 1, requested type "simple"
  6921                           ; Number of cases is 1, Range of values is 0 to 0
  6922                           ; switch strategies available:
  6923                           ; Name         Instructions Cycles
  6924                           ; simple_byte            4     3 (average)
  6925                           ;	Chosen strategy is simple_byte
  6926  00298C  500B               	movf	(??_atoi+1)^0,w,c
  6927  00298E  0A00               	xorlw	0	; case 0
  6928  002990  B4D8               	btfsc	status,2,c
  6929  002992  EFCD  F014         	goto	l4620
  6930  002996  EFF3  F014         	goto	l4026
  6931  00299A                     l4620:
  6932                           
  6933                           ; Switch size 1, requested type "simple"
  6934                           ; Number of cases is 2, Range of values is 43 to 45
  6935                           ; switch strategies available:
  6936                           ; Name         Instructions Cycles
  6937                           ; simple_byte            7     4 (average)
  6938                           ;	Chosen strategy is simple_byte
  6939  00299A  500A               	movf	??_atoi^0,w,c
  6940  00299C  0A2B               	xorlw	43	; case 43
  6941  00299E  B4D8               	btfsc	status,2,c
  6942  0029A0  EFBA  F014         	goto	l4018
  6943  0029A4  0A06               	xorlw	6	; case 45
  6944  0029A6  B4D8               	btfsc	status,2,c
  6945  0029A8  EFB6  F014         	goto	l4016
  6946  0029AC  EFF3  F014         	goto	l4026
  6947  0029B0                     l4022:
  6948  0029B0  C015  F001         	movff	atoi@n,___wmul@multiplier
  6949  0029B4  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6950  0029B8  0E00               	movlw	0
  6951  0029BA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6952  0029BC  0E0A               	movlw	10
  6953  0029BE  6E03               	movwf	___wmul@multiplicand^0,c
  6954  0029C0  ECA4  F01E         	call	___wmul	;wreg free
  6955  0029C4  C008  FFF6         	movff	atoi@s,tblptrl
  6956  0029C8  C009  FFF7         	movff	atoi@s+1,tblptrh
  6957  0029CC                     	if	0	;tblptru may be non-zero
  6958  0029CC                     	endif
  6959  0029CC                     	if	0	;tblptru may be non-zero
  6960  0029CC                     	endif
  6961  0029CC  0008               	tblrd		*
  6962  0029CE  50F5               	movf	tablat,w,c
  6963  0029D0  5E01               	subwf	?___wmul^0,f,c
  6964  0029D2  0E00               	movlw	0
  6965  0029D4  5A02               	subwfb	(?___wmul+1)^0,f,c
  6966  0029D6  0E30               	movlw	48
  6967  0029D8  2401               	addwf	?___wmul^0,w,c
  6968  0029DA  6E15               	movwf	atoi@n^0,c
  6969  0029DC  0E00               	movlw	0
  6970  0029DE  2002               	addwfc	(?___wmul+1)^0,w,c
  6971  0029E0  6E16               	movwf	(atoi@n+1)^0,c
  6972  0029E2  EFBA  F014         	goto	l4018
  6973  0029E6                     l4026:
  6974  0029E6  0ED0               	movlw	208
  6975  0029E8  6E0A               	movwf	??_atoi^0,c
  6976  0029EA  0EFF               	movlw	255
  6977  0029EC  6E0B               	movwf	(??_atoi+1)^0,c
  6978  0029EE  C008  FFF6         	movff	atoi@s,tblptrl
  6979  0029F2  C009  FFF7         	movff	atoi@s+1,tblptrh
  6980  0029F6                     	if	0	;tblptru may be non-zero
  6981  0029F6                     	endif
  6982  0029F6                     	if	0	;tblptru may be non-zero
  6983  0029F6                     	endif
  6984  0029F6  0008               	tblrd		*
  6985  0029F8  50F5               	movf	tablat,w,c
  6986  0029FA  6E0C               	movwf	(??_atoi+2)^0,c
  6987  0029FC  6A0D               	clrf	(??_atoi+3)^0,c
  6988  0029FE  500A               	movf	??_atoi^0,w,c
  6989  002A00  260C               	addwf	(??_atoi+2)^0,f,c
  6990  002A02  500B               	movf	(??_atoi+1)^0,w,c
  6991  002A04  220D               	addwfc	(??_atoi+3)^0,f,c
  6992  002A06  500D               	movf	(??_atoi+3)^0,w,c
  6993  002A08  E10A               	bnz	u4760
  6994  002A0A  0E0A               	movlw	10
  6995  002A0C  5C0C               	subwf	(??_atoi+2)^0,w,c
  6996  002A0E  A0D8               	btfss	status,0,c
  6997  002A10  EF0C  F015         	goto	u4761
  6998  002A14  EF0F  F015         	goto	u4760
  6999  002A18                     u4761:
  7000  002A18  0E01               	movlw	1
  7001  002A1A  EF10  F015         	goto	u4770
  7002  002A1E                     u4760:
  7003  002A1E  0E00               	movlw	0
  7004  002A20                     u4770:
  7005  002A20  6E12               	movwf	_atoi$1274^0,c
  7006  002A22  6A13               	clrf	(_atoi$1274+1)^0,c
  7007  002A24  5012               	movf	_atoi$1274^0,w,c
  7008  002A26  1013               	iorwf	(_atoi$1274+1)^0,w,c
  7009  002A28  A4D8               	btfss	status,2,c
  7010  002A2A  EF19  F015         	goto	u4781
  7011  002A2E  EF1B  F015         	goto	u4780
  7012  002A32                     u4781:
  7013  002A32  EFD8  F014         	goto	l4022
  7014  002A36                     u4780:
  7015  002A36  500E               	movf	atoi@neg^0,w,c
  7016  002A38  100F               	iorwf	(atoi@neg+1)^0,w,c
  7017  002A3A  A4D8               	btfss	status,2,c
  7018  002A3C  EF22  F015         	goto	u4791
  7019  002A40  EF24  F015         	goto	u4790
  7020  002A44                     u4791:
  7021  002A44  EF32  F015         	goto	l1082
  7022  002A48                     u4790:
  7023  002A48  C015  F00A         	movff	atoi@n,??_atoi
  7024  002A4C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7025  002A50  1E0A               	comf	??_atoi^0,f,c
  7026  002A52  1E0B               	comf	(??_atoi+1)^0,f,c
  7027  002A54  4A0A               	infsnz	??_atoi^0,f,c
  7028  002A56  2A0B               	incf	(??_atoi+1)^0,f,c
  7029  002A58  C00A  F008         	movff	??_atoi,?_atoi
  7030  002A5C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7031  002A60  EF36  F015         	goto	l1085
  7032  002A64                     l1082:
  7033  002A64  C015  F008         	movff	atoi@n,?_atoi
  7034  002A68  C016  F009         	movff	atoi@n+1,?_atoi+1
  7035  002A6C                     l1085:
  7036  002A6C  0012               	return		;funcret
  7037  002A6E                     __end_of_atoi:
  7038                           	opt callstack 0
  7039                           
  7040 ;; *************** function _isspace *****************
  7041 ;; Defined at:
  7042 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  c               2    0[COMRAM] int 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;		None
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  2    0[COMRAM] int 
  7049 ;; Registers used:
  7050 ;;		wreg, status,2, status,0
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7056 ;;      Params:         2       0       0       0       0       0       0       0       0
  7057 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7058 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7059 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7060 ;;Total ram usage:        7 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; This function calls:
  7063 ;;		Nothing
  7064 ;; This function is called by:
  7065 ;;		_atoi
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text26
  7070  003AA8                     __ptext26:
  7071                           	opt callstack 0
  7072  003AA8                     _isspace:
  7073                           	opt callstack 26
  7074  003AA8  0E01               	movlw	1
  7075  003AAA  6E07               	movwf	_isspace$1303^0,c
  7076  003AAC  0E20               	movlw	32
  7077  003AAE  1801               	xorwf	isspace@c^0,w,c
  7078  003AB0  1002               	iorwf	(isspace@c+1)^0,w,c
  7079  003AB2  B4D8               	btfsc	status,2,c
  7080  003AB4  EF5E  F01D         	goto	u4171
  7081  003AB8  EF60  F01D         	goto	u4170
  7082  003ABC                     u4171:
  7083  003ABC  EF79  F01D         	goto	l3688
  7084  003AC0                     u4170:
  7085  003AC0  0EF7               	movlw	247
  7086  003AC2  6E03               	movwf	??_isspace^0,c
  7087  003AC4  0EFF               	movlw	255
  7088  003AC6  6E04               	movwf	(??_isspace+1)^0,c
  7089  003AC8  C001  F005         	movff	isspace@c,??_isspace+2
  7090  003ACC  C002  F006         	movff	isspace@c+1,??_isspace+3
  7091  003AD0  5003               	movf	??_isspace^0,w,c
  7092  003AD2  2605               	addwf	(??_isspace+2)^0,f,c
  7093  003AD4  5004               	movf	(??_isspace+1)^0,w,c
  7094  003AD6  2206               	addwfc	(??_isspace+3)^0,f,c
  7095  003AD8  5006               	movf	(??_isspace+3)^0,w,c
  7096  003ADA  E109               	bnz	u4180
  7097  003ADC  0E05               	movlw	5
  7098  003ADE  5C05               	subwf	(??_isspace+2)^0,w,c
  7099  003AE0  A0D8               	btfss	status,0,c
  7100  003AE2  EF75  F01D         	goto	u4181
  7101  003AE6  EF77  F01D         	goto	u4180
  7102  003AEA                     u4181:
  7103  003AEA  EF79  F01D         	goto	l3688
  7104  003AEE                     u4180:
  7105  003AEE  0E00               	movlw	0
  7106  003AF0  6E07               	movwf	_isspace$1303^0,c
  7107  003AF2                     l3688:
  7108  003AF2  C007  F001         	movff	_isspace$1303,?_isspace
  7109  003AF6  6A02               	clrf	(?_isspace+1)^0,c
  7110  003AF8  0012               	return		;funcret
  7111  003AFA                     __end_of_isspace:
  7112                           	opt callstack 0
  7113                           
  7114 ;; *************** function _isdigit *****************
  7115 ;; Defined at:
  7116 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  c               2    0[COMRAM] int 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;		None
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  2    0[COMRAM] int 
  7123 ;; Registers used:
  7124 ;;		wreg, status,2, status,0
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7130 ;;      Params:         2       0       0       0       0       0       0       0       0
  7131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7132 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7133 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7134 ;;Total ram usage:        6 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; This function calls:
  7137 ;;		Nothing
  7138 ;; This function is called by:
  7139 ;;		_vfpfcnvrt
  7140 ;;		_atoi
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text27
  7145  003C34                     __ptext27:
  7146                           	opt callstack 0
  7147  003C34                     _isdigit:
  7148                           	opt callstack 27
  7149  003C34  0ED0               	movlw	208
  7150  003C36  6E03               	movwf	??_isdigit^0,c
  7151  003C38  0EFF               	movlw	255
  7152  003C3A  6E04               	movwf	(??_isdigit+1)^0,c
  7153  003C3C  C001  F005         	movff	isdigit@c,??_isdigit+2
  7154  003C40  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7155  003C44  5003               	movf	??_isdigit^0,w,c
  7156  003C46  2605               	addwf	(??_isdigit+2)^0,f,c
  7157  003C48  5004               	movf	(??_isdigit+1)^0,w,c
  7158  003C4A  2206               	addwfc	(??_isdigit+3)^0,f,c
  7159  003C4C  5006               	movf	(??_isdigit+3)^0,w,c
  7160  003C4E  E10A               	bnz	u3450
  7161  003C50  0E0A               	movlw	10
  7162  003C52  5C05               	subwf	(??_isdigit+2)^0,w,c
  7163  003C54  A0D8               	btfss	status,0,c
  7164  003C56  EF2F  F01E         	goto	u3451
  7165  003C5A  EF32  F01E         	goto	u3450
  7166  003C5E                     u3451:
  7167  003C5E  0E01               	movlw	1
  7168  003C60  EF33  F01E         	goto	u3460
  7169  003C64                     u3450:
  7170  003C64  0E00               	movlw	0
  7171  003C66                     u3460:
  7172  003C66  6E01               	movwf	?_isdigit^0,c
  7173  003C68  6A02               	clrf	(?_isdigit+1)^0,c
  7174  003C6A  0012               	return		;funcret
  7175  003C6C                     __end_of_isdigit:
  7176                           	opt callstack 0
  7177                           
  7178 ;; *************** function ___wmul *****************
  7179 ;; Defined at:
  7180 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  multiplier      2    0[COMRAM] unsigned int 
  7183 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;  product         2    4[COMRAM] unsigned int 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  2    0[COMRAM] unsigned int 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0, prodl, prodh
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7195 ;;      Params:         4       0       0       0       0       0       0       0       0
  7196 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7198 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7199 ;;Total ram usage:        6 bytes
  7200 ;; Hardware stack levels used:    1
  7201 ;; This function calls:
  7202 ;;		Nothing
  7203 ;; This function is called by:
  7204 ;;		_atoi
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           	psect	text28
  7209  003D48                     __ptext28:
  7210                           	opt callstack 0
  7211  003D48                     ___wmul:
  7212                           	opt callstack 26
  7213  003D48  5001               	movf	___wmul@multiplier^0,w,c
  7214  003D4A  0203               	mulwf	___wmul@multiplicand^0,c
  7215  003D4C  CFF3 F005          	movff	prodl,___wmul@product
  7216  003D50  CFF4 F006          	movff	prodh,___wmul@product+1
  7217  003D54  5001               	movf	___wmul@multiplier^0,w,c
  7218  003D56  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7219  003D58  50F3               	movf	243,w,c
  7220  003D5A  2606               	addwf	(___wmul@product+1)^0,f,c
  7221  003D5C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7222  003D5E  0203               	mulwf	___wmul@multiplicand^0,c
  7223  003D60  50F3               	movf	243,w,c
  7224  003D62  2606               	addwf	(___wmul@product+1)^0,f,c
  7225  003D64  C005  F001         	movff	___wmul@product,?___wmul
  7226  003D68  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7227  003D6C  0012               	return		;funcret
  7228  003D6E                     __end_of___wmul:
  7229                           	opt callstack 0
  7230                           
  7231 ;; *************** function _escribeSD *****************
  7232 ;; Defined at:
  7233 ;;		line 116 in file "./sd.h"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  cadena          2   14[COMRAM] PTR unsigned char 
  7236 ;;		 -> main@datoSalida(50), 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;		None
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  1    wreg      void 
  7241 ;; Registers used:
  7242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7243 ;; Tracked objects:
  7244 ;;		On entry : 0/0
  7245 ;;		On exit  : 0/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7248 ;;      Params:         2       0       0       0       0       0       0       0       0
  7249 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7250 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7251 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7252 ;;Total ram usage:        2 bytes
  7253 ;; Hardware stack levels used:    1
  7254 ;; Hardware stack levels required when called:    3
  7255 ;; This function calls:
  7256 ;;		_Escribir
  7257 ;;		_InicializarSD
  7258 ;;		_Leer
  7259 ;;		_UART_printf
  7260 ;; This function is called by:
  7261 ;;		_main
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           	psect	text29
  7266  003390                     __ptext29:
  7267                           	opt callstack 0
  7268  003390                     _escribeSD:
  7269                           	opt callstack 27
  7270  003390                     
  7271                           ;./sd.h: 118:     if (InicializarSD() == 1) {
  7272  003390  EC7E  F01B         	call	_InicializarSD	;wreg free
  7273  003394  06E8               	decf	wreg,f,c
  7274  003396  A4D8               	btfss	status,2,c
  7275  003398  EFD0  F019         	goto	u5381
  7276  00339C  EFD2  F019         	goto	u5380
  7277  0033A0                     u5381:
  7278  0033A0  EFDA  F019         	goto	l4530
  7279  0033A4                     u5380:
  7280  0033A4                     
  7281                           ;./sd.h: 119:         UART_printf("OK Inicializada en modo SPI\n");
  7282  0033A4  0E01               	movlw	low STR_1
  7283  0033A6  6E02               	movwf	UART_printf@cadena^0,c
  7284  0033A8  0E08               	movlw	high STR_1
  7285  0033AA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7286  0033AC  EC89  F01E         	call	_UART_printf	;wreg free
  7287                           
  7288                           ;./sd.h: 120:     } else {
  7289  0033B0  EF01  F01A         	goto	l4538
  7290  0033B4                     l4530:
  7291                           
  7292                           ;./sd.h: 121:         UART_printf("NOK inicializacion\n");
  7293  0033B4  0E1E               	movlw	low STR_2
  7294  0033B6  6E02               	movwf	UART_printf@cadena^0,c
  7295  0033B8  0E08               	movlw	high STR_2
  7296  0033BA  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7297  0033BC  EC89  F01E         	call	_UART_printf	;wreg free
  7298  0033C0  EF01  F01A         	goto	l4538
  7299  0033C4                     l4532:
  7300                           
  7301                           ;./sd.h: 127:         if (Escribir(*cadena++) == 0)
  7302  0033C4  C00F  FFD9         	movff	escribeSD@cadena,fsr2l
  7303  0033C8  C010  FFDA         	movff	escribeSD@cadena+1,fsr2h
  7304  0033CC  4A0F               	infsnz	escribeSD@cadena^0,f,c
  7305  0033CE  2A10               	incf	(escribeSD@cadena+1)^0,f,c
  7306  0033D0  50DF               	movf	indf2,w,c
  7307  0033D2  EC37  F015         	call	_Escribir
  7308  0033D6  0900               	iorlw	0
  7309  0033D8  A4D8               	btfss	status,2,c
  7310  0033DA  EFF1  F019         	goto	u5391
  7311  0033DE  EFF3  F019         	goto	u5390
  7312  0033E2                     u5391:
  7313  0033E2  EFFB  F019         	goto	l4536
  7314  0033E6                     u5390:
  7315  0033E6                     
  7316                           ;./sd.h: 128:             UART_printf("OK\n");
  7317  0033E6  0E79               	movlw	low STR_3
  7318  0033E8  6E02               	movwf	UART_printf@cadena^0,c
  7319  0033EA  0E08               	movlw	high STR_3
  7320  0033EC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7321  0033EE  EC89  F01E         	call	_UART_printf	;wreg free
  7322  0033F2  EF01  F01A         	goto	l4538
  7323  0033F6                     l4536:
  7324                           
  7325                           ;./sd.h: 130:             UART_printf("F\n");
  7326  0033F6  0E80               	movlw	low STR_4
  7327  0033F8  6E02               	movwf	UART_printf@cadena^0,c
  7328  0033FA  0E08               	movlw	high STR_4
  7329  0033FC  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7330  0033FE  EC89  F01E         	call	_UART_printf	;wreg free
  7331  003402                     l4538:
  7332                           
  7333                           ;./sd.h: 125:     while (*cadena) {
  7334  003402  C00F  FFD9         	movff	escribeSD@cadena,fsr2l
  7335  003406  C010  FFDA         	movff	escribeSD@cadena+1,fsr2h
  7336  00340A  50DF               	movf	indf2,w,c
  7337  00340C  A4D8               	btfss	status,2,c
  7338  00340E  EF0B  F01A         	goto	u5401
  7339  003412  EF0D  F01A         	goto	u5400
  7340  003416                     u5401:
  7341  003416  EFE2  F019         	goto	l4532
  7342  00341A                     u5400:
  7343  00341A                     
  7344                           ;./sd.h: 135:     if (Leer() == 0)
  7345  00341A  EC27  F01A         	call	_Leer	;wreg free
  7346  00341E  0900               	iorlw	0
  7347  003420  A4D8               	btfss	status,2,c
  7348  003422  EF15  F01A         	goto	u5411
  7349  003426  EF17  F01A         	goto	u5410
  7350  00342A                     u5411:
  7351  00342A  EF1F  F01A         	goto	l4544
  7352  00342E                     u5410:
  7353  00342E                     
  7354                           ;./sd.h: 136:         UART_printf("OK termine de leer\n");
  7355  00342E  0E32               	movlw	low STR_5
  7356  003430  6E02               	movwf	UART_printf@cadena^0,c
  7357  003432  0E08               	movlw	high STR_5
  7358  003434  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7359  003436  EC89  F01E         	call	_UART_printf	;wreg free
  7360  00343A  EF25  F01A         	goto	l4546
  7361  00343E                     l4544:
  7362                           
  7363                           ;./sd.h: 138:         UART_printf("NOK no pude leer\n");
  7364  00343E  0E46               	movlw	low STR_6
  7365  003440  6E02               	movwf	UART_printf@cadena^0,c
  7366  003442  0E08               	movlw	high STR_6
  7367  003444  6E03               	movwf	(UART_printf@cadena+1)^0,c
  7368  003446  EC89  F01E         	call	_UART_printf	;wreg free
  7369  00344A                     l4546:
  7370                           
  7371                           ;./sd.h: 140:     CS = 1;
  7372  00344A  8484               	bsf	3972,2,c	;volatile
  7373  00344C  0012               	return		;funcret
  7374  00344E                     __end_of_escribeSD:
  7375                           	opt callstack 0
  7376                           
  7377 ;; *************** function _UART_printf *****************
  7378 ;; Defined at:
  7379 ;;		line 33 in file "./UART.h"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  cadena          2    1[COMRAM] PTR unsigned char 
  7382 ;;		 -> STR_6(18), STR_5(20), STR_4(3), STR_3(4), 
  7383 ;;		 -> STR_2(20), STR_1(29), 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;		None
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      void 
  7388 ;; Registers used:
  7389 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7395 ;;      Params:         2       0       0       0       0       0       0       0       0
  7396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7398 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7399 ;;Total ram usage:        2 bytes
  7400 ;; Hardware stack levels used:    1
  7401 ;; Hardware stack levels required when called:    1
  7402 ;; This function calls:
  7403 ;;		_UART_write
  7404 ;; This function is called by:
  7405 ;;		_escribeSD
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text30
  7410  003D12                     __ptext30:
  7411                           	opt callstack 0
  7412  003D12                     _UART_printf:
  7413                           	opt callstack 28
  7414  003D12                     
  7415                           ;./UART.h: 34:     while (*cadena) {
  7416  003D12  EF95  F01E         	goto	l4192
  7417  003D16                     l4188:
  7418                           
  7419                           ;./UART.h: 35:         UART_write(*cadena++);
  7420  003D16  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  7421  003D1A  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7422  003D1E                     	if	0	;tblptru may be non-zero
  7423  003D1E                     	endif
  7424  003D1E                     	if	0	;tblptru may be non-zero
  7425  003D1E                     	endif
  7426  003D1E  0008               	tblrd		*
  7427  003D20  50F5               	movf	tablat,w,c
  7428  003D22  ECD8  F01E         	call	_UART_write
  7429  003D26  4A02               	infsnz	UART_printf@cadena^0,f,c
  7430  003D28  2A03               	incf	(UART_printf@cadena+1)^0,f,c
  7431  003D2A                     l4192:
  7432                           
  7433                           ;./UART.h: 34:     while (*cadena) {
  7434  003D2A  C002  FFF6         	movff	UART_printf@cadena,tblptrl
  7435  003D2E  C003  FFF7         	movff	UART_printf@cadena+1,tblptrh
  7436  003D32                     	if	0	;tblptru may be non-zero
  7437  003D32                     	endif
  7438  003D32                     	if	0	;tblptru may be non-zero
  7439  003D32                     	endif
  7440  003D32  0008               	tblrd		*
  7441  003D34  50F5               	movf	tablat,w,c
  7442  003D36  0900               	iorlw	0
  7443  003D38  A4D8               	btfss	status,2,c
  7444  003D3A  EFA1  F01E         	goto	u5041
  7445  003D3E  EFA3  F01E         	goto	u5040
  7446  003D42                     u5041:
  7447  003D42  EF8B  F01E         	goto	l4188
  7448  003D46                     u5040:
  7449  003D46  0012               	return		;funcret
  7450  003D48                     __end_of_UART_printf:
  7451                           	opt callstack 0
  7452                           
  7453 ;; *************** function _UART_write *****************
  7454 ;; Defined at:
  7455 ;;		line 28 in file "./UART.h"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  dato            1    wreg     unsigned char 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  dato            1    0[COMRAM] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      void 
  7462 ;; Registers used:
  7463 ;;		wreg
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7469 ;;      Params:         0       0       0       0       0       0       0       0       0
  7470 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7472 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7473 ;;Total ram usage:        1 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_UART_printf
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text31
  7483  003DB0                     __ptext31:
  7484                           	opt callstack 0
  7485  003DB0                     _UART_write:
  7486                           	opt callstack 28
  7487                           
  7488                           ;incstack = 0
  7489                           ;UART_write@dato stored from wreg
  7490  003DB0  6E01               	movwf	UART_write@dato^0,c
  7491  003DB2                     
  7492                           ;./UART.h: 29:     TXREG = dato;
  7493  003DB2  C001  FFAD         	movff	UART_write@dato,4013	;volatile
  7494  003DB6                     l62:
  7495  003DB6  A2AC               	btfss	4012,1,c	;volatile
  7496  003DB8  EFE0  F01E         	goto	u4851
  7497  003DBC  EFE2  F01E         	goto	u4850
  7498  003DC0                     u4851:
  7499  003DC0  EFDB  F01E         	goto	l62
  7500  003DC4                     u4850:
  7501  003DC4  0012               	return		;funcret
  7502  003DC6                     __end_of_UART_write:
  7503                           	opt callstack 0
  7504                           
  7505 ;; *************** function _Leer *****************
  7506 ;; Defined at:
  7507 ;;		line 60 in file "./sd.h"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;		None
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;  yalei           1    0        char 
  7512 ;;  com51           1    9[COMRAM] char 
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  1    wreg      char 
  7515 ;; Registers used:
  7516 ;;		wreg, status,2, status,0, cstack
  7517 ;; Tracked objects:
  7518 ;;		On entry : 0/0
  7519 ;;		On exit  : 0/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7522 ;;      Params:         0       0       0       0       0       0       0       0       0
  7523 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7524 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7525 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7526 ;;Total ram usage:        4 bytes
  7527 ;; Hardware stack levels used:    1
  7528 ;; Hardware stack levels required when called:    2
  7529 ;; This function calls:
  7530 ;;		_Comando
  7531 ;;		_SPI_Read
  7532 ;;		_SPI_Write
  7533 ;; This function is called by:
  7534 ;;		_escribeSD
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text32
  7539  00344E                     __ptext32:
  7540                           	opt callstack 0
  7541  00344E                     _Leer:
  7542                           	opt callstack 27
  7543  00344E                     
  7544                           ;./sd.h: 61:     int8_t com51, yalei;;./sd.h: 62:     CS = 0;
  7545  00344E  9484               	bcf	3972,2,c	;volatile
  7546  003450                     l4258:
  7547  003450  C154  F002         	movff	_Direccion,Comando@Direccion
  7548  003454  C155  F003         	movff	_Direccion+1,Comando@Direccion+1
  7549  003458  C156  F004         	movff	_Direccion+2,Comando@Direccion+2
  7550  00345C  C157  F005         	movff	_Direccion+3,Comando@Direccion+3
  7551  003460  0EFF               	movlw	255
  7552  003462  6E06               	movwf	Comando@CRC^0,c
  7553  003464  0E51               	movlw	81
  7554  003466  EC36  F01E         	call	_Comando
  7555  00346A  0900               	iorlw	0
  7556  00346C  A4D8               	btfss	status,2,c
  7557  00346E  EF3B  F01A         	goto	u5081
  7558  003472  EF3D  F01A         	goto	u5080
  7559  003476                     u5081:
  7560  003476  EF28  F01A         	goto	l4258
  7561  00347A                     u5080:
  7562  00347A                     
  7563                           ;./sd.h: 66:     i = SPI_Read();
  7564  00347A  ECF9  F01E         	call	_SPI_Read	;wreg free
  7565  00347E  0100               	movlb	0	; () banked
  7566  003480  6FFE               	movwf	_i& (0+255),b
  7567  003482                     
  7568                           ; BSR set to: 0
  7569                           ;./sd.h: 67:     com51 = 7;
  7570  003482  0E07               	movlw	7
  7571  003484  6E0A               	movwf	Leer@com51^0,c
  7572  003486                     l4264:
  7573  003486  ECF9  F01E         	call	_SPI_Read	;wreg free
  7574  00348A  0AFE               	xorlw	254
  7575  00348C  A4D8               	btfss	status,2,c
  7576  00348E  EF4B  F01A         	goto	u5091
  7577  003492  EF4D  F01A         	goto	u5090
  7578  003496                     u5091:
  7579  003496  EF43  F01A         	goto	l4264
  7580  00349A                     u5090:
  7581  00349A                     
  7582                           ;./sd.h: 71:     for (i = 0; i < 30; i++) {
  7583  00349A  0E00               	movlw	0
  7584  00349C  0100               	movlb	0	; () banked
  7585  00349E  6FFE               	movwf	_i& (0+255),b
  7586  0034A0                     l4268:
  7587                           
  7588                           ; BSR set to: 0
  7589  0034A0  51FE               	movf	_i& (0+255),w,b
  7590  0034A2  0A80               	xorlw	128
  7591  0034A4  0F62               	addlw	-158
  7592  0034A6  A0D8               	btfss	status,0,c
  7593  0034A8  EF58  F01A         	goto	u5101
  7594  0034AC  EF5A  F01A         	goto	u5100
  7595  0034B0                     u5101:
  7596  0034B0  EF5C  F01A         	goto	l4272
  7597  0034B4                     u5100:
  7598  0034B4  EF69  F01A         	goto	l4278
  7599  0034B8                     l4272:
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;./sd.h: 72:         SPI_Write(0xFF);
  7603  0034B8  0EFF               	movlw	255
  7604  0034BA  ECE3  F01E         	call	_SPI_Write
  7605  0034BE                     
  7606                           ;./sd.h: 73:         Respuesta = SPI_Read();
  7607  0034BE  ECF9  F01E         	call	_SPI_Read	;wreg free
  7608  0034C2  6E08               	movwf	??_Leer^0,c
  7609  0034C4  5008               	movf	??_Leer^0,w,c
  7610  0034C6  0100               	movlb	0	; () banked
  7611  0034C8  6FFC               	movwf	_Respuesta& (0+255),b
  7612  0034CA  6BFD               	clrf	(_Respuesta+1)& (0+255),b
  7613                           
  7614                           ;./sd.h: 74:     }
  7615  0034CC  2BFE               	incf	_i& (0+255),f,b
  7616  0034CE  EF50  F01A         	goto	l4268
  7617  0034D2                     l4278:
  7618  0034D2                     
  7619                           ; BSR set to: 0
  7620                           ;./sd.h: 76:     if ((com51 + yalei) == 28)
  7621  0034D2  C00A  F008         	movff	Leer@com51,??_Leer
  7622  0034D6  6A09               	clrf	(??_Leer+1)^0,c
  7623  0034D8  BE08               	btfsc	??_Leer^0,7,c
  7624  0034DA  0609               	decf	(??_Leer+1)^0,f,c
  7625  0034DC  0E15               	movlw	21
  7626  0034DE  2608               	addwf	??_Leer^0,f,c
  7627  0034E0  0E00               	movlw	0
  7628  0034E2  2209               	addwfc	(??_Leer+1)^0,f,c
  7629  0034E4  0E1C               	movlw	28
  7630  0034E6  1808               	xorwf	??_Leer^0,w,c
  7631  0034E8  1009               	iorwf	(??_Leer+1)^0,w,c
  7632  0034EA  A4D8               	btfss	status,2,c
  7633  0034EC  EF7A  F01A         	goto	u5111
  7634  0034F0  EF7C  F01A         	goto	u5110
  7635  0034F4                     u5111:
  7636  0034F4  EF7F  F01A         	goto	l155
  7637  0034F8                     u5110:
  7638  0034F8                     
  7639                           ; BSR set to: 0
  7640                           ;./sd.h: 77:         return 0;
  7641  0034F8  0E00               	movlw	0
  7642  0034FA  EF80  F01A         	goto	l156
  7643  0034FE                     l155:
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;./sd.h: 79:     CS = 1;
  7647  0034FE  8484               	bsf	3972,2,c	;volatile
  7648  003500                     l156:
  7649                           
  7650                           ; BSR set to: 0
  7651  003500  0012               	return		;funcret
  7652  003502                     __end_of_Leer:
  7653                           	opt callstack 0
  7654                           
  7655 ;; *************** function _InicializarSD *****************
  7656 ;; Defined at:
  7657 ;;		line 35 in file "./sd.h"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;		None
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  com41           1    0        char 
  7662 ;;  com40           1    0        char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      char 
  7665 ;; Registers used:
  7666 ;;		wreg, status,2, status,0, cstack
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7672 ;;      Params:         0       0       0       0       0       0       0       0       0
  7673 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7675 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7676 ;;Total ram usage:        2 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    2
  7679 ;; This function calls:
  7680 ;;		_Comando
  7681 ;;		_SPI_Read
  7682 ;;		_SPI_Write
  7683 ;; This function is called by:
  7684 ;;		_escribeSD
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text33
  7689  0036FC                     __ptext33:
  7690                           	opt callstack 0
  7691  0036FC                     _InicializarSD:
  7692                           	opt callstack 27
  7693  0036FC                     
  7694                           ;./sd.h: 36:     int8_t com40, com41;;./sd.h: 37:     CS = 1;
  7695  0036FC  8484               	bsf	3972,2,c	;volatile
  7696  0036FE                     
  7697                           ;./sd.h: 38:     for (i = 0; i < 10; i++) {
  7698  0036FE  0E00               	movlw	0
  7699  003700  0100               	movlb	0	; () banked
  7700  003702  6FFE               	movwf	_i& (0+255),b
  7701  003704                     l4228:
  7702                           
  7703                           ; BSR set to: 0
  7704  003704  51FE               	movf	_i& (0+255),w,b
  7705  003706  0A80               	xorlw	128
  7706  003708  0F76               	addlw	-138
  7707  00370A  A0D8               	btfss	status,0,c
  7708  00370C  EF8A  F01B         	goto	u5051
  7709  003710  EF8C  F01B         	goto	u5050
  7710  003714                     u5051:
  7711  003714  EF8E  F01B         	goto	l4232
  7712  003718                     u5050:
  7713  003718  EF95  F01B         	goto	l136
  7714  00371C                     l4232:
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;./sd.h: 39:         SPI_Write(0xFF);
  7718  00371C  0EFF               	movlw	255
  7719  00371E  ECE3  F01E         	call	_SPI_Write
  7720  003722                     
  7721                           ;./sd.h: 40:     }
  7722  003722  0100               	movlb	0	; () banked
  7723  003724  2BFE               	incf	_i& (0+255),f,b
  7724  003726  EF82  F01B         	goto	l4228
  7725  00372A                     l136:
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;./sd.h: 42:     CS = 0;
  7729  00372A  9484               	bcf	3972,2,c	;volatile
  7730  00372C                     l4238:
  7731  00372C  0E00               	movlw	0
  7732  00372E  6E02               	movwf	Comando@Direccion^0,c
  7733  003730  0E00               	movlw	0
  7734  003732  6E03               	movwf	(Comando@Direccion+1)^0,c
  7735  003734  0E00               	movlw	0
  7736  003736  6E04               	movwf	(Comando@Direccion+2)^0,c
  7737  003738  0E00               	movlw	0
  7738  00373A  6E05               	movwf	(Comando@Direccion+3)^0,c
  7739  00373C  0E95               	movlw	149
  7740  00373E  6E06               	movwf	Comando@CRC^0,c
  7741  003740  0E40               	movlw	64
  7742  003742  EC36  F01E         	call	_Comando
  7743  003746  06E8               	decf	wreg,f,c
  7744  003748  A4D8               	btfss	status,2,c
  7745  00374A  EFA9  F01B         	goto	u5061
  7746  00374E  EFAB  F01B         	goto	u5060
  7747  003752                     u5061:
  7748  003752  EF96  F01B         	goto	l4238
  7749  003756                     u5060:
  7750  003756                     
  7751                           ;./sd.h: 45:     i = SPI_Read();
  7752  003756  ECF9  F01E         	call	_SPI_Read	;wreg free
  7753  00375A  0100               	movlb	0	; () banked
  7754  00375C  6FFE               	movwf	_i& (0+255),b
  7755  00375E                     l4244:
  7756  00375E  0E00               	movlw	0
  7757  003760  6E02               	movwf	Comando@Direccion^0,c
  7758  003762  0E00               	movlw	0
  7759  003764  6E03               	movwf	(Comando@Direccion+1)^0,c
  7760  003766  0E00               	movlw	0
  7761  003768  6E04               	movwf	(Comando@Direccion+2)^0,c
  7762  00376A  0E00               	movlw	0
  7763  00376C  6E05               	movwf	(Comando@Direccion+3)^0,c
  7764  00376E  0EFF               	movlw	255
  7765  003770  6E06               	movwf	Comando@CRC^0,c
  7766  003772  0E41               	movlw	65
  7767  003774  EC36  F01E         	call	_Comando
  7768  003778  0900               	iorlw	0
  7769  00377A  A4D8               	btfss	status,2,c
  7770  00377C  EFC2  F01B         	goto	u5071
  7771  003780  EFC4  F01B         	goto	u5070
  7772  003784                     u5071:
  7773  003784  EFAF  F01B         	goto	l4244
  7774  003788                     u5070:
  7775  003788                     
  7776                           ;./sd.h: 50:     i = SPI_Read();
  7777  003788  ECF9  F01E         	call	_SPI_Read	;wreg free
  7778  00378C  0100               	movlb	0	; () banked
  7779  00378E  6FFE               	movwf	_i& (0+255),b
  7780  003790                     
  7781                           ; BSR set to: 0
  7782                           ;./sd.h: 54:         return 1;
  7783  003790  0E01               	movlw	1
  7784  003792                     
  7785                           ; BSR set to: 0
  7786  003792  0012               	return		;funcret
  7787  003794                     __end_of_InicializarSD:
  7788                           	opt callstack 0
  7789                           
  7790 ;; *************** function _Escribir *****************
  7791 ;; Defined at:
  7792 ;;		line 83 in file "./sd.h"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;  Caracter        1    wreg     char 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  Caracter        1   11[COMRAM] char 
  7797 ;;  yaescribi       1   13[COMRAM] char 
  7798 ;;  com58           1   12[COMRAM] char 
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      char 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0, cstack
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7808 ;;      Params:         0       0       0       0       0       0       0       0       0
  7809 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7810 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7811 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7812 ;;Total ram usage:        7 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; Hardware stack levels required when called:    2
  7815 ;; This function calls:
  7816 ;;		_Comando
  7817 ;;		_SPI_Read
  7818 ;;		_SPI_Write
  7819 ;; This function is called by:
  7820 ;;		_escribeSD
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824                           	psect	text34
  7825  002A6E                     __ptext34:
  7826                           	opt callstack 0
  7827  002A6E                     _Escribir:
  7828                           	opt callstack 27
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;incstack = 0
  7832                           ;Escribir@Caracter stored from wreg
  7833  002A6E  6E0C               	movwf	Escribir@Caracter^0,c
  7834  002A70                     
  7835                           ;./sd.h: 84:     int8_t com58, yaescribi;;./sd.h: 86:     CS = 0;
  7836  002A70  9484               	bcf	3972,2,c	;volatile
  7837  002A72                     l4288:
  7838  002A72  C154  F002         	movff	_Direccion,Comando@Direccion
  7839  002A76  C155  F003         	movff	_Direccion+1,Comando@Direccion+1
  7840  002A7A  C156  F004         	movff	_Direccion+2,Comando@Direccion+2
  7841  002A7E  C157  F005         	movff	_Direccion+3,Comando@Direccion+3
  7842  002A82  0EFF               	movlw	255
  7843  002A84  6E06               	movwf	Comando@CRC^0,c
  7844  002A86  0E58               	movlw	88
  7845  002A88  EC36  F01E         	call	_Comando
  7846  002A8C  0900               	iorlw	0
  7847  002A8E  A4D8               	btfss	status,2,c
  7848  002A90  EF4C  F015         	goto	u5121
  7849  002A94  EF4E  F015         	goto	u5120
  7850  002A98                     u5121:
  7851  002A98  EF39  F015         	goto	l4288
  7852  002A9C                     u5120:
  7853  002A9C                     
  7854                           ;./sd.h: 89:     i = SPI_Read();
  7855  002A9C  ECF9  F01E         	call	_SPI_Read	;wreg free
  7856  002AA0  0100               	movlb	0	; () banked
  7857  002AA2  6FFE               	movwf	_i& (0+255),b
  7858  002AA4                     
  7859                           ; BSR set to: 0
  7860                           ;./sd.h: 90:     com58 = 7;
  7861  002AA4  0E07               	movlw	7
  7862  002AA6  6E0D               	movwf	Escribir@com58^0,c
  7863  002AA8                     
  7864                           ; BSR set to: 0
  7865                           ;./sd.h: 92:     SPI_Write(0xFE);
  7866  002AA8  0EFE               	movlw	254
  7867  002AAA  ECE3  F01E         	call	_SPI_Write
  7868  002AAE                     
  7869                           ;./sd.h: 94:     for (x = 0; x < 512; x++) {
  7870  002AAE  0E00               	movlw	0
  7871  002AB0  0100               	movlb	0	; () banked
  7872  002AB2  6FFB               	movwf	(_x+1)& (0+255),b
  7873  002AB4  0E00               	movlw	0
  7874  002AB6  6FFA               	movwf	_x& (0+255),b
  7875  002AB8                     l4302:
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;./sd.h: 95:         SPI_Write(Caracter);
  7879  002AB8  500C               	movf	Escribir@Caracter^0,w,c
  7880  002ABA  ECE3  F01E         	call	_SPI_Write
  7881  002ABE                     
  7882                           ;./sd.h: 96:     }
  7883  002ABE  0100               	movlb	0	; () banked
  7884  002AC0  4BFA               	infsnz	_x& (0+255),f,b
  7885  002AC2  2BFB               	incf	(_x+1)& (0+255),f,b
  7886  002AC4                     
  7887                           ; BSR set to: 0
  7888  002AC4  BFFB               	btfsc	(_x+1)& (0+255),7,b
  7889  002AC6  EF6C  F015         	goto	u5131
  7890  002ACA  0E02               	movlw	2
  7891  002ACC  5DFB               	subwf	(_x+1)& (0+255),w,b
  7892  002ACE  A0D8               	btfss	status,0,c
  7893  002AD0  EF6C  F015         	goto	u5131
  7894  002AD4  EF6E  F015         	goto	u5130
  7895  002AD8                     u5131:
  7896  002AD8  EF5C  F015         	goto	l4302
  7897  002ADC                     u5130:
  7898  002ADC                     
  7899                           ; BSR set to: 0
  7900                           ;./sd.h: 97:     SPI_Write(0xFF);
  7901  002ADC  0EFF               	movlw	255
  7902  002ADE  ECE3  F01E         	call	_SPI_Write
  7903  002AE2                     
  7904                           ;./sd.h: 98:     for (i = 0; i < 64; i++) {
  7905  002AE2  0E00               	movlw	0
  7906  002AE4  0100               	movlb	0	; () banked
  7907  002AE6  6FFE               	movwf	_i& (0+255),b
  7908  002AE8                     l4312:
  7909                           
  7910                           ; BSR set to: 0
  7911  002AE8  51FE               	movf	_i& (0+255),w,b
  7912  002AEA  0A80               	xorlw	128
  7913  002AEC  0F40               	addlw	-192
  7914  002AEE  A0D8               	btfss	status,0,c
  7915  002AF0  EF7C  F015         	goto	u5141
  7916  002AF4  EF7E  F015         	goto	u5140
  7917  002AF8                     u5141:
  7918  002AF8  EF80  F015         	goto	l4316
  7919  002AFC                     u5140:
  7920  002AFC  EF9B  F015         	goto	l4328
  7921  002B00                     l4316:
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;./sd.h: 99:         SPI_Write(0xFF);
  7925  002B00  0EFF               	movlw	255
  7926  002B02  ECE3  F01E         	call	_SPI_Write
  7927  002B06                     
  7928                           ;./sd.h: 100:         Respuesta = SPI_Read();
  7929  002B06  ECF9  F01E         	call	_SPI_Read	;wreg free
  7930  002B0A  6E08               	movwf	??_Escribir^0,c
  7931  002B0C  5008               	movf	??_Escribir^0,w,c
  7932  002B0E  0100               	movlb	0	; () banked
  7933  002B10  6FFC               	movwf	_Respuesta& (0+255),b
  7934  002B12  6BFD               	clrf	(_Respuesta+1)& (0+255),b
  7935  002B14                     
  7936                           ; BSR set to: 0
  7937                           ;./sd.h: 101:         if (Respuesta == 0xE5) {
  7938  002B14  0EE5               	movlw	229
  7939  002B16  19FC               	xorwf	_Respuesta& (0+255),w,b
  7940  002B18  11FD               	iorwf	(_Respuesta+1)& (0+255),w,b
  7941  002B1A  A4D8               	btfss	status,2,c
  7942  002B1C  EF92  F015         	goto	u5151
  7943  002B20  EF94  F015         	goto	u5150
  7944  002B24                     u5151:
  7945  002B24  EF98  F015         	goto	l4324
  7946  002B28                     u5150:
  7947  002B28                     
  7948                           ; BSR set to: 0
  7949                           ;./sd.h: 102:             yaescribi = 21;
  7950  002B28  0E15               	movlw	21
  7951  002B2A  6E0E               	movwf	Escribir@yaescribi^0,c
  7952                           
  7953                           ;./sd.h: 103:             break;
  7954  002B2C  EF9B  F015         	goto	l4328
  7955  002B30                     l4324:
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;./sd.h: 105:     }
  7959  002B30  2BFE               	incf	_i& (0+255),f,b
  7960  002B32  EF74  F015         	goto	l4312
  7961  002B36                     l4328:
  7962  002B36  ECF9  F01E         	call	_SPI_Read	;wreg free
  7963  002B3A  0AFF               	xorlw	255
  7964  002B3C  A4D8               	btfss	status,2,c
  7965  002B3E  EFA3  F015         	goto	u5161
  7966  002B42  EFA5  F015         	goto	u5160
  7967  002B46                     u5161:
  7968  002B46  EF9B  F015         	goto	l4328
  7969  002B4A                     u5160:
  7970  002B4A                     
  7971                           ;./sd.h: 108:     if ((com58 + yaescribi) == 28)
  7972  002B4A  C00E  F008         	movff	Escribir@yaescribi,??_Escribir
  7973  002B4E  6A09               	clrf	(??_Escribir+1)^0,c
  7974  002B50  BE08               	btfsc	??_Escribir^0,7,c
  7975  002B52  0609               	decf	(??_Escribir+1)^0,f,c
  7976  002B54  C00D  F00A         	movff	Escribir@com58,??_Escribir+2
  7977  002B58  6A0B               	clrf	(??_Escribir+3)^0,c
  7978  002B5A  BE0A               	btfsc	(??_Escribir+2)^0,7,c
  7979  002B5C  060B               	decf	(??_Escribir+3)^0,f,c
  7980  002B5E  5008               	movf	??_Escribir^0,w,c
  7981  002B60  260A               	addwf	(??_Escribir+2)^0,f,c
  7982  002B62  5009               	movf	(??_Escribir+1)^0,w,c
  7983  002B64  220B               	addwfc	(??_Escribir+3)^0,f,c
  7984  002B66  0E1C               	movlw	28
  7985  002B68  180A               	xorwf	(??_Escribir+2)^0,w,c
  7986  002B6A  100B               	iorwf	(??_Escribir+3)^0,w,c
  7987  002B6C  A4D8               	btfss	status,2,c
  7988  002B6E  EFBB  F015         	goto	u5171
  7989  002B72  EFBD  F015         	goto	u5170
  7990  002B76                     u5171:
  7991  002B76  EFC0  F015         	goto	l4338
  7992  002B7A                     u5170:
  7993  002B7A                     
  7994                           ;./sd.h: 109:         return 0;
  7995  002B7A  0E00               	movlw	0
  7996  002B7C  EFC1  F015         	goto	l171
  7997  002B80                     l4338:
  7998                           
  7999                           ;./sd.h: 111:         return 10;
  8000  002B80  0E0A               	movlw	10
  8001  002B82                     l171:
  8002  002B82  0012               	return		;funcret
  8003  002B84                     __end_of_Escribir:
  8004                           	opt callstack 0
  8005                           
  8006 ;; *************** function _Comando *****************
  8007 ;; Defined at:
  8008 ;;		line 22 in file "./sd.h"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  NumeroComand    1    wreg     char 
  8011 ;;  Direccion       4    1[COMRAM] long 
  8012 ;;  CRC             1    5[COMRAM] char 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  NumeroComand    1    6[COMRAM] char 
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  1    wreg      char 
  8017 ;; Registers used:
  8018 ;;		wreg, status,2, cstack
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8024 ;;      Params:         5       0       0       0       0       0       0       0       0
  8025 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8027 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8028 ;;Total ram usage:        6 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; Hardware stack levels required when called:    1
  8031 ;; This function calls:
  8032 ;;		_SPI_Read
  8033 ;;		_SPI_Write
  8034 ;; This function is called by:
  8035 ;;		_InicializarSD
  8036 ;;		_Leer
  8037 ;;		_Escribir
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	text35
  8042  003C6C                     __ptext35:
  8043                           	opt callstack 0
  8044  003C6C                     _Comando:
  8045                           	opt callstack 27
  8046                           
  8047                           ;incstack = 0
  8048                           ;Comando@NumeroComando stored from wreg
  8049  003C6C  6E07               	movwf	Comando@NumeroComando^0,c
  8050  003C6E                     
  8051                           ;./sd.h: 22: int8_t Comando(int8_t NumeroComando, int32_t Direccion, int8_t CRC);./sd.h:
      +                           23: {;./sd.h: 24:     SPI_Write(0xFF);
  8052  003C6E  0EFF               	movlw	255
  8053  003C70  ECE3  F01E         	call	_SPI_Write
  8054  003C74                     
  8055                           ;./sd.h: 25:     SPI_Write(NumeroComando);
  8056  003C74  5007               	movf	Comando@NumeroComando^0,w,c
  8057  003C76  ECE3  F01E         	call	_SPI_Write
  8058  003C7A                     
  8059                           ;./sd.h: 26:     SPI_Write((unsigned char) (Direccion >> 24));
  8060  003C7A  5005               	movf	(Comando@Direccion+3)^0,w,c
  8061  003C7C  ECE3  F01E         	call	_SPI_Write
  8062  003C80                     
  8063                           ;./sd.h: 27:     SPI_Write((unsigned char) (Direccion >> 16));
  8064  003C80  5004               	movf	(Comando@Direccion+2)^0,w,c
  8065  003C82  ECE3  F01E         	call	_SPI_Write
  8066  003C86                     
  8067                           ;./sd.h: 28:     SPI_Write((unsigned char) (Direccion >> 8));
  8068  003C86  5003               	movf	(Comando@Direccion+1)^0,w,c
  8069  003C88  ECE3  F01E         	call	_SPI_Write
  8070  003C8C                     
  8071                           ;./sd.h: 29:     SPI_Write((unsigned char) Direccion);
  8072  003C8C  5002               	movf	Comando@Direccion^0,w,c
  8073  003C8E  ECE3  F01E         	call	_SPI_Write
  8074  003C92                     
  8075                           ;./sd.h: 30:     SPI_Write(CRC);
  8076  003C92  5006               	movf	Comando@CRC^0,w,c
  8077  003C94  ECE3  F01E         	call	_SPI_Write
  8078                           
  8079                           ;./sd.h: 31:     SPI_Write(0xFF);
  8080  003C98  0EFF               	movlw	255
  8081  003C9A  ECE3  F01E         	call	_SPI_Write
  8082  003C9E                     
  8083                           ;./sd.h: 32:     return SPI_Read();
  8084  003C9E  ECF9  F01E         	call	_SPI_Read	;wreg free
  8085  003CA2  0012               	return		;funcret
  8086  003CA4                     __end_of_Comando:
  8087                           	opt callstack 0
  8088                           
  8089 ;; *************** function _SPI_Write *****************
  8090 ;; Defined at:
  8091 ;;		line 18 in file "./SPI.h"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  x               1    wreg     unsigned char 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  x               1    0[COMRAM] unsigned char 
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  1    wreg      void 
  8098 ;; Registers used:
  8099 ;;		wreg
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8105 ;;      Params:         0       0       0       0       0       0       0       0       0
  8106 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8108 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8109 ;;Total ram usage:        1 bytes
  8110 ;; Hardware stack levels used:    1
  8111 ;; This function calls:
  8112 ;;		Nothing
  8113 ;; This function is called by:
  8114 ;;		_Comando
  8115 ;;		_InicializarSD
  8116 ;;		_Leer
  8117 ;;		_Escribir
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           	psect	text36
  8122  003DC6                     __ptext36:
  8123                           	opt callstack 0
  8124  003DC6                     _SPI_Write:
  8125                           	opt callstack 28
  8126                           
  8127                           ;incstack = 0
  8128                           ;SPI_Write@x stored from wreg
  8129  003DC6  6E01               	movwf	SPI_Write@x^0,c
  8130  003DC8                     
  8131                           ;./SPI.h: 20:     SSPBUF = x;
  8132  003DC8  C001  FFC9         	movff	SPI_Write@x,4041	;volatile
  8133  003DCC                     l112:
  8134  003DCC  A0C7               	btfss	199,0,c	;volatile
  8135  003DCE  EFEB  F01E         	goto	u4191
  8136  003DD2  EFED  F01E         	goto	u4190
  8137  003DD6                     u4191:
  8138  003DD6  EFE6  F01E         	goto	l112
  8139  003DDA                     u4190:
  8140  003DDA  0012               	return		;funcret
  8141  003DDC                     __end_of_SPI_Write:
  8142                           	opt callstack 0
  8143                           
  8144 ;; *************** function _SPI_Read *****************
  8145 ;; Defined at:
  8146 ;;		line 25 in file "./SPI.h"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;		None
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;		None
  8151 ;; Return value:  Size  Location     Type
  8152 ;;                  1    wreg      unsigned char 
  8153 ;; Registers used:
  8154 ;;		wreg, status,2
  8155 ;; Tracked objects:
  8156 ;;		On entry : 0/0
  8157 ;;		On exit  : 0/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8160 ;;      Params:         0       0       0       0       0       0       0       0       0
  8161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8163 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8164 ;;Total ram usage:        0 bytes
  8165 ;; Hardware stack levels used:    1
  8166 ;; This function calls:
  8167 ;;		Nothing
  8168 ;; This function is called by:
  8169 ;;		_Comando
  8170 ;;		_InicializarSD
  8171 ;;		_Leer
  8172 ;;		_Escribir
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           
  8176                           	psect	text37
  8177  003DF2                     __ptext37:
  8178                           	opt callstack 0
  8179  003DF2                     _SPI_Read:
  8180                           	opt callstack 28
  8181  003DF2                     l118:
  8182  003DF2  A0C7               	btfss	199,0,c	;volatile
  8183  003DF4  EFFE  F01E         	goto	u4201
  8184  003DF8  EF00  F01F         	goto	u4200
  8185  003DFC                     u4201:
  8186  003DFC  EFF9  F01E         	goto	l118
  8187  003E00                     u4200:
  8188  003E00                     
  8189                           ;./SPI.h: 27:     return (SSPBUF);
  8190  003E00  50C9               	movf	201,w,c	;volatile
  8191  003E02  0012               	return		;funcret
  8192  003E04                     __end_of_SPI_Read:
  8193                           	opt callstack 0
  8194                           
  8195 ;; *************** function _dameTemperaturaLm35 *****************
  8196 ;; Defined at:
  8197 ;;		line 24 in file "main.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  temperatura     2   25[COMRAM] PTR float 
  8200 ;;		 -> main@temperatura(4), 
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;		None
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      void 
  8205 ;; Registers used:
  8206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8212 ;;      Params:         2       0       0       0       0       0       0       0       0
  8213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8214 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8215 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8216 ;;Total ram usage:        4 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; Hardware stack levels required when called:    1
  8219 ;; This function calls:
  8220 ;;		___flmul
  8221 ;;		___xxtofl
  8222 ;; This function is called by:
  8223 ;;		_main
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text38
  8228  00365C                     __ptext38:
  8229                           	opt callstack 0
  8230  00365C                     _dameTemperaturaLm35:
  8231                           	opt callstack 29
  8232  00365C                     
  8233                           ;main.c: 25:     ADCON0bits.CHS = 0b0000;
  8234  00365C  0EC3               	movlw	-61
  8235  00365E  16C2               	andwf	194,f,c	;volatile
  8236  003660                     
  8237                           ;main.c: 26:     ADCON0bits.GO = 1;
  8238  003660  82C2               	bsf	194,1,c	;volatile
  8239  003662                     
  8240                           ;main.c: 27:     ADCON0bits.GO_DONE = 1;
  8241  003662  82C2               	bsf	194,1,c	;volatile
  8242  003664                     l190:
  8243  003664  B2C2               	btfsc	194,1,c	;volatile
  8244  003666  EF37  F01B         	goto	u5421
  8245  00366A  EF39  F01B         	goto	u5420
  8246  00366E                     u5421:
  8247  00366E  EF32  F01B         	goto	l190
  8248  003672                     u5420:
  8249  003672                     
  8250                           ;main.c: 31:     *temperatura = (ADRESH << 8) + ADRESL;
  8251  003672  50C3               	movf	195,w,c	;volatile
  8252  003674  CFC4 F01C          	movff	4036,??_dameTemperaturaLm35	;volatile
  8253  003678  6A1D               	clrf	(??_dameTemperaturaLm35+1)^0,c
  8254  00367A  C01C  F01D         	movff	??_dameTemperaturaLm35,??_dameTemperaturaLm35+1
  8255  00367E  6A1C               	clrf	??_dameTemperaturaLm35^0,c
  8256  003680  261C               	addwf	??_dameTemperaturaLm35^0,f,c
  8257  003682  0E00               	movlw	0
  8258  003684  221D               	addwfc	(??_dameTemperaturaLm35+1)^0,f,c
  8259  003686  C01C  F001         	movff	??_dameTemperaturaLm35,___xxtofl@val
  8260  00368A  C01D  F002         	movff	??_dameTemperaturaLm35+1,___xxtofl@val+1
  8261  00368E  0E00               	movlw	0
  8262  003690  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8263  003692  0EFF               	movlw	-1
  8264  003694  6E03               	movwf	(___xxtofl@val+2)^0,c
  8265  003696  6E04               	movwf	(___xxtofl@val+3)^0,c
  8266  003698  0E01               	movlw	1
  8267  00369A  EC95  F013         	call	___xxtofl
  8268  00369E  C01A  FFD9         	movff	dameTemperaturaLm35@temperatura,fsr2l
  8269  0036A2  C01B  FFDA         	movff	dameTemperaturaLm35@temperatura+1,fsr2h
  8270  0036A6  C001  FFDE         	movff	?___xxtofl,postinc2
  8271  0036AA  C002  FFDE         	movff	?___xxtofl+1,postinc2
  8272  0036AE  C003  FFDE         	movff	?___xxtofl+2,postinc2
  8273  0036B2  C004  FFDE         	movff	?___xxtofl+3,postinc2
  8274  0036B6                     
  8275                           ;main.c: 33:     *temperatura *= 0.48877;
  8276  0036B6  C01A  FFD9         	movff	dameTemperaturaLm35@temperatura,fsr2l
  8277  0036BA  C01B  FFDA         	movff	dameTemperaturaLm35@temperatura+1,fsr2h
  8278  0036BE  CFDE F001          	movff	postinc2,___flmul@b
  8279  0036C2  CFDE F002          	movff	postinc2,___flmul@b+1
  8280  0036C6  CFDE F003          	movff	postinc2,___flmul@b+2
  8281  0036CA  CFDE F004          	movff	postinc2,___flmul@b+3
  8282  0036CE  0E10               	movlw	16
  8283  0036D0  6E05               	movwf	___flmul@a^0,c
  8284  0036D2  0E40               	movlw	64
  8285  0036D4  6E06               	movwf	(___flmul@a+1)^0,c
  8286  0036D6  0EFA               	movlw	250
  8287  0036D8  6E07               	movwf	(___flmul@a+2)^0,c
  8288  0036DA  0E3E               	movlw	62
  8289  0036DC  6E08               	movwf	(___flmul@a+3)^0,c
  8290  0036DE  ECAA  F00E         	call	___flmul	;wreg free
  8291  0036E2  C01A  FFD9         	movff	dameTemperaturaLm35@temperatura,fsr2l
  8292  0036E6  C01B  FFDA         	movff	dameTemperaturaLm35@temperatura+1,fsr2h
  8293  0036EA  C001  FFDE         	movff	?___flmul,postinc2
  8294  0036EE  C002  FFDE         	movff	?___flmul+1,postinc2
  8295  0036F2  C003  FFDE         	movff	?___flmul+2,postinc2
  8296  0036F6  C004  FFDE         	movff	?___flmul+3,postinc2
  8297  0036FA  0012               	return		;funcret
  8298  0036FC                     __end_of_dameTemperaturaLm35:
  8299                           	opt callstack 0
  8300                           
  8301 ;; *************** function ___xxtofl *****************
  8302 ;; Defined at:
  8303 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  sign            1    wreg     unsigned char 
  8306 ;;  val             4    0[COMRAM] long 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;  sign            1    8[COMRAM] unsigned char 
  8309 ;;  arg             4   10[COMRAM] unsigned long 
  8310 ;;  exp             1    9[COMRAM] unsigned char 
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  4    0[COMRAM] unsigned char 
  8313 ;; Registers used:
  8314 ;;		wreg, status,2, status,0
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8320 ;;      Params:         4       0       0       0       0       0       0       0       0
  8321 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8322 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8323 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8324 ;;Total ram usage:       14 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; This function calls:
  8327 ;;		Nothing
  8328 ;; This function is called by:
  8329 ;;		_dameTemperaturaLm35
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           	psect	text39
  8334  00272A                     __ptext39:
  8335                           	opt callstack 0
  8336  00272A                     ___xxtofl:
  8337                           	opt callstack 29
  8338                           
  8339                           ;incstack = 0
  8340                           ;___xxtofl@sign stored from wreg
  8341  00272A  6E09               	movwf	___xxtofl@sign^0,c
  8342  00272C  5009               	movf	___xxtofl@sign^0,w,c
  8343  00272E  B4D8               	btfsc	status,2,c
  8344  002730  EF9C  F013         	goto	u5251
  8345  002734  EF9E  F013         	goto	u5250
  8346  002738                     u5251:
  8347  002738  EFC0  F013         	goto	l1027
  8348  00273C                     u5250:
  8349  00273C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8350  00273E  EFA5  F013         	goto	u5260
  8351  002742  EFA3  F013         	goto	u5261
  8352  002746                     u5261:
  8353  002746  EFC0  F013         	goto	l1027
  8354  00274A                     u5260:
  8355  00274A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8356  00274E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8357  002752  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8358  002756  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8359  00275A  1E05               	comf	??___xxtofl^0,f,c
  8360  00275C  1E06               	comf	(??___xxtofl+1)^0,f,c
  8361  00275E  1E07               	comf	(??___xxtofl+2)^0,f,c
  8362  002760  1E08               	comf	(??___xxtofl+3)^0,f,c
  8363  002762  2A05               	incf	??___xxtofl^0,f,c
  8364  002764  0E00               	movlw	0
  8365  002766  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8366  002768  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8367  00276A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8368  00276C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8369  002770  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8370  002774  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8371  002778  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8372  00277C  EFC8  F013         	goto	l4400
  8373  002780                     l1027:
  8374  002780  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8375  002784  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8376  002788  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8377  00278C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8378  002790                     l4400:
  8379  002790  5001               	movf	___xxtofl@val^0,w,c
  8380  002792  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8381  002794  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8382  002796  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8383  002798  A4D8               	btfss	status,2,c
  8384  00279A  EFD1  F013         	goto	u5271
  8385  00279E  EFD3  F013         	goto	u5270
  8386  0027A2                     u5271:
  8387  0027A2  EFDD  F013         	goto	l4406
  8388  0027A6                     u5270:
  8389  0027A6  0E00               	movlw	0
  8390  0027A8  6E01               	movwf	?___xxtofl^0,c
  8391  0027AA  0E00               	movlw	0
  8392  0027AC  6E02               	movwf	(?___xxtofl+1)^0,c
  8393  0027AE  0E00               	movlw	0
  8394  0027B0  6E03               	movwf	(?___xxtofl+2)^0,c
  8395  0027B2  0E00               	movlw	0
  8396  0027B4  6E04               	movwf	(?___xxtofl+3)^0,c
  8397  0027B6  EF6E  F014         	goto	l1030
  8398  0027BA                     l4406:
  8399  0027BA  0E96               	movlw	150
  8400  0027BC  6E0A               	movwf	___xxtofl@exp^0,c
  8401  0027BE  EFE7  F013         	goto	l4410
  8402  0027C2                     l4408:
  8403  0027C2  2A0A               	incf	___xxtofl@exp^0,f,c
  8404  0027C4  90D8               	bcf	status,0,c
  8405  0027C6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8406  0027C8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8407  0027CA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8408  0027CC  320B               	rrcf	___xxtofl@arg^0,f,c
  8409  0027CE                     l4410:
  8410  0027CE  0E00               	movlw	0
  8411  0027D0  140B               	andwf	___xxtofl@arg^0,w,c
  8412  0027D2  6E05               	movwf	??___xxtofl^0,c
  8413  0027D4  0E00               	movlw	0
  8414  0027D6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8415  0027D8  6E06               	movwf	(??___xxtofl+1)^0,c
  8416  0027DA  0E00               	movlw	0
  8417  0027DC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8418  0027DE  6E07               	movwf	(??___xxtofl+2)^0,c
  8419  0027E0  0EFE               	movlw	254
  8420  0027E2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8421  0027E4  6E08               	movwf	(??___xxtofl+3)^0,c
  8422  0027E6  5005               	movf	??___xxtofl^0,w,c
  8423  0027E8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8424  0027EA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8425  0027EC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8426  0027EE  A4D8               	btfss	status,2,c
  8427  0027F0  EFFC  F013         	goto	u5281
  8428  0027F4  EFFE  F013         	goto	u5280
  8429  0027F8                     u5281:
  8430  0027F8  EFE1  F013         	goto	l4408
  8431  0027FC                     u5280:
  8432  0027FC  EF0C  F014         	goto	l1034
  8433  002800                     l4412:
  8434  002800  2A0A               	incf	___xxtofl@exp^0,f,c
  8435  002802  0E01               	movlw	1
  8436  002804  260B               	addwf	___xxtofl@arg^0,f,c
  8437  002806  0E00               	movlw	0
  8438  002808  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8439  00280A  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8440  00280C  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8441  00280E  90D8               	bcf	status,0,c
  8442  002810  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8443  002812  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8444  002814  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8445  002816  320B               	rrcf	___xxtofl@arg^0,f,c
  8446  002818                     l1034:
  8447  002818  0E00               	movlw	0
  8448  00281A  140B               	andwf	___xxtofl@arg^0,w,c
  8449  00281C  6E05               	movwf	??___xxtofl^0,c
  8450  00281E  0E00               	movlw	0
  8451  002820  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8452  002822  6E06               	movwf	(??___xxtofl+1)^0,c
  8453  002824  0E00               	movlw	0
  8454  002826  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8455  002828  6E07               	movwf	(??___xxtofl+2)^0,c
  8456  00282A  0EFF               	movlw	255
  8457  00282C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8458  00282E  6E08               	movwf	(??___xxtofl+3)^0,c
  8459  002830  5005               	movf	??___xxtofl^0,w,c
  8460  002832  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8461  002834  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8462  002836  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8463  002838  A4D8               	btfss	status,2,c
  8464  00283A  EF21  F014         	goto	u5291
  8465  00283E  EF23  F014         	goto	u5290
  8466  002842                     u5291:
  8467  002842  EF00  F014         	goto	l4412
  8468  002846                     u5290:
  8469  002846  EF2B  F014         	goto	l4420
  8470  00284A                     l4418:
  8471  00284A  060A               	decf	___xxtofl@exp^0,f,c
  8472  00284C  90D8               	bcf	status,0,c
  8473  00284E  360B               	rlcf	___xxtofl@arg^0,f,c
  8474  002850  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8475  002852  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8476  002854  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8477  002856                     l4420:
  8478  002856  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8479  002858  EF30  F014         	goto	u5301
  8480  00285C  EF32  F014         	goto	u5300
  8481  002860                     u5301:
  8482  002860  EF3A  F014         	goto	l1041
  8483  002864                     u5300:
  8484  002864  0E02               	movlw	2
  8485  002866  600A               	cpfslt	___xxtofl@exp^0,c
  8486  002868  EF38  F014         	goto	u5311
  8487  00286C  EF3A  F014         	goto	u5310
  8488  002870                     u5311:
  8489  002870  EF25  F014         	goto	l4418
  8490  002874                     u5310:
  8491  002874                     l1041:
  8492  002874  B00A               	btfsc	___xxtofl@exp^0,0,c
  8493  002876  EF3F  F014         	goto	u5321
  8494  00287A  EF41  F014         	goto	u5320
  8495  00287E                     u5321:
  8496  00287E  EF42  F014         	goto	l4426
  8497  002882                     u5320:
  8498  002882  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8499  002884                     l4426:
  8500  002884  90D8               	bcf	status,0,c
  8501  002886  320A               	rrcf	___xxtofl@exp^0,f,c
  8502  002888  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8503  00288C  6A06               	clrf	(??___xxtofl+1)^0,c
  8504  00288E  6A07               	clrf	(??___xxtofl+2)^0,c
  8505  002890  6A08               	clrf	(??___xxtofl+3)^0,c
  8506  002892  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8507  002896  6A07               	clrf	(??___xxtofl+2)^0,c
  8508  002898  6A06               	clrf	(??___xxtofl+1)^0,c
  8509  00289A  6A05               	clrf	??___xxtofl^0,c
  8510  00289C  5005               	movf	??___xxtofl^0,w,c
  8511  00289E  120B               	iorwf	___xxtofl@arg^0,f,c
  8512  0028A0  5006               	movf	(??___xxtofl+1)^0,w,c
  8513  0028A2  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8514  0028A4  5007               	movf	(??___xxtofl+2)^0,w,c
  8515  0028A6  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8516  0028A8  5008               	movf	(??___xxtofl+3)^0,w,c
  8517  0028AA  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8518  0028AC  5009               	movf	___xxtofl@sign^0,w,c
  8519  0028AE  B4D8               	btfsc	status,2,c
  8520  0028B0  EF5C  F014         	goto	u5331
  8521  0028B4  EF5E  F014         	goto	u5330
  8522  0028B8                     u5331:
  8523  0028B8  EF66  F014         	goto	l4436
  8524  0028BC                     u5330:
  8525  0028BC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8526  0028BE  EF65  F014         	goto	u5340
  8527  0028C2  EF63  F014         	goto	u5341
  8528  0028C6                     u5341:
  8529  0028C6  EF66  F014         	goto	l4436
  8530  0028CA                     u5340:
  8531  0028CA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8532  0028CC                     l4436:
  8533  0028CC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8534  0028D0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8535  0028D4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8536  0028D8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8537  0028DC                     l1030:
  8538  0028DC  0012               	return		;funcret
  8539  0028DE                     __end_of___xxtofl:
  8540                           	opt callstack 0
  8541                           
  8542 ;; *************** function ___flmul *****************
  8543 ;; Defined at:
  8544 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;  b               4    0[COMRAM] unsigned char 
  8547 ;;  a               4    4[COMRAM] unsigned char 
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;  prod            4   19[COMRAM] struct .
  8550 ;;  grs             4   13[COMRAM] unsigned long 
  8551 ;;  temp            2   23[COMRAM] struct .
  8552 ;;  bexp            1   18[COMRAM] unsigned char 
  8553 ;;  aexp            1   17[COMRAM] unsigned char 
  8554 ;;  sign            1   12[COMRAM] unsigned char 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  4    0[COMRAM] unsigned char 
  8557 ;; Registers used:
  8558 ;;		wreg, status,2, status,0, prodl, prodh
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8564 ;;      Params:         8       0       0       0       0       0       0       0       0
  8565 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8566 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8567 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8568 ;;Total ram usage:       25 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; This function calls:
  8571 ;;		Nothing
  8572 ;; This function is called by:
  8573 ;;		_dameTemperaturaLm35
  8574 ;;		_efgtoa
  8575 ;; This function uses a non-reentrant model
  8576 ;;
  8577                           
  8578                           	psect	text40
  8579  001D54                     __ptext40:
  8580                           	opt callstack 0
  8581  001D54                     ___flmul:
  8582                           	opt callstack 26
  8583  001D54  5004               	movf	(___flmul@b+3)^0,w,c
  8584  001D56  0B80               	andlw	128
  8585  001D58  6E0D               	movwf	___flmul@sign^0,c
  8586  001D5A  5004               	movf	(___flmul@b+3)^0,w,c
  8587  001D5C  2404               	addwf	(___flmul@b+3)^0,w,c
  8588  001D5E  6E13               	movwf	___flmul@bexp^0,c
  8589  001D60  AE03               	btfss	(___flmul@b+2)^0,7,c
  8590  001D62  EFB5  F00E         	goto	u3701
  8591  001D66  EFB7  F00E         	goto	u3700
  8592  001D6A                     u3701:
  8593  001D6A  EFB8  F00E         	goto	l3380
  8594  001D6E                     u3700:
  8595  001D6E  8013               	bsf	___flmul@bexp^0,0,c
  8596  001D70                     l3380:
  8597  001D70  5013               	movf	___flmul@bexp^0,w,c
  8598  001D72  B4D8               	btfsc	status,2,c
  8599  001D74  EFBE  F00E         	goto	u3711
  8600  001D78  EFC0  F00E         	goto	u3710
  8601  001D7C                     u3711:
  8602  001D7C  EFD3  F00E         	goto	l3388
  8603  001D80                     u3710:
  8604  001D80  2813               	incf	___flmul@bexp^0,w,c
  8605  001D82  A4D8               	btfss	status,2,c
  8606  001D84  EFC6  F00E         	goto	u3721
  8607  001D88  EFC8  F00E         	goto	u3720
  8608  001D8C                     u3721:
  8609  001D8C  EFD0  F00E         	goto	l3386
  8610  001D90                     u3720:
  8611  001D90  0E00               	movlw	0
  8612  001D92  6E01               	movwf	___flmul@b^0,c
  8613  001D94  0E00               	movlw	0
  8614  001D96  6E02               	movwf	(___flmul@b+1)^0,c
  8615  001D98  0E00               	movlw	0
  8616  001D9A  6E03               	movwf	(___flmul@b+2)^0,c
  8617  001D9C  0E00               	movlw	0
  8618  001D9E  6E04               	movwf	(___flmul@b+3)^0,c
  8619  001DA0                     l3386:
  8620  001DA0  8E03               	bsf	(___flmul@b+2)^0,7,c
  8621  001DA2  EFDB  F00E         	goto	l3390
  8622  001DA6                     l3388:
  8623  001DA6  0E00               	movlw	0
  8624  001DA8  6E01               	movwf	___flmul@b^0,c
  8625  001DAA  0E00               	movlw	0
  8626  001DAC  6E02               	movwf	(___flmul@b+1)^0,c
  8627  001DAE  0E00               	movlw	0
  8628  001DB0  6E03               	movwf	(___flmul@b+2)^0,c
  8629  001DB2  0E00               	movlw	0
  8630  001DB4  6E04               	movwf	(___flmul@b+3)^0,c
  8631  001DB6                     l3390:
  8632  001DB6  5008               	movf	(___flmul@a+3)^0,w,c
  8633  001DB8  0B80               	andlw	128
  8634  001DBA  1A0D               	xorwf	___flmul@sign^0,f,c
  8635  001DBC  5008               	movf	(___flmul@a+3)^0,w,c
  8636  001DBE  2408               	addwf	(___flmul@a+3)^0,w,c
  8637  001DC0  6E12               	movwf	___flmul@aexp^0,c
  8638  001DC2  AE07               	btfss	(___flmul@a+2)^0,7,c
  8639  001DC4  EFE6  F00E         	goto	u3731
  8640  001DC8  EFE8  F00E         	goto	u3730
  8641  001DCC                     u3731:
  8642  001DCC  EFE9  F00E         	goto	l3398
  8643  001DD0                     u3730:
  8644  001DD0  8012               	bsf	___flmul@aexp^0,0,c
  8645  001DD2                     l3398:
  8646  001DD2  5012               	movf	___flmul@aexp^0,w,c
  8647  001DD4  B4D8               	btfsc	status,2,c
  8648  001DD6  EFEF  F00E         	goto	u3741
  8649  001DDA  EFF1  F00E         	goto	u3740
  8650  001DDE                     u3741:
  8651  001DDE  EF04  F00F         	goto	l3406
  8652  001DE2                     u3740:
  8653  001DE2  2812               	incf	___flmul@aexp^0,w,c
  8654  001DE4  A4D8               	btfss	status,2,c
  8655  001DE6  EFF7  F00E         	goto	u3751
  8656  001DEA  EFF9  F00E         	goto	u3750
  8657  001DEE                     u3751:
  8658  001DEE  EF01  F00F         	goto	l3404
  8659  001DF2                     u3750:
  8660  001DF2  0E00               	movlw	0
  8661  001DF4  6E05               	movwf	___flmul@a^0,c
  8662  001DF6  0E00               	movlw	0
  8663  001DF8  6E06               	movwf	(___flmul@a+1)^0,c
  8664  001DFA  0E00               	movlw	0
  8665  001DFC  6E07               	movwf	(___flmul@a+2)^0,c
  8666  001DFE  0E00               	movlw	0
  8667  001E00  6E08               	movwf	(___flmul@a+3)^0,c
  8668  001E02                     l3404:
  8669  001E02  8E07               	bsf	(___flmul@a+2)^0,7,c
  8670  001E04  EF0C  F00F         	goto	l986
  8671  001E08                     l3406:
  8672  001E08  0E00               	movlw	0
  8673  001E0A  6E05               	movwf	___flmul@a^0,c
  8674  001E0C  0E00               	movlw	0
  8675  001E0E  6E06               	movwf	(___flmul@a+1)^0,c
  8676  001E10  0E00               	movlw	0
  8677  001E12  6E07               	movwf	(___flmul@a+2)^0,c
  8678  001E14  0E00               	movlw	0
  8679  001E16  6E08               	movwf	(___flmul@a+3)^0,c
  8680  001E18                     l986:
  8681  001E18  5012               	movf	___flmul@aexp^0,w,c
  8682  001E1A  B4D8               	btfsc	status,2,c
  8683  001E1C  EF12  F00F         	goto	u3761
  8684  001E20  EF14  F00F         	goto	u3760
  8685  001E24                     u3761:
  8686  001E24  EF1C  F00F         	goto	l3410
  8687  001E28                     u3760:
  8688  001E28  5013               	movf	___flmul@bexp^0,w,c
  8689  001E2A  A4D8               	btfss	status,2,c
  8690  001E2C  EF1A  F00F         	goto	u3771
  8691  001E30  EF1C  F00F         	goto	u3770
  8692  001E34                     u3771:
  8693  001E34  EF26  F00F         	goto	l3414
  8694  001E38                     u3770:
  8695  001E38                     l3410:
  8696  001E38  0E00               	movlw	0
  8697  001E3A  6E01               	movwf	?___flmul^0,c
  8698  001E3C  0E00               	movlw	0
  8699  001E3E  6E02               	movwf	(?___flmul+1)^0,c
  8700  001E40  0E00               	movlw	0
  8701  001E42  6E03               	movwf	(?___flmul+2)^0,c
  8702  001E44  0E00               	movlw	0
  8703  001E46  6E04               	movwf	(?___flmul+3)^0,c
  8704  001E48  EFBE  F010         	goto	l990
  8705  001E4C                     l3414:
  8706  001E4C  5007               	movf	(___flmul@a+2)^0,w,c
  8707  001E4E  0201               	mulwf	___flmul@b^0,c
  8708  001E50  CFF3 F018          	movff	prodl,___flmul@temp
  8709  001E54  CFF4 F019          	movff	prodh,___flmul@temp+1
  8710  001E58  5018               	movf	___flmul@temp^0,w,c
  8711  001E5A  6E0E               	movwf	___flmul@grs^0,c
  8712  001E5C  6A0F               	clrf	(___flmul@grs+1)^0,c
  8713  001E5E  6A10               	clrf	(___flmul@grs+2)^0,c
  8714  001E60  6A11               	clrf	(___flmul@grs+3)^0,c
  8715  001E62  5019               	movf	(___flmul@temp+1)^0,w,c
  8716  001E64  6E14               	movwf	___flmul@prod^0,c
  8717  001E66  6A15               	clrf	(___flmul@prod+1)^0,c
  8718  001E68  6A16               	clrf	(___flmul@prod+2)^0,c
  8719  001E6A  6A17               	clrf	(___flmul@prod+3)^0,c
  8720  001E6C  5006               	movf	(___flmul@a+1)^0,w,c
  8721  001E6E  0202               	mulwf	(___flmul@b+1)^0,c
  8722  001E70  CFF3 F018          	movff	prodl,___flmul@temp
  8723  001E74  CFF4 F019          	movff	prodh,___flmul@temp+1
  8724  001E78  5018               	movf	___flmul@temp^0,w,c
  8725  001E7A  260E               	addwf	___flmul@grs^0,f,c
  8726  001E7C  0E00               	movlw	0
  8727  001E7E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8728  001E80  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8729  001E82  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8730  001E84  5019               	movf	(___flmul@temp+1)^0,w,c
  8731  001E86  2614               	addwf	___flmul@prod^0,f,c
  8732  001E88  0E00               	movlw	0
  8733  001E8A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8734  001E8C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8735  001E8E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8736  001E90  5005               	movf	___flmul@a^0,w,c
  8737  001E92  0203               	mulwf	(___flmul@b+2)^0,c
  8738  001E94  CFF3 F018          	movff	prodl,___flmul@temp
  8739  001E98  CFF4 F019          	movff	prodh,___flmul@temp+1
  8740  001E9C  5018               	movf	___flmul@temp^0,w,c
  8741  001E9E  260E               	addwf	___flmul@grs^0,f,c
  8742  001EA0  0E00               	movlw	0
  8743  001EA2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8744  001EA4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8745  001EA6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8746  001EA8  5019               	movf	(___flmul@temp+1)^0,w,c
  8747  001EAA  2614               	addwf	___flmul@prod^0,f,c
  8748  001EAC  0E00               	movlw	0
  8749  001EAE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8750  001EB0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8751  001EB2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8752  001EB4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8753  001EB8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8754  001EBC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8755  001EC0  6A0E               	clrf	___flmul@grs^0,c
  8756  001EC2  5005               	movf	___flmul@a^0,w,c
  8757  001EC4  0202               	mulwf	(___flmul@b+1)^0,c
  8758  001EC6  CFF3 F018          	movff	prodl,___flmul@temp
  8759  001ECA  CFF4 F019          	movff	prodh,___flmul@temp+1
  8760  001ECE  5018               	movf	___flmul@temp^0,w,c
  8761  001ED0  260E               	addwf	___flmul@grs^0,f,c
  8762  001ED2  5019               	movf	(___flmul@temp+1)^0,w,c
  8763  001ED4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8764  001ED6  0E00               	movlw	0
  8765  001ED8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8766  001EDA  0E00               	movlw	0
  8767  001EDC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8768  001EDE  5006               	movf	(___flmul@a+1)^0,w,c
  8769  001EE0  0201               	mulwf	___flmul@b^0,c
  8770  001EE2  CFF3 F018          	movff	prodl,___flmul@temp
  8771  001EE6  CFF4 F019          	movff	prodh,___flmul@temp+1
  8772  001EEA  5018               	movf	___flmul@temp^0,w,c
  8773  001EEC  260E               	addwf	___flmul@grs^0,f,c
  8774  001EEE  5019               	movf	(___flmul@temp+1)^0,w,c
  8775  001EF0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8776  001EF2  0E00               	movlw	0
  8777  001EF4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8778  001EF6  0E00               	movlw	0
  8779  001EF8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8780  001EFA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8781  001EFE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8782  001F02  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8783  001F06  6A0E               	clrf	___flmul@grs^0,c
  8784  001F08  5005               	movf	___flmul@a^0,w,c
  8785  001F0A  0201               	mulwf	___flmul@b^0,c
  8786  001F0C  CFF3 F018          	movff	prodl,___flmul@temp
  8787  001F10  CFF4 F019          	movff	prodh,___flmul@temp+1
  8788  001F14  5018               	movf	___flmul@temp^0,w,c
  8789  001F16  260E               	addwf	___flmul@grs^0,f,c
  8790  001F18  5019               	movf	(___flmul@temp+1)^0,w,c
  8791  001F1A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8792  001F1C  0E00               	movlw	0
  8793  001F1E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8794  001F20  0E00               	movlw	0
  8795  001F22  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8796  001F24  5007               	movf	(___flmul@a+2)^0,w,c
  8797  001F26  0202               	mulwf	(___flmul@b+1)^0,c
  8798  001F28  CFF3 F018          	movff	prodl,___flmul@temp
  8799  001F2C  CFF4 F019          	movff	prodh,___flmul@temp+1
  8800  001F30  5018               	movf	___flmul@temp^0,w,c
  8801  001F32  2614               	addwf	___flmul@prod^0,f,c
  8802  001F34  5019               	movf	(___flmul@temp+1)^0,w,c
  8803  001F36  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8804  001F38  0E00               	movlw	0
  8805  001F3A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8806  001F3C  0E00               	movlw	0
  8807  001F3E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8808  001F40  5006               	movf	(___flmul@a+1)^0,w,c
  8809  001F42  0203               	mulwf	(___flmul@b+2)^0,c
  8810  001F44  CFF3 F018          	movff	prodl,___flmul@temp
  8811  001F48  CFF4 F019          	movff	prodh,___flmul@temp+1
  8812  001F4C  5018               	movf	___flmul@temp^0,w,c
  8813  001F4E  2614               	addwf	___flmul@prod^0,f,c
  8814  001F50  5019               	movf	(___flmul@temp+1)^0,w,c
  8815  001F52  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8816  001F54  0E00               	movlw	0
  8817  001F56  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8818  001F58  0E00               	movlw	0
  8819  001F5A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8820  001F5C  5007               	movf	(___flmul@a+2)^0,w,c
  8821  001F5E  0203               	mulwf	(___flmul@b+2)^0,c
  8822  001F60  CFF3 F018          	movff	prodl,___flmul@temp
  8823  001F64  CFF4 F019          	movff	prodh,___flmul@temp+1
  8824  001F68  5018               	movf	___flmul@temp^0,w,c
  8825  001F6A  6E09               	movwf	??___flmul^0,c
  8826  001F6C  5019               	movf	(___flmul@temp+1)^0,w,c
  8827  001F6E  6E0A               	movwf	(??___flmul+1)^0,c
  8828  001F70  6A0B               	clrf	(??___flmul+2)^0,c
  8829  001F72  6A0C               	clrf	(??___flmul+3)^0,c
  8830  001F74  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  8831  001F78  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  8832  001F7C  C009  F00A         	movff	??___flmul,??___flmul+1
  8833  001F80  6A09               	clrf	??___flmul^0,c
  8834  001F82  5009               	movf	??___flmul^0,w,c
  8835  001F84  2614               	addwf	___flmul@prod^0,f,c
  8836  001F86  500A               	movf	(??___flmul+1)^0,w,c
  8837  001F88  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8838  001F8A  500B               	movf	(??___flmul+2)^0,w,c
  8839  001F8C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8840  001F8E  500C               	movf	(??___flmul+3)^0,w,c
  8841  001F90  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8842  001F92  C00E  F009         	movff	___flmul@grs,??___flmul
  8843  001F96  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  8844  001F9A  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  8845  001F9E  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  8846  001FA2  0E19               	movlw	25
  8847  001FA4  EFD9  F00F         	goto	u3780
  8848  001FA8                     u3785:
  8849  001FA8  90D8               	bcf	status,0,c
  8850  001FAA  320C               	rrcf	(??___flmul+3)^0,f,c
  8851  001FAC  320B               	rrcf	(??___flmul+2)^0,f,c
  8852  001FAE  320A               	rrcf	(??___flmul+1)^0,f,c
  8853  001FB0  3209               	rrcf	??___flmul^0,f,c
  8854  001FB2                     u3780:
  8855  001FB2  2EE8               	decfsz	wreg,f,c
  8856  001FB4  EFD4  F00F         	goto	u3785
  8857  001FB8  5009               	movf	??___flmul^0,w,c
  8858  001FBA  2614               	addwf	___flmul@prod^0,f,c
  8859  001FBC  500A               	movf	(??___flmul+1)^0,w,c
  8860  001FBE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8861  001FC0  500B               	movf	(??___flmul+2)^0,w,c
  8862  001FC2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8863  001FC4  500C               	movf	(??___flmul+3)^0,w,c
  8864  001FC6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8865  001FC8  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8866  001FCC  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8867  001FD0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8868  001FD4  6A0E               	clrf	___flmul@grs^0,c
  8869  001FD6  5012               	movf	___flmul@aexp^0,w,c
  8870  001FD8  C013  F009         	movff	___flmul@bexp,??___flmul
  8871  001FDC  6A0A               	clrf	(??___flmul+1)^0,c
  8872  001FDE  2609               	addwf	??___flmul^0,f,c
  8873  001FE0  0E00               	movlw	0
  8874  001FE2  220A               	addwfc	(??___flmul+1)^0,f,c
  8875  001FE4  0E82               	movlw	130
  8876  001FE6  2409               	addwf	??___flmul^0,w,c
  8877  001FE8  6E18               	movwf	___flmul@temp^0,c
  8878  001FEA  0EFF               	movlw	255
  8879  001FEC  200A               	addwfc	(??___flmul+1)^0,w,c
  8880  001FEE  6E19               	movwf	(___flmul@temp+1)^0,c
  8881  001FF0  EF0F  F010         	goto	l3462
  8882  001FF4                     l3456:
  8883  001FF4  90D8               	bcf	status,0,c
  8884  001FF6  3614               	rlcf	___flmul@prod^0,f,c
  8885  001FF8  3615               	rlcf	(___flmul@prod+1)^0,f,c
  8886  001FFA  3616               	rlcf	(___flmul@prod+2)^0,f,c
  8887  001FFC  3617               	rlcf	(___flmul@prod+3)^0,f,c
  8888  001FFE  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8889  002000  EF04  F010         	goto	u3791
  8890  002004  EF06  F010         	goto	u3790
  8891  002008                     u3791:
  8892  002008  EF07  F010         	goto	l993
  8893  00200C                     u3790:
  8894  00200C  8014               	bsf	___flmul@prod^0,0,c
  8895  00200E                     l993:
  8896  00200E  90D8               	bcf	status,0,c
  8897  002010  360E               	rlcf	___flmul@grs^0,f,c
  8898  002012  360F               	rlcf	(___flmul@grs+1)^0,f,c
  8899  002014  3610               	rlcf	(___flmul@grs+2)^0,f,c
  8900  002016  3611               	rlcf	(___flmul@grs+3)^0,f,c
  8901  002018  0618               	decf	___flmul@temp^0,f,c
  8902  00201A  A0D8               	btfss	status,0,c
  8903  00201C  0619               	decf	(___flmul@temp+1)^0,f,c
  8904  00201E                     l3462:
  8905  00201E  AE16               	btfss	(___flmul@prod+2)^0,7,c
  8906  002020  EF14  F010         	goto	u3801
  8907  002024  EF16  F010         	goto	u3800
  8908  002028                     u3801:
  8909  002028  EFFA  F00F         	goto	l3456
  8910  00202C                     u3800:
  8911  00202C  0E00               	movlw	0
  8912  00202E  6E12               	movwf	___flmul@aexp^0,c
  8913  002030  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8914  002032  EF1D  F010         	goto	u3811
  8915  002036  EF1F  F010         	goto	u3810
  8916  00203A                     u3811:
  8917  00203A  EF43  F010         	goto	l995
  8918  00203E                     u3810:
  8919  00203E  0EFF               	movlw	255
  8920  002040  140E               	andwf	___flmul@grs^0,w,c
  8921  002042  6E09               	movwf	??___flmul^0,c
  8922  002044  0EFF               	movlw	255
  8923  002046  140F               	andwf	(___flmul@grs+1)^0,w,c
  8924  002048  6E0A               	movwf	(??___flmul+1)^0,c
  8925  00204A  0EFF               	movlw	255
  8926  00204C  1410               	andwf	(___flmul@grs+2)^0,w,c
  8927  00204E  6E0B               	movwf	(??___flmul+2)^0,c
  8928  002050  0E7F               	movlw	127
  8929  002052  1411               	andwf	(___flmul@grs+3)^0,w,c
  8930  002054  6E0C               	movwf	(??___flmul+3)^0,c
  8931  002056  5009               	movf	??___flmul^0,w,c
  8932  002058  100A               	iorwf	(??___flmul+1)^0,w,c
  8933  00205A  100B               	iorwf	(??___flmul+2)^0,w,c
  8934  00205C  100C               	iorwf	(??___flmul+3)^0,w,c
  8935  00205E  B4D8               	btfsc	status,2,c
  8936  002060  EF34  F010         	goto	u3821
  8937  002064  EF36  F010         	goto	u3820
  8938  002068                     u3821:
  8939  002068  EF3A  F010         	goto	l996
  8940  00206C                     u3820:
  8941  00206C                     l3470:
  8942  00206C  0E01               	movlw	1
  8943  00206E  6E12               	movwf	___flmul@aexp^0,c
  8944  002070  EF43  F010         	goto	l995
  8945  002074                     l996:
  8946  002074  A014               	btfss	___flmul@prod^0,0,c
  8947  002076  EF3F  F010         	goto	u3831
  8948  00207A  EF41  F010         	goto	u3830
  8949  00207E                     u3831:
  8950  00207E  EF43  F010         	goto	l995
  8951  002082                     u3830:
  8952  002082  EF36  F010         	goto	l3470
  8953  002086                     l995:
  8954  002086  5012               	movf	___flmul@aexp^0,w,c
  8955  002088  B4D8               	btfsc	status,2,c
  8956  00208A  EF49  F010         	goto	u3841
  8957  00208E  EF4B  F010         	goto	u3840
  8958  002092                     u3841:
  8959  002092  EF6F  F010         	goto	l3482
  8960  002096                     u3840:
  8961  002096  0E01               	movlw	1
  8962  002098  2614               	addwf	___flmul@prod^0,f,c
  8963  00209A  0E00               	movlw	0
  8964  00209C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8965  00209E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8966  0020A0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8967  0020A2  A017               	btfss	(___flmul@prod+3)^0,0,c
  8968  0020A4  EF56  F010         	goto	u3851
  8969  0020A8  EF58  F010         	goto	u3850
  8970  0020AC                     u3851:
  8971  0020AC  EF6F  F010         	goto	l3482
  8972  0020B0                     u3850:
  8973  0020B0  C014  F009         	movff	___flmul@prod,??___flmul
  8974  0020B4  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  8975  0020B8  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  8976  0020BC  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  8977  0020C0  340C               	rlcf	(??___flmul+3)^0,w,c
  8978  0020C2  320C               	rrcf	(??___flmul+3)^0,f,c
  8979  0020C4  320B               	rrcf	(??___flmul+2)^0,f,c
  8980  0020C6  320A               	rrcf	(??___flmul+1)^0,f,c
  8981  0020C8  3209               	rrcf	??___flmul^0,f,c
  8982  0020CA  C009  F014         	movff	??___flmul,___flmul@prod
  8983  0020CE  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  8984  0020D2  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  8985  0020D6  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  8986  0020DA  4A18               	infsnz	___flmul@temp^0,f,c
  8987  0020DC  2A19               	incf	(___flmul@temp+1)^0,f,c
  8988  0020DE                     l3482:
  8989  0020DE  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8990  0020E0  EF7A  F010         	goto	u3861
  8991  0020E4  5019               	movf	(___flmul@temp+1)^0,w,c
  8992  0020E6  E108               	bnz	u3860
  8993  0020E8  2818               	incf	___flmul@temp^0,w,c
  8994  0020EA  A0D8               	btfss	status,0,c
  8995  0020EC  EF7A  F010         	goto	u3861
  8996  0020F0  EF7C  F010         	goto	u3860
  8997  0020F4                     u3861:
  8998  0020F4  EF86  F010         	goto	l3486
  8999  0020F8                     u3860:
  9000  0020F8  0E00               	movlw	0
  9001  0020FA  6E14               	movwf	___flmul@prod^0,c
  9002  0020FC  0E00               	movlw	0
  9003  0020FE  6E15               	movwf	(___flmul@prod+1)^0,c
  9004  002100  0E80               	movlw	128
  9005  002102  6E16               	movwf	(___flmul@prod+2)^0,c
  9006  002104  0E7F               	movlw	127
  9007  002106  6E17               	movwf	(___flmul@prod+3)^0,c
  9008  002108  EFB4  F010         	goto	l3498
  9009  00210C                     l3486:
  9010  00210C  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  9011  00210E  EF93  F010         	goto	u3870
  9012  002112  5019               	movf	(___flmul@temp+1)^0,w,c
  9013  002114  E106               	bnz	u3871
  9014  002116  0418               	decf	___flmul@temp^0,w,c
  9015  002118  B0D8               	btfsc	status,0,c
  9016  00211A  EF91  F010         	goto	u3871
  9017  00211E  EF93  F010         	goto	u3870
  9018  002122                     u3871:
  9019  002122  EF9F  F010         	goto	l1003
  9020  002126                     u3870:
  9021  002126  0E00               	movlw	0
  9022  002128  6E14               	movwf	___flmul@prod^0,c
  9023  00212A  0E00               	movlw	0
  9024  00212C  6E15               	movwf	(___flmul@prod+1)^0,c
  9025  00212E  0E00               	movlw	0
  9026  002130  6E16               	movwf	(___flmul@prod+2)^0,c
  9027  002132  0E00               	movlw	0
  9028  002134  6E17               	movwf	(___flmul@prod+3)^0,c
  9029  002136  0E00               	movlw	0
  9030  002138  6E0D               	movwf	___flmul@sign^0,c
  9031  00213A  EFB4  F010         	goto	l3498
  9032  00213E                     l1003:
  9033  00213E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  9034  002142  0EFF               	movlw	255
  9035  002144  1614               	andwf	___flmul@prod^0,f,c
  9036  002146  0EFF               	movlw	255
  9037  002148  1615               	andwf	(___flmul@prod+1)^0,f,c
  9038  00214A  0E7F               	movlw	127
  9039  00214C  1616               	andwf	(___flmul@prod+2)^0,f,c
  9040  00214E  0E00               	movlw	0
  9041  002150  1617               	andwf	(___flmul@prod+3)^0,f,c
  9042  002152  A013               	btfss	___flmul@bexp^0,0,c
  9043  002154  EFAE  F010         	goto	u3881
  9044  002158  EFB0  F010         	goto	u3880
  9045  00215C                     u3881:
  9046  00215C  EFB1  F010         	goto	l3496
  9047  002160                     u3880:
  9048  002160  8E16               	bsf	(___flmul@prod+2)^0,7,c
  9049  002162                     l3496:
  9050  002162  90D8               	bcf	status,0,c
  9051  002164  3013               	rrcf	___flmul@bexp^0,w,c
  9052  002166  6E17               	movwf	(___flmul@prod+3)^0,c
  9053  002168                     l3498:
  9054  002168  500D               	movf	___flmul@sign^0,w,c
  9055  00216A  1217               	iorwf	(___flmul@prod+3)^0,f,c
  9056  00216C  C014  F001         	movff	___flmul@prod,?___flmul
  9057  002170  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  9058  002174  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  9059  002178  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  9060  00217C                     l990:
  9061  00217C  0012               	return		;funcret
  9062  00217E                     __end_of___flmul:
  9063                           	opt callstack 0
  9064                           
  9065 ;; *************** function _configurarAdc *****************
  9066 ;; Defined at:
  9067 ;;		line 17 in file "main.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9081 ;;      Params:         0       0       0       0       0       0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9084 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9085 ;;Total ram usage:        0 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_main
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text41
  9095  003E04                     __ptext41:
  9096                           	opt callstack 0
  9097  003E04                     _configurarAdc:
  9098                           	opt callstack 30
  9099  003E04                     
  9100                           ;main.c: 18:     ADCON0bits.ADON = 1;
  9101  003E04  80C2               	bsf	194,0,c	;volatile
  9102  003E06                     
  9103                           ;main.c: 19:     ADCON1 = 0b00001110;
  9104  003E06  0E0E               	movlw	14
  9105  003E08  6EC1               	movwf	193,c	;volatile
  9106                           
  9107                           ;main.c: 20:     ADCON2 = 0b10100101;
  9108  003E0A  0EA5               	movlw	165
  9109  003E0C  6EC0               	movwf	192,c	;volatile
  9110                           
  9111                           ;main.c: 21:     TRISA = 0b000001;
  9112  003E0E  0E01               	movlw	1
  9113  003E10  6E92               	movwf	146,c	;volatile
  9114  003E12  0012               	return		;funcret
  9115  003E14                     __end_of_configurarAdc:
  9116                           	opt callstack 0
  9117                           
  9118 ;; *************** function _UART_init *****************
  9119 ;; Defined at:
  9120 ;;		line 6 in file "./UART.h"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;  BAUD            4   14[COMRAM] long 
  9123 ;; Auto vars:     Size  Location     Type
  9124 ;;  frecuenciaCr    4    0        long 
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  1    wreg      void 
  9127 ;; Registers used:
  9128 ;;		wreg, status,2, status,0, cstack
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9134 ;;      Params:         4       0       0       0       0       0       0       0       0
  9135 ;;      Locals:         8       0       0       0       0       0       0       0       0
  9136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9137 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9138 ;;Total ram usage:       12 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:    1
  9141 ;; This function calls:
  9142 ;;		___aldiv
  9143 ;; This function is called by:
  9144 ;;		_main
  9145 ;; This function uses a non-reentrant model
  9146 ;;
  9147                           
  9148                           	psect	text42
  9149  003806                     __ptext42:
  9150                           	opt callstack 0
  9151  003806                     _UART_init:
  9152                           	opt callstack 29
  9153  003806                     
  9154                           ;./UART.h: 8:     TRISCbits.TRISC6 = 0;
  9155  003806  9C94               	bcf	148,6,c	;volatile
  9156  003808                     
  9157                           ;./UART.h: 9:     TRISCbits.TRISC7 = 1;
  9158  003808  8E94               	bsf	148,7,c	;volatile
  9159  00380A                     
  9160                           ;./UART.h: 12:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  9161  00380A  0E10               	movlw	16
  9162  00380C  6E05               	movwf	___aldiv@divisor^0,c
  9163  00380E  0E00               	movlw	0
  9164  003810  6E06               	movwf	(___aldiv@divisor+1)^0,c
  9165  003812  0E00               	movlw	0
  9166  003814  6E07               	movwf	(___aldiv@divisor+2)^0,c
  9167  003816  0E00               	movlw	0
  9168  003818  6E08               	movwf	(___aldiv@divisor+3)^0,c
  9169  00381A  0E00               	movlw	0
  9170  00381C  6E01               	movwf	___aldiv@dividend^0,c
  9171  00381E  0E09               	movlw	9
  9172  003820  6E02               	movwf	(___aldiv@dividend+1)^0,c
  9173  003822  0E3D               	movlw	61
  9174  003824  6E03               	movwf	(___aldiv@dividend+2)^0,c
  9175  003826  0E00               	movlw	0
  9176  003828  6E04               	movwf	(___aldiv@dividend+3)^0,c
  9177  00382A  ECC2  F015         	call	___aldiv	;wreg free
  9178  00382E  C001  F017         	movff	?___aldiv,_UART_init$1621
  9179  003832  C002  F018         	movff	?___aldiv+1,_UART_init$1621+1
  9180  003836  C003  F019         	movff	?___aldiv+2,_UART_init$1621+2
  9181  00383A  C004  F01A         	movff	?___aldiv+3,_UART_init$1621+3
  9182  00383E                     
  9183                           ;./UART.h: 12:     SPBRG = (frecuenciaCristal / 16 / BAUD) - 1;
  9184  00383E  C017  F001         	movff	_UART_init$1621,___aldiv@dividend
  9185  003842  C018  F002         	movff	_UART_init$1621+1,___aldiv@dividend+1
  9186  003846  C019  F003         	movff	_UART_init$1621+2,___aldiv@dividend+2
  9187  00384A  C01A  F004         	movff	_UART_init$1621+3,___aldiv@dividend+3
  9188  00384E  C00F  F005         	movff	UART_init@BAUD,___aldiv@divisor
  9189  003852  C010  F006         	movff	UART_init@BAUD+1,___aldiv@divisor+1
  9190  003856  C011  F007         	movff	UART_init@BAUD+2,___aldiv@divisor+2
  9191  00385A  C012  F008         	movff	UART_init@BAUD+3,___aldiv@divisor+3
  9192  00385E  ECC2  F015         	call	___aldiv	;wreg free
  9193  003862  0401               	decf	?___aldiv^0,w,c
  9194  003864  6EAF               	movwf	175,c	;volatile
  9195  003866                     
  9196                           ;./UART.h: 15:     TXSTAbits.BRGH = 1;
  9197  003866  84AC               	bsf	172,2,c	;volatile
  9198  003868                     
  9199                           ;./UART.h: 16:     TXSTAbits.SYNC = 0;
  9200  003868  98AC               	bcf	172,4,c	;volatile
  9201  00386A                     
  9202                           ;./UART.h: 17:     RCSTAbits.SPEN = 1;
  9203  00386A  8EAB               	bsf	171,7,c	;volatile
  9204  00386C                     
  9205                           ;./UART.h: 20:     TXSTAbits.TX9 = 0;
  9206  00386C  9CAC               	bcf	172,6,c	;volatile
  9207  00386E                     
  9208                           ;./UART.h: 21:     TXSTAbits.TXEN = 1;
  9209  00386E  8AAC               	bsf	172,5,c	;volatile
  9210  003870                     
  9211                           ;./UART.h: 24:     RCSTAbits.RC9 = 0;
  9212  003870  9CAB               	bcf	171,6,c	;volatile
  9213  003872                     
  9214                           ;./UART.h: 25:     RCSTAbits.CREN = 1;
  9215  003872  88AB               	bsf	171,4,c	;volatile
  9216  003874  0012               	return		;funcret
  9217  003876                     __end_of_UART_init:
  9218                           	opt callstack 0
  9219                           
  9220 ;; *************** function ___aldiv *****************
  9221 ;; Defined at:
  9222 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;  dividend        4    0[COMRAM] long 
  9225 ;;  divisor         4    4[COMRAM] long 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;  quotient        4   10[COMRAM] long 
  9228 ;;  sign            1    9[COMRAM] unsigned char 
  9229 ;;  counter         1    8[COMRAM] unsigned char 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  4    0[COMRAM] long 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, status,0
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9239 ;;      Params:         8       0       0       0       0       0       0       0       0
  9240 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9242 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9243 ;;Total ram usage:       14 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; This function calls:
  9246 ;;		Nothing
  9247 ;; This function is called by:
  9248 ;;		_UART_init
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text43
  9253  002B84                     __ptext43:
  9254                           	opt callstack 0
  9255  002B84                     ___aldiv:
  9256                           	opt callstack 29
  9257  002B84  0E00               	movlw	0
  9258  002B86  6E0A               	movwf	___aldiv@sign^0,c
  9259  002B88  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  9260  002B8A  EFCB  F015         	goto	u5190
  9261  002B8E  EFC9  F015         	goto	u5191
  9262  002B92                     u5191:
  9263  002B92  EFD5  F015         	goto	l4358
  9264  002B96                     u5190:
  9265  002B96  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  9266  002B98  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  9267  002B9A  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  9268  002B9C  6C05               	negf	___aldiv@divisor^0,c
  9269  002B9E  0E00               	movlw	0
  9270  002BA0  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  9271  002BA2  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  9272  002BA4  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  9273  002BA6  0E01               	movlw	1
  9274  002BA8  6E0A               	movwf	___aldiv@sign^0,c
  9275  002BAA                     l4358:
  9276  002BAA  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  9277  002BAC  EFDC  F015         	goto	u5200
  9278  002BB0  EFDA  F015         	goto	u5201
  9279  002BB4                     u5201:
  9280  002BB4  EFE6  F015         	goto	l4364
  9281  002BB8                     u5200:
  9282  002BB8  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  9283  002BBA  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  9284  002BBC  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  9285  002BBE  6C01               	negf	___aldiv@dividend^0,c
  9286  002BC0  0E00               	movlw	0
  9287  002BC2  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  9288  002BC4  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  9289  002BC6  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  9290  002BC8  0E01               	movlw	1
  9291  002BCA  1A0A               	xorwf	___aldiv@sign^0,f,c
  9292  002BCC                     l4364:
  9293  002BCC  0E00               	movlw	0
  9294  002BCE  6E0B               	movwf	___aldiv@quotient^0,c
  9295  002BD0  0E00               	movlw	0
  9296  002BD2  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  9297  002BD4  0E00               	movlw	0
  9298  002BD6  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  9299  002BD8  0E00               	movlw	0
  9300  002BDA  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  9301  002BDC  5005               	movf	___aldiv@divisor^0,w,c
  9302  002BDE  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  9303  002BE0  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  9304  002BE2  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  9305  002BE4  B4D8               	btfsc	status,2,c
  9306  002BE6  EFF7  F015         	goto	u5211
  9307  002BEA  EFF9  F015         	goto	u5210
  9308  002BEE                     u5211:
  9309  002BEE  EF2F  F016         	goto	l4386
  9310  002BF2                     u5210:
  9311  002BF2  0E01               	movlw	1
  9312  002BF4  6E09               	movwf	___aldiv@counter^0,c
  9313  002BF6  EF03  F016         	goto	l4372
  9314  002BFA                     l4370:
  9315  002BFA  90D8               	bcf	status,0,c
  9316  002BFC  3605               	rlcf	___aldiv@divisor^0,f,c
  9317  002BFE  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  9318  002C00  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  9319  002C02  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  9320  002C04  2A09               	incf	___aldiv@counter^0,f,c
  9321  002C06                     l4372:
  9322  002C06  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  9323  002C08  EF08  F016         	goto	u5221
  9324  002C0C  EF0A  F016         	goto	u5220
  9325  002C10                     u5221:
  9326  002C10  EFFD  F015         	goto	l4370
  9327  002C14                     u5220:
  9328  002C14                     l4374:
  9329  002C14  90D8               	bcf	status,0,c
  9330  002C16  360B               	rlcf	___aldiv@quotient^0,f,c
  9331  002C18  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  9332  002C1A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  9333  002C1C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  9334  002C1E  5005               	movf	___aldiv@divisor^0,w,c
  9335  002C20  5C01               	subwf	___aldiv@dividend^0,w,c
  9336  002C22  5006               	movf	(___aldiv@divisor+1)^0,w,c
  9337  002C24  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  9338  002C26  5007               	movf	(___aldiv@divisor+2)^0,w,c
  9339  002C28  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  9340  002C2A  5008               	movf	(___aldiv@divisor+3)^0,w,c
  9341  002C2C  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  9342  002C2E  A0D8               	btfss	status,0,c
  9343  002C30  EF1C  F016         	goto	u5231
  9344  002C34  EF1E  F016         	goto	u5230
  9345  002C38                     u5231:
  9346  002C38  EF27  F016         	goto	l4382
  9347  002C3C                     u5230:
  9348  002C3C  5005               	movf	___aldiv@divisor^0,w,c
  9349  002C3E  5E01               	subwf	___aldiv@dividend^0,f,c
  9350  002C40  5006               	movf	(___aldiv@divisor+1)^0,w,c
  9351  002C42  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  9352  002C44  5007               	movf	(___aldiv@divisor+2)^0,w,c
  9353  002C46  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  9354  002C48  5008               	movf	(___aldiv@divisor+3)^0,w,c
  9355  002C4A  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  9356  002C4C  800B               	bsf	___aldiv@quotient^0,0,c
  9357  002C4E                     l4382:
  9358  002C4E  90D8               	bcf	status,0,c
  9359  002C50  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  9360  002C52  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  9361  002C54  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  9362  002C56  3205               	rrcf	___aldiv@divisor^0,f,c
  9363  002C58  2E09               	decfsz	___aldiv@counter^0,f,c
  9364  002C5A  EF0A  F016         	goto	l4374
  9365  002C5E                     l4386:
  9366  002C5E  500A               	movf	___aldiv@sign^0,w,c
  9367  002C60  B4D8               	btfsc	status,2,c
  9368  002C62  EF35  F016         	goto	u5241
  9369  002C66  EF37  F016         	goto	u5240
  9370  002C6A                     u5241:
  9371  002C6A  EF3F  F016         	goto	l4390
  9372  002C6E                     u5240:
  9373  002C6E  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  9374  002C70  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  9375  002C72  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  9376  002C74  6C0B               	negf	___aldiv@quotient^0,c
  9377  002C76  0E00               	movlw	0
  9378  002C78  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  9379  002C7A  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  9380  002C7C  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  9381  002C7E                     l4390:
  9382  002C7E  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  9383  002C82  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  9384  002C86  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  9385  002C8A  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  9386  002C8E  0012               	return		;funcret
  9387  002C90                     __end_of___aldiv:
  9388                           	opt callstack 0
  9389                           
  9390 ;; *************** function _SPI_Init *****************
  9391 ;; Defined at:
  9392 ;;		line 4 in file "./SPI.h"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;		None
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;		None
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1    wreg      void 
  9399 ;; Registers used:
  9400 ;;		wreg, status,2
  9401 ;; Tracked objects:
  9402 ;;		On entry : 0/0
  9403 ;;		On exit  : 0/0
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9406 ;;      Params:         0       0       0       0       0       0       0       0       0
  9407 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9409 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9410 ;;Total ram usage:        0 bytes
  9411 ;; Hardware stack levels used:    1
  9412 ;; This function calls:
  9413 ;;		Nothing
  9414 ;; This function is called by:
  9415 ;;		_main
  9416 ;; This function uses a non-reentrant model
  9417 ;;
  9418                           
  9419                           	psect	text44
  9420  003DDC                     __ptext44:
  9421                           	opt callstack 0
  9422  003DDC                     _SPI_Init:
  9423                           	opt callstack 30
  9424  003DDC                     
  9425                           ;./SPI.h: 6:     TRISBbits.RB0 = 1;
  9426  003DDC  8093               	bsf	147,0,c	;volatile
  9427                           
  9428                           ;./SPI.h: 7:     TRISBbits.RB1 = 0;
  9429  003DDE  9293               	bcf	147,1,c	;volatile
  9430                           
  9431                           ;./SPI.h: 8:     TRISCbits.RC7 = 0;
  9432  003DE0  9E94               	bcf	148,7,c	;volatile
  9433                           
  9434                           ;./SPI.h: 9:     TRISAbits.RA5 = 0;
  9435  003DE2  9A92               	bcf	146,5,c	;volatile
  9436  003DE4                     
  9437                           ;./SPI.h: 11:     SSPSTAT = 0x40;
  9438  003DE4  0E40               	movlw	64
  9439  003DE6  6EC7               	movwf	199,c	;volatile
  9440                           
  9441                           ;./SPI.h: 12:     SSPCON1 = 0x20;
  9442  003DE8  0E20               	movlw	32
  9443  003DEA  6EC6               	movwf	198,c	;volatile
  9444  003DEC                     
  9445                           ;./SPI.h: 13:     CS = 1;
  9446  003DEC  8484               	bsf	3972,2,c	;volatile
  9447  003DEE                     
  9448                           ;./SPI.h: 14:     PIR1bits.SSPIF = 0;
  9449  003DEE  969E               	bcf	158,3,c	;volatile
  9450  003DF0  0012               	return		;funcret
  9451  003DF2                     __end_of_SPI_Init:
  9452                           	opt callstack 0
  9453                           
  9454 ;; *************** function _Lcd_Write_String *****************
  9455 ;; Defined at:
  9456 ;;		line 101 in file "./lcd.h"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;  a               2    4[COMRAM] PTR unsigned char 
  9459 ;;		 -> main@buffer(20), 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;  i               2    6[COMRAM] int 
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  1    wreg      void 
  9464 ;; Registers used:
  9465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9471 ;;      Params:         2       0       0       0       0       0       0       0       0
  9472 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9474 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9475 ;;Total ram usage:        4 bytes
  9476 ;; Hardware stack levels used:    1
  9477 ;; Hardware stack levels required when called:    2
  9478 ;; This function calls:
  9479 ;;		_Lcd_Write_Char
  9480 ;; This function is called by:
  9481 ;;		_main
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           	psect	text45
  9486  003B84                     __ptext45:
  9487                           	opt callstack 0
  9488  003B84                     _Lcd_Write_String:
  9489                           	opt callstack 28
  9490  003B84                     
  9491                           ;./lcd.h: 101: void Lcd_Write_String(char *a);./lcd.h: 102: {;./lcd.h: 103:  int i;;./lc
      +                          d.h: 104:  for(i=0;a[i]!='\0';i++)
  9492  003B84  0E00               	movlw	0
  9493  003B86  6E08               	movwf	(Lcd_Write_String@i+1)^0,c
  9494  003B88  0E00               	movlw	0
  9495  003B8A  6E07               	movwf	Lcd_Write_String@i^0,c
  9496  003B8C  EFD3  F01D         	goto	l4516
  9497  003B90                     l4512:
  9498                           
  9499                           ;./lcd.h: 105:     Lcd_Write_Char(a[i]);
  9500  003B90  5007               	movf	Lcd_Write_String@i^0,w,c
  9501  003B92  2405               	addwf	Lcd_Write_String@a^0,w,c
  9502  003B94  6ED9               	movwf	fsr2l,c
  9503  003B96  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  9504  003B98  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  9505  003B9A  6EDA               	movwf	fsr2h,c
  9506  003B9C  50DF               	movf	indf2,w,c
  9507  003B9E  EC52  F01E         	call	_Lcd_Write_Char
  9508  003BA2  4A07               	infsnz	Lcd_Write_String@i^0,f,c
  9509  003BA4  2A08               	incf	(Lcd_Write_String@i+1)^0,f,c
  9510  003BA6                     l4516:
  9511  003BA6  5007               	movf	Lcd_Write_String@i^0,w,c
  9512  003BA8  2405               	addwf	Lcd_Write_String@a^0,w,c
  9513  003BAA  6ED9               	movwf	fsr2l,c
  9514  003BAC  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  9515  003BAE  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  9516  003BB0  6EDA               	movwf	fsr2h,c
  9517  003BB2  50DF               	movf	indf2,w,c
  9518  003BB4  A4D8               	btfss	status,2,c
  9519  003BB6  EFDF  F01D         	goto	u5371
  9520  003BBA  EFE1  F01D         	goto	u5370
  9521  003BBE                     u5371:
  9522  003BBE  EFC8  F01D         	goto	l4512
  9523  003BC2                     u5370:
  9524  003BC2  0012               	return		;funcret
  9525  003BC4                     __end_of_Lcd_Write_String:
  9526                           	opt callstack 0
  9527                           
  9528 ;; *************** function _Lcd_Write_Char *****************
  9529 ;; Defined at:
  9530 ;;		line 85 in file "./lcd.h"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  a               1    wreg     unsigned char 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  a               1    3[COMRAM] unsigned char 
  9535 ;;  y               1    2[COMRAM] unsigned char 
  9536 ;;  temp            1    1[COMRAM] unsigned char 
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  1    wreg      void 
  9539 ;; Registers used:
  9540 ;;		wreg, status,2, status,0, cstack
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9546 ;;      Params:         0       0       0       0       0       0       0       0       0
  9547 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9549 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9550 ;;Total ram usage:        3 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:    1
  9553 ;; This function calls:
  9554 ;;		_Lcd_Port
  9555 ;; This function is called by:
  9556 ;;		_Lcd_Write_String
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           	psect	text46
  9561  003CA4                     __ptext46:
  9562                           	opt callstack 0
  9563  003CA4                     _Lcd_Write_Char:
  9564                           	opt callstack 28
  9565                           
  9566                           ;incstack = 0
  9567                           ;Lcd_Write_Char@a stored from wreg
  9568  003CA4  6E04               	movwf	Lcd_Write_Char@a^0,c
  9569  003CA6                     
  9570                           ;./lcd.h: 85: void Lcd_Write_Char(char a);./lcd.h: 86: {;./lcd.h: 87:    char temp,y;;./
      +                          lcd.h: 88:    temp = a&0x0F;
  9571  003CA6  5004               	movf	Lcd_Write_Char@a^0,w,c
  9572  003CA8  0B0F               	andlw	15
  9573  003CAA  6E02               	movwf	Lcd_Write_Char@temp^0,c
  9574                           
  9575                           ;./lcd.h: 89:    y = a&0xF0;
  9576  003CAC  5004               	movf	Lcd_Write_Char@a^0,w,c
  9577  003CAE  0BF0               	andlw	240
  9578  003CB0  6E03               	movwf	Lcd_Write_Char@y^0,c
  9579  003CB2                     
  9580                           ;./lcd.h: 90:    LATD2 = 1;
  9581  003CB2  848C               	bsf	3980,2,c	;volatile
  9582  003CB4                     
  9583                           ;./lcd.h: 91:    Lcd_Port(y>>4);
  9584  003CB4  3803               	swapf	Lcd_Write_Char@y^0,w,c
  9585  003CB6  0B0F               	andlw	15
  9586  003CB8  ECFD  F01C         	call	_Lcd_Port
  9587  003CBC                     
  9588                           ;./lcd.h: 92:    LATD3 = 1;
  9589  003CBC  868C               	bsf	3980,3,c	;volatile
  9590  003CBE                     
  9591                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  9592  003CBE  0E0D               	movlw	13
  9593  003CC0                     u5447:
  9594  003CC0  2EE8               	decfsz	wreg,f,c
  9595  003CC2  D7FE               	bra	u5447
  9596  003CC4  F000               	nop	
  9597  003CC6                     
  9598                           ;./lcd.h: 94:    LATD3 = 0;
  9599  003CC6  968C               	bcf	3980,3,c	;volatile
  9600  003CC8                     
  9601                           ;./lcd.h: 95:    Lcd_Port(temp);
  9602  003CC8  5002               	movf	Lcd_Write_Char@temp^0,w,c
  9603  003CCA  ECFD  F01C         	call	_Lcd_Port
  9604  003CCE                     
  9605                           ;./lcd.h: 96:    LATD3 = 1;
  9606  003CCE  868C               	bsf	3980,3,c	;volatile
  9607  003CD0                     
  9608                           ;./lcd.h: 97:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  9609  003CD0  0E0D               	movlw	13
  9610  003CD2                     u5457:
  9611  003CD2  2EE8               	decfsz	wreg,f,c
  9612  003CD4  D7FE               	bra	u5457
  9613  003CD6  F000               	nop	
  9614  003CD8                     
  9615                           ;./lcd.h: 98:    LATD3 = 0;
  9616  003CD8  968C               	bcf	3980,3,c	;volatile
  9617  003CDA  0012               	return		;funcret
  9618  003CDC                     __end_of_Lcd_Write_Char:
  9619                           	opt callstack 0
  9620                           
  9621 ;; *************** function _Lcd_Set_Cursor *****************
  9622 ;; Defined at:
  9623 ;;		line 45 in file "./lcd.h"
  9624 ;; Parameters:    Size  Location     Type
  9625 ;;  a               1    wreg     unsigned char 
  9626 ;;  b               1    3[COMRAM] unsigned char 
  9627 ;; Auto vars:     Size  Location     Type
  9628 ;;  a               1    4[COMRAM] unsigned char 
  9629 ;;  temp            1    7[COMRAM] unsigned char 
  9630 ;;  y               1    6[COMRAM] unsigned char 
  9631 ;;  z               1    5[COMRAM] unsigned char 
  9632 ;; Return value:  Size  Location     Type
  9633 ;;                  1    wreg      void 
  9634 ;; Registers used:
  9635 ;;		wreg, status,2, status,0, cstack
  9636 ;; Tracked objects:
  9637 ;;		On entry : 0/0
  9638 ;;		On exit  : 0/0
  9639 ;;		Unchanged: 0/0
  9640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9641 ;;      Params:         1       0       0       0       0       0       0       0       0
  9642 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9644 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9645 ;;Total ram usage:        5 bytes
  9646 ;; Hardware stack levels used:    1
  9647 ;; Hardware stack levels required when called:    2
  9648 ;; This function calls:
  9649 ;;		_Lcd_Cmd
  9650 ;; This function is called by:
  9651 ;;		_main
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           	psect	text47
  9656  003876                     __ptext47:
  9657                           	opt callstack 0
  9658  003876                     _Lcd_Set_Cursor:
  9659                           	opt callstack 28
  9660                           
  9661                           ;incstack = 0
  9662                           ;Lcd_Set_Cursor@a stored from wreg
  9663  003876  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  9664  003878                     
  9665                           ;./lcd.h: 45: void Lcd_Set_Cursor(char a, char b);./lcd.h: 46: {;./lcd.h: 47:  char temp
      +                          ,z,y;;./lcd.h: 48:  if(a == 1)
  9666  003878  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  9667  00387A  A4D8               	btfss	status,2,c
  9668  00387C  EF42  F01C         	goto	u5351
  9669  003880  EF44  F01C         	goto	u5350
  9670  003884                     u5351:
  9671  003884  EF55  F01C         	goto	l4474
  9672  003888                     u5350:
  9673  003888                     
  9674                           ;./lcd.h: 49:  {;./lcd.h: 50:    temp = 0x80 + b - 1;
  9675  003888  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  9676  00388A  0F7F               	addlw	127
  9677  00388C  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  9678                           
  9679                           ;./lcd.h: 51:   z = temp>>4;
  9680  00388E  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  9681  003890  0B0F               	andlw	15
  9682  003892  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  9683                           
  9684                           ;./lcd.h: 52:   y = temp & 0x0F;
  9685  003894  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  9686  003896  0B0F               	andlw	15
  9687  003898  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  9688  00389A                     
  9689                           ;./lcd.h: 53:   Lcd_Cmd(z);
  9690  00389A  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  9691  00389C  ECC8  F01E         	call	_Lcd_Cmd
  9692  0038A0                     
  9693                           ;./lcd.h: 54:   Lcd_Cmd(y);
  9694  0038A0  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  9695  0038A2  ECC8  F01E         	call	_Lcd_Cmd
  9696                           
  9697                           ;./lcd.h: 55:  }
  9698  0038A6  EF6D  F01C         	goto	l94
  9699  0038AA                     l4474:
  9700  0038AA  0E02               	movlw	2
  9701  0038AC  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  9702  0038AE  A4D8               	btfss	status,2,c
  9703  0038B0  EF5C  F01C         	goto	u5361
  9704  0038B4  EF5E  F01C         	goto	u5360
  9705  0038B8                     u5361:
  9706  0038B8  EF6D  F01C         	goto	l94
  9707  0038BC                     u5360:
  9708  0038BC                     
  9709                           ;./lcd.h: 57:  {;./lcd.h: 58:   temp = 0xC0 + b - 1;
  9710  0038BC  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  9711  0038BE  0FBF               	addlw	191
  9712  0038C0  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  9713                           
  9714                           ;./lcd.h: 59:   z = temp>>4;
  9715  0038C2  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  9716  0038C4  0B0F               	andlw	15
  9717  0038C6  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  9718                           
  9719                           ;./lcd.h: 60:   y = temp & 0x0F;
  9720  0038C8  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  9721  0038CA  0B0F               	andlw	15
  9722  0038CC  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  9723  0038CE                     
  9724                           ;./lcd.h: 61:   Lcd_Cmd(z);
  9725  0038CE  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  9726  0038D0  ECC8  F01E         	call	_Lcd_Cmd
  9727  0038D4                     
  9728                           ;./lcd.h: 62:   Lcd_Cmd(y);
  9729  0038D4  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  9730  0038D6  ECC8  F01E         	call	_Lcd_Cmd
  9731  0038DA                     l94:
  9732  0038DA  0012               	return		;funcret
  9733  0038DC                     __end_of_Lcd_Set_Cursor:
  9734                           	opt callstack 0
  9735                           
  9736 ;; *************** function _Lcd_Init *****************
  9737 ;; Defined at:
  9738 ;;		line 66 in file "./lcd.h"
  9739 ;; Parameters:    Size  Location     Type
  9740 ;;		None
  9741 ;; Auto vars:     Size  Location     Type
  9742 ;;		None
  9743 ;; Return value:  Size  Location     Type
  9744 ;;                  1    wreg      void 
  9745 ;; Registers used:
  9746 ;;		wreg, status,2, cstack
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9752 ;;      Params:         0       0       0       0       0       0       0       0       0
  9753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9754 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9755 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9756 ;;Total ram usage:        1 bytes
  9757 ;; Hardware stack levels used:    1
  9758 ;; Hardware stack levels required when called:    2
  9759 ;; This function calls:
  9760 ;;		_Lcd_Cmd
  9761 ;;		_Lcd_Port
  9762 ;; This function is called by:
  9763 ;;		_main
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           	psect	text48
  9768  003794                     __ptext48:
  9769                           	opt callstack 0
  9770  003794                     _Lcd_Init:
  9771                           	opt callstack 28
  9772  003794                     
  9773                           ;./lcd.h: 68:   Lcd_Port(0x00);
  9774  003794  0E00               	movlw	0
  9775  003796  ECFD  F01C         	call	_Lcd_Port
  9776  00379A                     
  9777                           ;./lcd.h: 69:    _delay((unsigned long)((20)*(4000000/4000.0)));
  9778  00379A  0E1A               	movlw	26
  9779  00379C  6E04               	movwf	??_Lcd_Init^0,c
  9780  00379E  0EF8               	movlw	248
  9781  0037A0                     u5467:
  9782  0037A0  2EE8               	decfsz	wreg,f,c
  9783  0037A2  D7FE               	bra	u5467
  9784  0037A4  2E04               	decfsz	??_Lcd_Init^0,f,c
  9785  0037A6  D7FC               	bra	u5467
  9786  0037A8  D000               	nop2	
  9787  0037AA                     
  9788                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  9789  0037AA  0E03               	movlw	3
  9790  0037AC  ECC8  F01E         	call	_Lcd_Cmd
  9791  0037B0                     
  9792                           ;./lcd.h: 71:  _delay((unsigned long)((5)*(4000000/4000.0)));
  9793  0037B0  0E07               	movlw	7
  9794  0037B2  6E04               	movwf	??_Lcd_Init^0,c
  9795  0037B4  0E7D               	movlw	125
  9796  0037B6                     u5477:
  9797  0037B6  2EE8               	decfsz	wreg,f,c
  9798  0037B8  D7FE               	bra	u5477
  9799  0037BA  2E04               	decfsz	??_Lcd_Init^0,f,c
  9800  0037BC  D7FC               	bra	u5477
  9801  0037BE  F000               	nop	
  9802  0037C0                     
  9803                           ;./lcd.h: 72:   Lcd_Cmd(0x03);
  9804  0037C0  0E03               	movlw	3
  9805  0037C2  ECC8  F01E         	call	_Lcd_Cmd
  9806  0037C6                     
  9807                           ;./lcd.h: 73:  _delay((unsigned long)((11)*(4000000/4000.0)));
  9808  0037C6  0E0F               	movlw	15
  9809  0037C8  6E04               	movwf	??_Lcd_Init^0,c
  9810  0037CA  0E48               	movlw	72
  9811  0037CC                     u5487:
  9812  0037CC  2EE8               	decfsz	wreg,f,c
  9813  0037CE  D7FE               	bra	u5487
  9814  0037D0  2E04               	decfsz	??_Lcd_Init^0,f,c
  9815  0037D2  D7FC               	bra	u5487
  9816  0037D4                     
  9817                           ;./lcd.h: 74:   Lcd_Cmd(0x03);
  9818  0037D4  0E03               	movlw	3
  9819  0037D6  ECC8  F01E         	call	_Lcd_Cmd
  9820  0037DA                     
  9821                           ;./lcd.h: 76:   Lcd_Cmd(0x02);
  9822  0037DA  0E02               	movlw	2
  9823  0037DC  ECC8  F01E         	call	_Lcd_Cmd
  9824  0037E0                     
  9825                           ;./lcd.h: 77:   Lcd_Cmd(0x02);
  9826  0037E0  0E02               	movlw	2
  9827  0037E2  ECC8  F01E         	call	_Lcd_Cmd
  9828  0037E6                     
  9829                           ;./lcd.h: 78:   Lcd_Cmd(0x08);
  9830  0037E6  0E08               	movlw	8
  9831  0037E8  ECC8  F01E         	call	_Lcd_Cmd
  9832  0037EC                     
  9833                           ;./lcd.h: 79:   Lcd_Cmd(0x00);
  9834  0037EC  0E00               	movlw	0
  9835  0037EE  ECC8  F01E         	call	_Lcd_Cmd
  9836  0037F2                     
  9837                           ;./lcd.h: 80:   Lcd_Cmd(0x0C);
  9838  0037F2  0E0C               	movlw	12
  9839  0037F4  ECC8  F01E         	call	_Lcd_Cmd
  9840  0037F8                     
  9841                           ;./lcd.h: 81:   Lcd_Cmd(0x00);
  9842  0037F8  0E00               	movlw	0
  9843  0037FA  ECC8  F01E         	call	_Lcd_Cmd
  9844  0037FE                     
  9845                           ;./lcd.h: 82:   Lcd_Cmd(0x06);
  9846  0037FE  0E06               	movlw	6
  9847  003800  ECC8  F01E         	call	_Lcd_Cmd
  9848  003804  0012               	return		;funcret
  9849  003806                     __end_of_Lcd_Init:
  9850                           	opt callstack 0
  9851                           
  9852 ;; *************** function _Lcd_Clear *****************
  9853 ;; Defined at:
  9854 ;;		line 39 in file "./lcd.h"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;		None
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;		None
  9859 ;; Return value:  Size  Location     Type
  9860 ;;                  1    wreg      void 
  9861 ;; Registers used:
  9862 ;;		wreg, status,2, cstack
  9863 ;; Tracked objects:
  9864 ;;		On entry : 0/0
  9865 ;;		On exit  : 0/0
  9866 ;;		Unchanged: 0/0
  9867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9868 ;;      Params:         0       0       0       0       0       0       0       0       0
  9869 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9871 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9872 ;;Total ram usage:        0 bytes
  9873 ;; Hardware stack levels used:    1
  9874 ;; Hardware stack levels required when called:    2
  9875 ;; This function calls:
  9876 ;;		_Lcd_Cmd
  9877 ;; This function is called by:
  9878 ;;		_main
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           
  9882                           	psect	text49
  9883  003E14                     __ptext49:
  9884                           	opt callstack 0
  9885  003E14                     _Lcd_Clear:
  9886                           	opt callstack 28
  9887  003E14                     
  9888                           ;./lcd.h: 41:  Lcd_Cmd(0);
  9889  003E14  0E00               	movlw	0
  9890  003E16  ECC8  F01E         	call	_Lcd_Cmd
  9891                           
  9892                           ;./lcd.h: 42:  Lcd_Cmd(1);
  9893  003E1A  0E01               	movlw	1
  9894  003E1C  ECC8  F01E         	call	_Lcd_Cmd
  9895  003E20  0012               	return		;funcret
  9896  003E22                     __end_of_Lcd_Clear:
  9897                           	opt callstack 0
  9898                           
  9899 ;; *************** function _Lcd_Cmd *****************
  9900 ;; Defined at:
  9901 ;;		line 30 in file "./lcd.h"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;  a               1    wreg     unsigned char 
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;  a               1    2[COMRAM] unsigned char 
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  1    wreg      void 
  9908 ;; Registers used:
  9909 ;;		wreg, status,2, cstack
  9910 ;; Tracked objects:
  9911 ;;		On entry : 0/0
  9912 ;;		On exit  : 0/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9915 ;;      Params:         0       0       0       0       0       0       0       0       0
  9916 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9917 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9918 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9919 ;;Total ram usage:        2 bytes
  9920 ;; Hardware stack levels used:    1
  9921 ;; Hardware stack levels required when called:    1
  9922 ;; This function calls:
  9923 ;;		_Lcd_Port
  9924 ;; This function is called by:
  9925 ;;		_Lcd_Clear
  9926 ;;		_Lcd_Set_Cursor
  9927 ;;		_Lcd_Init
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931                           	psect	text50
  9932  003D90                     __ptext50:
  9933                           	opt callstack 0
  9934  003D90                     _Lcd_Cmd:
  9935                           	opt callstack 28
  9936                           
  9937                           ;incstack = 0
  9938                           ;Lcd_Cmd@a stored from wreg
  9939  003D90  6E03               	movwf	Lcd_Cmd@a^0,c
  9940  003D92                     
  9941                           ;./lcd.h: 30: void Lcd_Cmd(char a);./lcd.h: 31: {;./lcd.h: 32:  LATD2 = 0;
  9942  003D92  948C               	bcf	3980,2,c	;volatile
  9943  003D94                     
  9944                           ;./lcd.h: 33:  Lcd_Port(a);
  9945  003D94  5003               	movf	Lcd_Cmd@a^0,w,c
  9946  003D96  ECFD  F01C         	call	_Lcd_Port
  9947  003D9A                     
  9948                           ;./lcd.h: 34:  LATD3 = 1;
  9949  003D9A  868C               	bsf	3980,3,c	;volatile
  9950  003D9C                     
  9951                           ;./lcd.h: 35:         _delay((unsigned long)((4)*(4000000/4000.0)));
  9952  003D9C  0E06               	movlw	6
  9953  003D9E  6E02               	movwf	??_Lcd_Cmd^0,c
  9954  003DA0  0E30               	movlw	48
  9955  003DA2                     u5497:
  9956  003DA2  2EE8               	decfsz	wreg,f,c
  9957  003DA4  D7FE               	bra	u5497
  9958  003DA6  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  9959  003DA8  D7FC               	bra	u5497
  9960  003DAA  D000               	nop2	
  9961  003DAC                     
  9962                           ;./lcd.h: 36:         LATD3 = 0;
  9963  003DAC  968C               	bcf	3980,3,c	;volatile
  9964  003DAE  0012               	return		;funcret
  9965  003DB0                     __end_of_Lcd_Cmd:
  9966                           	opt callstack 0
  9967                           
  9968 ;; *************** function _Lcd_Port *****************
  9969 ;; Defined at:
  9970 ;;		line 8 in file "./lcd.h"
  9971 ;; Parameters:    Size  Location     Type
  9972 ;;  a               1    wreg     unsigned char 
  9973 ;; Auto vars:     Size  Location     Type
  9974 ;;  a               1    0[COMRAM] unsigned char 
  9975 ;; Return value:  Size  Location     Type
  9976 ;;                  1    wreg      void 
  9977 ;; Registers used:
  9978 ;;		wreg
  9979 ;; Tracked objects:
  9980 ;;		On entry : 0/0
  9981 ;;		On exit  : 0/0
  9982 ;;		Unchanged: 0/0
  9983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9984 ;;      Params:         0       0       0       0       0       0       0       0       0
  9985 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9986 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9987 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9988 ;;Total ram usage:        1 bytes
  9989 ;; Hardware stack levels used:    1
  9990 ;; This function calls:
  9991 ;;		Nothing
  9992 ;; This function is called by:
  9993 ;;		_Lcd_Cmd
  9994 ;;		_Lcd_Init
  9995 ;;		_Lcd_Write_Char
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text51
 10000  0039FA                     __ptext51:
 10001                           	opt callstack 0
 10002  0039FA                     _Lcd_Port:
 10003                           	opt callstack 28
 10004                           
 10005                           ;incstack = 0
 10006                           ;Lcd_Port@a stored from wreg
 10007  0039FA  6E01               	movwf	Lcd_Port@a^0,c
 10008  0039FC                     
 10009                           ;./lcd.h: 8: void Lcd_Port(char a);./lcd.h: 9: {;./lcd.h: 10:  if(a & 1)
 10010  0039FC  A001               	btfss	Lcd_Port@a^0,0,c
 10011  0039FE  EF03  F01D         	goto	u4861
 10012  003A02  EF05  F01D         	goto	u4860
 10013  003A06                     u4861:
 10014  003A06  EF08  F01D         	goto	l74
 10015  003A0A                     u4860:
 10016  003A0A                     
 10017                           ;./lcd.h: 11:   LATD4 = 1;
 10018  003A0A  888C               	bsf	3980,4,c	;volatile
 10019  003A0C  EF09  F01D         	goto	l4066
 10020  003A10                     l74:
 10021                           
 10022                           ;./lcd.h: 13:   LATD4 = 0;
 10023  003A10  988C               	bcf	3980,4,c	;volatile
 10024  003A12                     l4066:
 10025                           
 10026                           ;./lcd.h: 15:  if(a & 2)
 10027  003A12  A201               	btfss	Lcd_Port@a^0,1,c
 10028  003A14  EF0E  F01D         	goto	u4871
 10029  003A18  EF10  F01D         	goto	u4870
 10030  003A1C                     u4871:
 10031  003A1C  EF13  F01D         	goto	l76
 10032  003A20                     u4870:
 10033  003A20                     
 10034                           ;./lcd.h: 16:   LATD5 = 1;
 10035  003A20  8A8C               	bsf	3980,5,c	;volatile
 10036  003A22  EF14  F01D         	goto	l4070
 10037  003A26                     l76:
 10038                           
 10039                           ;./lcd.h: 18:   LATD5 = 0;
 10040  003A26  9A8C               	bcf	3980,5,c	;volatile
 10041  003A28                     l4070:
 10042                           
 10043                           ;./lcd.h: 20:  if(a & 4)
 10044  003A28  A401               	btfss	Lcd_Port@a^0,2,c
 10045  003A2A  EF19  F01D         	goto	u4881
 10046  003A2E  EF1B  F01D         	goto	u4880
 10047  003A32                     u4881:
 10048  003A32  EF1E  F01D         	goto	l78
 10049  003A36                     u4880:
 10050  003A36                     
 10051                           ;./lcd.h: 21:   LATD6 = 1;
 10052  003A36  8C8C               	bsf	3980,6,c	;volatile
 10053  003A38  EF1F  F01D         	goto	l4074
 10054  003A3C                     l78:
 10055                           
 10056                           ;./lcd.h: 23:   LATD6 = 0;
 10057  003A3C  9C8C               	bcf	3980,6,c	;volatile
 10058  003A3E                     l4074:
 10059                           
 10060                           ;./lcd.h: 25:  if(a & 8)
 10061  003A3E  A601               	btfss	Lcd_Port@a^0,3,c
 10062  003A40  EF24  F01D         	goto	u4891
 10063  003A44  EF26  F01D         	goto	u4890
 10064  003A48                     u4891:
 10065  003A48  EF29  F01D         	goto	l80
 10066  003A4C                     u4890:
 10067  003A4C                     
 10068                           ;./lcd.h: 26:   LATD7 = 1;
 10069  003A4C  8E8C               	bsf	3980,7,c	;volatile
 10070  003A4E  EF2A  F01D         	goto	l82
 10071  003A52                     l80:
 10072                           
 10073                           ;./lcd.h: 28:   LATD7 = 0;
 10074  003A52  9E8C               	bcf	3980,7,c	;volatile
 10075  003A54                     l82:
 10076  003A54  0012               	return		;funcret
 10077  003A56                     __end_of_Lcd_Port:
 10078                           	opt callstack 0
 10079                           
 10080                           	psect	rparam
 10081  0000                     tosu	equ	0xFFF
 10082                           tosh	equ	0xFFE
 10083                           tosl	equ	0xFFD
 10084                           stkptr	equ	0xFFC
 10085                           pclatu	equ	0xFFB
 10086                           pclath	equ	0xFFA
 10087                           pcl	equ	0xFF9
 10088                           tblptru	equ	0xFF8
 10089                           tblptrh	equ	0xFF7
 10090                           tblptrl	equ	0xFF6
 10091                           tablat	equ	0xFF5
 10092                           prodh	equ	0xFF4
 10093                           prodl	equ	0xFF3
 10094                           indf0	equ	0xFEF
 10095                           postinc0	equ	0xFEE
 10096                           postdec0	equ	0xFED
 10097                           preinc0	equ	0xFEC
 10098                           plusw0	equ	0xFEB
 10099                           fsr0h	equ	0xFEA
 10100                           fsr0l	equ	0xFE9
 10101                           wreg	equ	0xFE8
 10102                           indf1	equ	0xFE7
 10103                           postinc1	equ	0xFE6
 10104                           postdec1	equ	0xFE5
 10105                           preinc1	equ	0xFE4
 10106                           plusw1	equ	0xFE3
 10107                           fsr1h	equ	0xFE2
 10108                           fsr1l	equ	0xFE1
 10109                           bsr	equ	0xFE0
 10110                           indf2	equ	0xFDF
 10111                           postinc2	equ	0xFDE
 10112                           postdec2	equ	0xFDD
 10113                           preinc2	equ	0xFDC
 10114                           plusw2	equ	0xFDB
 10115                           fsr2h	equ	0xFDA
 10116                           fsr2l	equ	0xFD9
 10117                           status	equ	0xFD8


Data Sizes:
    Strings     130
    Constant    0
    Data        0
    BSS         101
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    142     159
    BANK1           256      0      88
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[6]), STR_7(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@datoSalida(BANK0[50]), main@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> main@datoSalida(BANK0[50]), main@buffer(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1316_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> main@datoSalida(BANK0[50]), main@buffer(BANK0[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> main@datoSalida(BANK0[50]), main@buffer(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[6]), STR_7(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[6]), STR_7(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[6]), STR_7(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dameTemperaturaLm35@temperatura	PTR float  size(2) Largest target is 4
		 -> main@temperatura(BANK0[4]), 

    escribeSD@cadena	PTR unsigned char  size(2) Largest target is 50
		 -> main@datoSalida(BANK0[50]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> main@buffer(BANK0[20]), 

    UART_printf@cadena	PTR unsigned char  size(2) Largest target is 29
		 -> STR_6(CODE[18]), STR_5(CODE[20]), STR_4(CODE[3]), STR_3(CODE[4]), 
		 -> STR_2(CODE[20]), STR_1(CODE[29]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _escribeSD->_Escribir
    _UART_printf->_UART_write
    _Leer->_Comando
    _InicializarSD->_Comando
    _Escribir->_Comando
    _Comando->_SPI_Write
    _dameTemperaturaLm35->___flmul
    _UART_init->___aldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                76    76      0   36099
                                             66 BANK0     76    76      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _SPI_Init
                          _UART_init
                      _configurarAdc
                _dameTemperaturaLm35
                          _escribeSD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   27873
                                             87 COMRAM     8     0      8
                                             56 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27364
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   26992
                                             57 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   21693
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _escribeSD                                            2     0      2    3155
                                             14 COMRAM     2     0      2
                           _Escribir
                      _InicializarSD
                               _Leer
                        _UART_printf
 ---------------------------------------------------------------------------------
 (2) _UART_printf                                          2     0      2     523
                                              1 COMRAM     2     0      2
                         _UART_write
 ---------------------------------------------------------------------------------
 (3) _UART_write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Leer                                                 4     4      0     830
                                              7 COMRAM     4     4      0
                            _Comando
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _InicializarSD                                        2     2      0     830
                                              7 COMRAM     2     2      0
                            _Comando
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _Escribir                                             7     7      0     852
                                              7 COMRAM     7     7      0
                            _Comando
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _Comando                                              6     1      5     762
                                              1 COMRAM     6     1      5
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dameTemperaturaLm35                                  4     2      2    3044
                                             25 COMRAM     4     2      2
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _configurarAdc                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                           12     8      4     748
                                             14 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     344
                                              4 COMRAM     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     456
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _SPI_Init
   _UART_init
     ___aldiv
   _configurarAdc
   _dameTemperaturaLm35
     ___flmul
     ___xxtofl
   _escribeSD
     _Escribir
       _Comando
         _SPI_Read
         _SPI_Write
       _SPI_Read
       _SPI_Write
     _InicializarSD
       _Comando
         _SPI_Read
         _SPI_Write
       _SPI_Read
       _SPI_Write
     _Leer
       _Comando
         _SPI_Read
         _SPI_Write
       _SPI_Read
       _SPI_Write
     _UART_printf
       _UART_write
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      58       7       34.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8E      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     156      20        0.0%
DATA                 0      0     156       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Oct 10 04:03:11 2019

                  ___fldiv@aexp 0019                    ___fldiv@bexp 0018                               _i 00FE  
                             _x 00FA                    ___fldiv@sign 0011                     _SSPSTATbits 000FC7  
                            l62 3DB6                              l71 3D46                              l80 3A52  
                            l65 3DC4                              l82 3A54                              l74 3A10  
                            l59 3874                              l76 3A26                              l85 3DAE  
                            _CS 007C22                              l78 3A3C                              l94 38DA  
                            l88 3E20                              l97 3804                    ___awdiv@sign 0006  
                ?_configurarAdc 0001             ___wmul@multiplicand 0003                     __CFG_BORV$3 000000  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000  
                  __CFG_CP3$OFF 000000                             l100 3CDA                             l112 3DCC  
                           l121 3E02                             l106 3BC2                             l115 3DDA  
                           l132 3CA2                             l109 3DF0                             l118 3DF2  
                           l144 3792                             l136 372A                             l242 324C  
                           l171 2B82                             l155 34FE                             l156 3500  
                           l245 328E                             l309 1008                             l190 3664  
                           l247 32CA                             l184 344C                             l193 36FA  
                           l265 1432                             l362 1C9C                             l451 2C8E  
                           l187 3E12                             l603 338E                             l283 0C70  
                           l355 1D52                             l372 3D6C                             l631 365A  
                           l616 35B0                             l368 3934                             l369 393C  
                           l642 2E98                             l900 1622                             l637 2E52  
                           l901 1610                             l646 3C32                             l902 15D6  
                           l917 173C                             l909 18F2                             l669 2D94  
                           l926 180C                             l942 3B3E                             l927 17FA  
                           l954 2516                             l956 2376                             l965 23BC  
                           l990 217C                             l967 2434                             l959 233A  
                           l968 2422                             l993 200E                             l986 1E18  
                           l995 2086                             l996 2074                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000                   _InicializarSD 36FC                    __CFG_BOR$OFF 000000  
                           _pad 3206                    ___awmod@sign 0006                             wreg 000FE8  
                  ___flmul@aexp 0012                    ___flmul@bexp 0013                    ___flmul@sign 000D  
                  ___flmul@temp 0018                    ___flmul@prod 0014                    __CFG_LVP$OFF 000000  
                  ___fltol@exp1 000A                    __CFG_WDT$OFF 000000                            l1003 213E  
                          l1101 3C6A                            l1030 28DC                            l1041 2874  
                          l1034 2818                            l1130 3204                            l1027 2780  
                          l1115 3BFA                            l1109 3AF8                            l1053 2F96  
                          l3000 1554                            l1160 3D10                            l1145 3AA6  
                          l1082 2A64                            l3010 1568                            l3002 1558  
                          l1138 3B82                            l1154 39F8                            l1091 2728  
                          l3100 17CE                            l3020 15A2                            l3012 156C  
                          l3004 155C                            l1148 3E22                            l1164 306C  
                          l1085 2A6C                            l3110 1828                            l3102 17DC  
                          l3030 15F4                            l3022 15BE                            l3014 1570  
                          l3006 1560                            l1094 266C                            l1174 3994  
                          l4000 28F2                            l3120 1892                            l3112 1836  
                          l3104 17F2                            l3040 1640                            l3032 1602  
                          l3024 15CE                            l3008 1564                            l3016 1574  
                          l3200 2538                            l4010 2950                            l4002 28F6  
                          l3130 18CC                            l3122 18B2                            l3114 1870  
                          l3050 1680                            l3034 1604                            l3026 15E4  
                          l3018 1578                            l3210 2620                            l3202 258E  
                          l1179 399C                            l4020 297C                            l4004 28FA  
                          l3300 22EE                            l3132 18D2                            l3124 18B6  
                          l3108 181C                            l3116 1872                            l3060 16AA  
                          l3052 168C                            l3044 1654                            l3036 160E  
                          l3028 15F0                            l3220 2708                            l3212 265C  
                          l3204 25A2                            l3140 3206                            l4100 1926  
                          l3230 3D48                            l4030 2A24                            l4022 29B0  
                          l4014 2956                            l4006 2916                            l3310 2338  
                          l3302 22FE                            l3134 18E0                            l3126 18C4  
                          l3118 1882                            l3070 171C                            l3054 1690  
                          l3046 1664                            l3038 1630                            l3062 16B0  
                          l3222 2718                            l3206 25B0                            l3214 2690  
                          l3150 3258                            l3142 3216                            l4110 1976  
                          l4102 1938                            l4200 3D9C                            l3400 1DE2  
                          l3232 3D64                            l4032 2A36                            l4016 296C  
                          l4008 294C                            l3320 2386                            l3312 2344  
                          l3304 2306                            l3240 2198                            l3136 18E2  
                          l3128 18CA                            l3080 1776                            l3064 16D6  
                          l3072 172C                            l3056 169E                            l3048 1672  
                          l3216 26CC                            l3152 326C                            l3144 322A  
                          l4040 2F98                            l4112 199A                            l4104 193C  
                          l4202 3DAC                            l4210 3CBC                            l3410 1E38  
                          l3402 1DF2                            l3226 3C34                            l4034 2A48  
                          l4026 29E6                            l4018 2974                            l3322 239C  
                          l3330 23CC                            l3314 2362                            l3306 2316  
                          l3250 21CC                            l3242 219A                            l3090 17A6  
                          l3082 1780                            l3074 1752                            l3066 170A  
                          l3058 16A0                            l3170 2F2C                            l3162 2E9A  
                          l3218 26E0                            l3154 3270                            l3146 3238  
                          l4050 2FF4                            l4042 2FC2                            l4130 1ABA  
                          l4122 1A48                            l4114 19D4                            l4106 1960  
                          l4220 3CD0                            l4212 3CBE                            l4204 3CA6  
                          l3500 216C                            l3420 1E78                            l3404 1E02  
                          l4060 3DB2                            l3332 23DA                            l3324 23A2  
                          l3316 2364                            l3308 232A                            l3260 21FE  
                          l3244 21AA                            l3252 21D4                            l3236 217E  
                          l3092 17AA                            l3084 178E                            l3076 1762  
                          l3068 170C                            l3180 2F8E                            l3164 2EBA  
                          l3156 329E                            l3148 3244                            l4052 3010  
                          l4140 1B30                            l4132 1ACA                            l4116 19F4  
                          l4108 1968                            l4124 1A5A                            l4070 3A28  
                          l4062 39FC                            l4222 3CD8                            l4214 3CC6  
                          l4206 3CB2                            l3430 1EC2                            l3422 1E84  
                          l3414 1E4C                            l3406 1E08                            l4310 2AE2  
                          l4302 2AB8                            l3510 32CC                            l3342 2444  
                          l3350 248C                            l3334 23DE                            l3326 23AC  
                          l3318 2374                            l3270 2232                            l3262 2200  
                          l3254 21E4                            l3246 21BA                            l3238 218A  
                          l3094 17BA                            l3086 1790                            l3166 2EF8  
                          l3174 2F38                            l3158 32B2                            l4054 3022  
                          l4046 2FCE                            l4142 1B60                            l4134 1AFA  
                          l4126 1A7A                            l4118 1A02                            l4072 3A36  
                          l4064 3A0A                            l4216 3CC8                            l4208 3CB4  
                          l3440 1F14                            l3432 1ECE                            l3424 1E9C  
                          l3416 1E58                            l3408 1E28                            l4400 2790  
                          l4080 3C74                            l4320 2B14                            l4312 2AE8  
                          l4304 2ABE                            l4240 3756                            l4232 371C  
                          l4224 36FC                            l3520 32F8                            l3512 32D0  
                          l3360 24F6                            l3352 24A6                            l3344 2450  
                          l3336 23EC                            l3328 23BA                            l3280 2278  
                          l3264 2210                            l3272 223A                            l3256 21EA  
                          l3248 21CA                            l3600 3652                            l3088 179E  
                          l3096 17BC                            l3504 3AFA                            l3176 2F4A  
                          l3168 2F20                            l3184 399E                            l3192 3974  
                          l4056 304A                            l4048 2FDC                            l4152 1C26  
                          l4136 1B0C                            l4128 1A8A                            l4074 3A3E  
                          l4066 3A12                            l4218 3CCE                            l3450 1F92  
                          l3442 1F24                            l3434 1EDE                            l3426 1EA8  
                          l3418 1E62                            l4410 27CE                            l4402 27A6  
                          l4090 3C92                            l4082 3C7A                            l4330 2B4A  
                          l4322 2B28                            l4306 2AC4                            l4250 3790  
                          l4242 375E                            l4234 3722                            l4226 36FE  
                          l3530 3326                            l3522 3300                            l3514 32DE  
                          l3362 2504                            l3354 24BC                            l3346 245E  
                          l3338 241A                            l3290 22A0                            l3282 227C  
                          l3274 224A                            l3266 2220                            l3258 21F0  
                          l3602 3658                            l3610 2DD4                            l3098 17CA  
                          l3506 3B0A                            l3186 39AE                            l3194 3986  
                          l4154 1C38                            l4162 1CB0                            l4138 1B22  
                          l4146 1B8C                            l4076 3A4C                            l4068 3A20  
                          l4500 37E6                            l3460 200C                            l3452 1FC8  
                          l3444 1F40                            l3436 1EEA                            l3428 1EB4  
                          l3380 1D70                            l4420 2856                            l4412 2800  
                          l4092 3C9E                            l4084 3C80                            l4332 2B7A  
                          l4324 2B30                            l4316 2B00                            l4308 2ADC  
                          l4252 3790                            l4244 375E                            l4228 3704  
                          l4260 347A                            l3540 3360                            l3532 332E  
                          l3524 3304                            l3516 32E6                            l3364 250A  
                          l3356 24D6                            l3348 2488                            l3276 2260  
                          l3268 2230                            l3620 2E40                            l3612 2E02  
                          l3188 393E                            l3700 0884                            l4180 1D40  
                          l4164 1CD4                            l4172 1D02                            l4156 1C6C  
                          l4148 1BBA                            l4502 37EC                            l4510 3B84  
                          l4350 2B84                            l3470 206C                            l3462 201E  
                          l3454 1FD6                            l3446 1F4C                            l3438 1EFA  
                          l3390 1DB6                            l3382 1D80                            l3374 1D54  
                          l4430 28AC                            l4422 2864                            l4414 2802  
                          l4406 27BA                            l4086 3C86                            l4078 3C6E  
                          l4318 2B06                            l4246 3788                            l4238 372C  
                          l4262 3482                            l4190 3D26                            l3550 3386  
                          l3542 3362                            l3534 333C                            l3526 330C  
                          l3518 32EA                            l3366 250C                            l3358 24F2  
                          l3294 22B4                            l3278 2270                            l3286 2290  
                          l3622 2E90                            l3614 2E12                            l3606 2D96  
                          l3630 3C12                            l3198 2518                            l2910 3188  
                          l2902 313C                            l3710 08D8                            l3702 088E  
                          l4174 1D10                            l4166 1CE2                            l4342 38DC  
                          l4504 37F2                            l4512 3B90                            l4520 3DE4  
                          l4360 2BB8                            l4352 2B88                            l4440 3806  
                          l3480 20DA                            l3464 202C                            l3456 1FF4  
                          l3448 1F68                            l3392 1DBC                            l3384 1D90  
                          l3376 1D60                            l4432 28BC                            l4424 2882  
                          l4416 280E                            l4408 27C2                            l4088 3C8C  
                          l4328 2B36                            l4248 3790                            l4280 34D2  
                          l4272 34B8                            l4264 3486                            l4256 344E  
                          l4192 3D2A                            l3544 3368                            l3536 3342  
                          l3528 331E                            l3560 351C                            l3296 22CE  
                          l3288 22A0                            l3624 2E96                            l3616 2E20  
                          l3608 2DC4                            l3632 3C22                            l2912 31BE  
                          l2904 314E                            l2920 3B5E                            l3720 091C  
                          l3712 08E2                            l3704 089E                            l4168 1CF6  
                          l4096 18F4                            l4344 38E4                            l4194 3D92  
                          l4506 37F8                            l4514 3BA2                            l4522 3DEC  
                          l4370 2BFA                            l4362 2BC8                            l4354 2B96  
                          l4450 3866                            l4442 3806                            l3490 2142  
                          l3474 2096                            l3482 20DE                            l3466 2030  
                          l3458 1FFE                            l3394 1DC2                            l3386 1DA0  
                          l3378 1D6E                            l4434 28CA                            l4426 2884  
                          l4418 284A                            l4338 2B80                            l4290 2A9C  
                          l4282 34F8                            l4274 34BE                            l4266 349A  
                          l4258 3450                            l4186 3D12                            l4530 33B4  
                          l3538 3358                            l3546 336E                            l3570 3550  
                          l3562 3520                            l3554 3502                            l3298 22DE  
                          l3618 2E32                            l3650 2CFA                            l3642 2CBA  
                          l2906 3160                            l2922 3B62                            l2930 3D04  
                          l3810 0CF2                            l3722 0928                            l3730 093E  
                          l3714 08EA                            l3706 08AC                            l4098 1918  
                          l4178 1D1C                            l4346 38F2                            l4196 3D94  
                          l4508 37FE                            l4516 3BA6                            l4524 3DEE  
                          l4380 2C4C                            l4372 2C06                            l4364 2BCC  
                          l4356 2BA6                            l4460 3870                            l4452 3868  
                          l4444 3808                            l3492 2152                            l3484 20F8  
                          l3476 20A2                            l3468 203E                            l3396 1DD0  
                          l3388 1DA6                            l4436 28CC                            l4428 2888  
                          l4292 2AA4                            l4268 34A0                            l4188 3D16  
                          l4540 341A                            l4532 33C4                            l4620 299A  
                          l3548 337E                            l3580 358A                            l3572 3558  
                          l3564 352E                            l3556 3506                            l3628 3BFC  
                          l2940 1440                            l3660 2D2A                            l3652 2D08  
                          l3644 2CE4                            l3636 2C90                            l2908 316A  
                          l2916 3B40                            l2924 3CDC                            l3900 112C  
                          l3820 0D2A                            l3812 0CFA                            l3804 0C8E  
                          l3740 09C8                            l3732 0964                            l3724 0930  
                          l3716 08FC                            l3708 08B4                            l4348 3918  
                          l4198 3D9A                            l4470 389A                            l4518 3DDC  
                          l4390 2C7E                            l4382 2C4E                            l4374 2C14  
                          l4366 2BDC                            l4358 2BAA                            l4462 3872  
                          l4454 386A                            l4446 380A                            l4550 3E06  
                          l3494 2160                            l3486 210C                            l3478 20B0  
                          l3398 1DD2                            l4294 2AA8                            l4286 2A70  
                          l4278 34D2                            l4542 342E                            l4534 33E6  
                          l4526 3390                            l3574 3566                            l3582 3590  
                          l3566 3536                            l3558 3514                            l3590 35B2  
                          l2950 1480                            l2942 144E                            l3670 2D54  
                          l3662 2D34                            l3646 2CE6                            l3638 2CA6  
                          l2918 3B4C                            l2926 3CE8                            l2934 3BC4  
                          l3910 1160                            l3902 1132                            l3830 0D74  
                          l3822 0D38                            l3806 0CA0                            l3814 0CFE  
                          l3750 0A38                            l3742 09E0                            l3726 0934  
                          l3718 090A                            ?_pad 0011                            l4464 3E14  
                          l4480 38D4                            l4472 38A0                            l4384 2C58  
                          l4376 2C1E                            l4368 2BF2                            l4456 386C  
                          l4448 383E                            l3496 2162                            l3488 2126  
                          l4560 36B6                            l4552 365C                            l4296 2AAE  
                          l4288 2A72                            l4544 343E                            l4536 33F6  
                          l4528 33A4                            l3680 3AA8                            l3584 35A0  
                          l3576 357C                            l3568 3548                            l3592 35E0  
                          l2960 14B2                            l2952 1482                            l2944 1450  
                          l3672 2D64                            l3648 2CF6                            l2928 3CEC  
                          l3904 1138                            l3912 1166                            l3920 11FE  
                          l3840 0DBA                            l3832 0D86                            l3824 0D3C  
                          l3816 0D06                            l3808 0CBC                            l3744 09EA  
                          l3736 099A                            l3728 0938                            l4490 37C0  
                          l4482 3794                            l4474 38AA                            l4466 3878  
                          l4378 2C3C                            l4386 2C5E                            l4458 386E  
                          l3498 2168                            l4394 272C                            l4554 3660  
                          l4546 344A                            l4538 3402                            l3682 3AAC  
                          l3586 35A8                            l3578 3584                            l3594 35F0  
                          l2970 14DA                            l2962 14B4                            l2946 1460  
                          l2954 148A                            l2938 1434                            l3674 2D74  
                          l3658 2D20                            l3930 1268                            l3922 121C  
                          l3914 11BE                            l3906 114A                            l3850 0ECE  
                          l3842 0E1E                            l3826 0D4E                            l3834 0D8E  
                          l3818 0D18                            l3754 0A6E                            l3738 09AC  
                          l4570 3A94                            l4562 3A56                            l4492 37C6  
                          l4484 379A                            l4476 38BC                            l4468 3888  
                          l4388 2C6E                            l4548 3E04                            l4396 273C  
                          l4556 3662                            l3692 3DC8                            l3684 3AC0  
                          l3596 361E                            l2980 1514                            l2972 14EA  
                          l2964 14BA                            l2956 149A                            l2948 1470  
                          l3676 2D84                            l3668 2D48                            l3940 12A6  
                          l3932 126C                            l3924 1238                            l3916 11F2  
                          l3908 115C                            l3860 0F8C                            l3852 0F02  
                          l3844 0E76                            l3836 0D96                            l3828 0D5C  
                          l3780 0BD0                            l3772 0B08                            l3756 0A80  
                          l3748 0A12                            l4564 3A68                            l4580 3088  
                          l4494 37D4                            l4486 37AA                            l4478 38CE  
                          l4398 274A                            l4558 3672                            l3694 3DF2  
                          l3686 3AEE                            l3598 362E                            l2990 1540  
                          l2982 1526                            l2974 14FA                            l2966 14C8  
                          l2958 14A0                            l3950 12D8                            l3942 12AE  
                          l3934 127C                            l3926 124A                            l3918 11FA  
                          l3870 1000                            l3862 0F9C                            l3854 0F34  
                          l3846 0EAA                            l3838 0DA6                            l3790 0C30  
                          l3782 0BD8                            l3774 0B3C                            l3758 0A9C  
                          l3766 0AB8                            l4566 3A70                            l4590 30CA  
                          l4582 308C                            l4574 306E                            l4496 37DA  
                          l4488 37B0                            l3696 3E00                            l3688 3AF2  
                          l2992 1544                            l2984 1534                            l2976 14FC  
                          l2968 14CA                            l3952 12DE                            l3960 132E  
                          l3944 12BC                            l3936 128E                            l3928 1258  
                          l3880 10BC                            l3872 1024                            l3864 0FD0  
                          l3856 0F4A                            l3848 0EB0                            l3792 0C42  
                          l3776 0B42                            l3784 0C0A                            l3768 0AD2  
                          l4568 3A78                            l4592 30D4                            l4584 30A0  
                          l4576 3080                            l4498 37E0                            l2994 1548  
                          l2986 1538                            l2978 1504                            l3970 137E  
                          l3962 1340                            l3954 1304                            l3946 12C4  
                          l3938 1296                            l3890 1102                            l3882 10CA  
                          l3874 1088                            l3866 0FE0                            l3858 0F7C  
                          l3794 0C4A                            l3786 0C1A                            l3778 0B9C  
                          l4594 30F8                            l4586 30BA                            l4578 3084  
                          l2996 154C                            l2988 153C                            l3972 1386  
                          l3964 135A                            l3956 1320                            l3948 12CC  
                          l3892 1106                            l3876 1098                            l3884 10D2  
                          l3868 0FF4                            l3796 0C64                            l3788 0C1E  
                          l4596 3104                            l4588 30C6                            l2998 1550  
                          l3990 140C                            l3982 13D6                            l3974 1396  
                          l3966 1360                            l3958 1328                            l3894 110C  
                          l3886 10E4                            l3878 10AA                            l3798 0C7C  
                          l4598 3128                            l3992 1412                            l3984 13E8  
                          l3976 139C                            l3968 1372                            l3896 1118  
                          l3888 10F2                            l3986 13F4                            l3978 13A2  
                          l3898 1128                            l3988 13FC                            l3998 28DE  
                          STR_1 0801                            STR_2 081E                            STR_3 0879  
                          STR_4 0880                            STR_5 0832                            STR_6 0846  
                          STR_7 0858                            STR_8 0863                            STR_9 0869  
                          u3000 16D6                            u3001 16D2                            u3010 171C  
                          u3011 1718                            u3100 1808                            u3020 1752  
                          u3101 1804                            u3021 174E                            u3110 181C  
                          u3030 1762                            u3111 1818                            u3031 175E  
                          u4000 35A0                            u3120 1836                            u3040 178E  
                          u3200 3238                            u4001 359C                            u3121 1832  
                          u3041 178A                            u3201 3234                            u4010 35E0  
                          u3130 1870                            u3050 179E                            u3210 328E  
                          u4011 35DC                            u3131 186C                            u3051 179A  
                          u3211 328A                            u4020 361E                            u3140 1882  
                          u3060 17BA                            u4100 2CA6                            u3220 329E  
                          u3300 39E6                            u4021 361A                            u3141 187E  
                          u3061 17B6                            u4101 2CA2                            u3221 329A  
                          u4030 3652                            u3150 1892                            u3070 17CA  
                          u4110 2CDA                            u3230 2EDA                            u3310 39F8  
                          u4031 364E                            u3151 188E                            u3071 17C6  
                          u3311 39F4                            u4200 3E00                            u4040 2DC4  
                          u3160 18B2                            u3080 17DC                            u4120 2D08  
                          u3240 2EF8                            u3400 2640                            u3320 396E  
                          u5000 1C20                            u4201 3DFC                            u4041 2DC0  
                          u3161 18AE                            u3081 17D8                            u4121 2D04  
                          u3241 2EF4                            u3321 3968                            u5001 1C1A  
                          u4050 2E02                            u3170 18C4                            u3090 17F2  
                          u4130 2D1C                            u3250 2F20                            u3410 265C  
                          u3330 3970                            u4210 08AC                            u5010 1C22  
                          u4051 2DFE                            u3171 18C0                            u3091 17EE  
                          u4131 2D18                            u4115 2CD0                            u3251 2F1C  
                          u3235 2ED0                            u3411 2658                            u3307 39DC  
                          u4211 08A8                            u5100 34B4                            u3500 21FE  
                          u4060 2E20                            u3180 18E0                            u4140 2D44  
                          u3260 2F4A                            u3420 26B0                            u3340 3986  
                          u4300 0A66                            u4220 08FC                            u5020 1C38  
                          u5101 34B0                            u3501 21FA                            u4061 2E1C  
                          u3181 18DC                            u4141 2D40                            u3261 2F46  
                          u3405 2636                            u3341 3982                            u4301 0A60  
                          u4221 08F8                            u5021 1C34                            u5110 34F8  
                          u3510 2210                            u4070 2E40                            u4150 2D64  
                          u3430 26CC                            u3350 2560                            u3190 3216  
                          u4310 0A68                            u4230 090A                            u5030 1CD4  
                          u5111 34F4                            u3511 220C                            u4071 2E3C  
                          u4151 2D60                            u3431 26C8                            u3191 3212  
                          u4231 0906                            u5031 1CD0                            u5200 2BB8  
                          u5120 2A9C                            u5040 3D46                            u3600 23BA  
                          u3520 2220                            u4080 2E90                            u2800 144E  
                          u4160 2D74                            u3280 2F84                            u3440 2708  
                          u3360 258E                            u2720 314E                            u4400 0CA0  
                          u4320 0A80                            u4240 091C                            u5201 2BB4  
                          u5121 2A98                            u5041 3D42                            u3601 23B6  
                          u3521 221C                            u4081 2E8C                            u2801 144A  
                          u4161 2D70                            u3281 2F7E                            u3441 2704  
                          u3425 26A6                            u3361 258A                            u2721 314A  
                          u4401 0C9C                            u4321 0A7C                            u4241 0918  
                          u5210 2BF2                            u5130 2ADC                            u5050 3718  
                          u3450 3C64                            u4170 3AC0                            u3610 23DA  
                          u3530 2260                            u4090 3C12                            u2810 1460  
                          u3290 2F86                            u3370 25B0                            u2730 3160  
                          u4410 0CBC                            u4330 0B04                            u4250 0964  
                          u5211 2BEE                            u5131 2AD8                            u5051 3714  
                          u3451 3C5E                            u4171 3ABC                            u3611 23D6  
                          u3531 225C                            u4091 3C0E                            u2811 145C  
                          u3275 2F5C                            u3371 25AC                            u3355 2556  
                          u2731 315C                            u4411 0CB8                            u4331 0B00  
                          u4251 0960                            u5220 2C14                            u3700 1D6E  
                          u5300 2864                            u5140 2AFC                            u5060 3756  
                          u3460 3C66                            u4180 3AEE                            u3620 23EC  
                          u3540 22A0                            u2900 15BA                            u2820 1470  
                          u2740 3188                            u4500 0F34                            u4420 0CF2  
                          u4340 0B98                            u4260 0992                            u5221 2C10  
                          u3701 1D6A                            u5301 2860                            u5141 2AF8  
                          u5061 3752                            u4181 3AEA                            u3621 23E8  
                          u3541 229C                            u2901 15B4                            u2821 146C  
                          u2741 3184                            u4501 0F30                            u4421 0CEE  
                          u4341 0B94                            u4261 098C                            u5230 2C3C  
                          u3710 1D80                            u5310 2874                            u4190 3DDA  
                          u5150 2B28                            u5070 3788                            u3630 241A  
                          u3550 2316                            u3470 2198                            u2910 15BC  
                          u2830 14B2                            u3390 261C                            u2750 31BE  
                          u4510 0F7C                            u4430 0D18                            u4350 0C0A  
                          u4270 0994                            u5231 2C38                            u3711 1D7C  
                          u5311 2870                            u4191 3DD6                            u5151 2B24  
                          u5071 3784                            u3631 2416                            u3551 2312  
                          u3471 2194                            u2831 14AE                            u3391 2618  
                          u2751 31BA                            u4511 0F78                            u4431 0D14  
                          u4351 0C06                            u5240 2C6E                            u3800 202C  
                          u3720 1D90                            u5320 2882                            u5160 2B4A  
                          u5080 347A                            u5400 341A                            u3640 2430  
                          u3560 2338                            u3480 21AA                            u2920 15E4  
                          u2840 14C8                            u2760 3B82                            u4600 114A  
                          u4520 0F8C                            u4440 0D2A                            u4360 0C30  
                          u4280 09AC                            u5241 2C6A                            u3801 2028  
                          u3721 1D8C                            u5321 287E                            u5161 2B46  
                          u5081 3476                            u5401 3416                            u3641 242C  
                          u3561 2334                            u3481 21A6                            u2921 15E0  
                          u2841 14C4                            u3385 25C4                            u2761 3B7E  
                          u4601 1146                            u4521 0F88                            u4441 0D26  
                          u4361 0C2C                            u4281 09A8                            u3810 203E  
                          u3730 1DD0                            u5330 28BC                            u5250 273C  
                          u5170 2B7A                            u5090 349A                            u5410 342E  
                          u3650 2444                            u3570 2362                            u3490 21BA  
                          u2930 1602                            u2850 14DA                            u3386 25CE  
                          u2770 3D04                            u4610 121C                            u4530 0FF4  
                          u4450 0D38                            u4370 0C42                            u4290 0A38  
                          u3811 203A                            u3731 1DCC                            u5331 28B8  
                          u5251 2738                            u5171 2B76                            u5091 3496  
                          u5411 342A                            u3651 2440                            u3571 235E  
                          u3491 21B6                            u2931 15FE                            u2851 14D6  
                          u3387 25DE                            u2771 3D00                            u4611 1218  
                          u4531 0FF0                            u4451 0D34                            u4371 0C3E  
                          u4291 0A34                            u3820 206C                            u3740 1DE2  
                          u5340 28CA                            u5260 274A                            u5420 3672  
                          u3900 32F8                            u3660 245E                            u3580 2386  
                          u2940 1622                            u2860 14EA                            u2780 3BF4  
                          u4700 13D0                            u4620 1238                            u4540 1098  
                          u4460 0D4E                            u4380 0C64                            u5180 3934  
                          u3821 2068                            u3741 1DDE                            u5341 28C6  
                          u5261 2746                            u5421 366E                            u3901 32F4  
                          u3661 245A                            u3581 2382                            u2941 161E  
                          u2861 14E6                            u2781 3BEE                            u4701 13CA  
                          u4621 1234                            u4541 1094                            u4461 0D4A  
                          u4381 0C60                            u5181 3930                            u5350 3888  
                          u5190 2B96                            u3830 2082                            u3750 1DF2  
                          u5270 27A6                            u3910 331E                            u3670 24A6  
                          u3590 239C                            u2950 1630                            u2870 1526  
                          u2790 3BF6                            u4710 13D2                            u4630 124A  
                          u4550 10AA                            u4470 0D5C                            u4390 0C8A  
                          u5351 3884                            u5191 2B92                            u3831 207E  
                          u3751 1DEE                            u5271 27A2                            u3911 331A  
                          u3671 24A2                            u3591 2398                            u2951 162C  
                          u2871 1522                            u4631 1246                            u4551 10A6  
                          u4471 0D58                            u4391 0C86                            u5360 38BC  
                          u3840 2096                            u3760 1E28                            u5280 27FC  
                          u3920 333C                            u3680 24D6                            u2960 1640  
                          u2880 1534                            u4720 13E8                            u4640 1258  
                          u4560 10BC                            u4480 0D86                            u4800 2FC2  
                          u5361 38B8                            u3841 2092                            u3761 1E24  
                          u5281 27F8                            u3921 3338                            u3681 24D2  
                          u2961 163C                            u2881 1530                            u4721 13E4  
                          u4641 1254                            u4561 10B8                            u4481 0D82  
                          u4801 2FBE                            u5370 3BC2                            u3850 20B0  
                          u3770 1E38                            u5290 2846                            u4730 2916  
                          u3930 3358                            u3690 2504                            u2970 1672  
                          u2890 15A2                            u4650 128E                            u4570 10CA  
                          u4490 0ECE                            u4810 2FF4                            u5371 3BBE  
                          u3851 20AC                            u3771 1E34                            u5291 2842  
                          u4731 2912                            u3931 3354                            u3691 2500  
                          u2971 166E                            u2891 159E                            u4651 128A  
                          u4571 10C6                            u4491 0ECA                            u4811 2FF0  
                          u3860 20F8                            u3780 1FB2                            u5380 33A4  
                          u4740 294C                            u3940 337E                            u2980 1680  
                          u4660 12BC                            u4580 10E4                            u4820 3010  
                          u4900 1918                            u3861 20F4                            u5381 33A0  
                          u4741 2948                            u3941 337A                            u2981 167C  
                          u4661 12B8                            u4581 10E0                            u4821 300C  
                          u4901 1914                            u5437 30AC                            u3870 2126  
                          u3790 200C                            u5390 33E6                            u4750 2968  
                          u3950 3514                            u2990 169E                            u4670 1340  
                          u4590 10F2                            u4830 3022                            u4910 1960  
                          u5447 3CC0                            u3871 2122                            u3791 2008  
                          u5391 33E2                            u4751 2964                            u3951 3510  
                          u2991 169A                            u4671 133C                            u4591 10EE  
                          u4831 301E                            u4911 195C                            u3880 2160  
                          u4760 2A1E                            u3960 352E                            u4680 135A  
                          u4840 304A                            u4920 199A                            u5457 3CD2  
                          u3881 215C                            u3785 1FA8                            u4761 2A18  
                          u3961 352A                            u4681 1356                            u4841 3046  
                          u4921 1996                            u4850 3DC4                            u4770 2A20  
                          u3890 32DE                            u3970 3548                            u4690 1372  
                          u4930 1A42                            u5467 37A0                            u4851 3DC0  
                          u3891 32DA                            u3971 3544                            u4691 136E  
                          u4931 1A3C                            u4860 3A0A                            u4780 2A36  
                          u3980 3566                            u4940 1A44                            u4861 3A06  
                          u5477 37B6                            u4781 2A32                            u3981 3562  
                          u4870 3A20                            u4790 2A48                            u3990 357C  
                          u4950 1A5A                            u4871 3A1C                            u5487 37CC  
                          u4791 2A44                            u3991 3578                            u4951 1A56  
                          u4880 3A36                            u4960 1A8A                            u4881 3A32  
                          u5497 3DA2                            u4961 1A86                            u4890 3A4C  
                          u4970 1ACA                            u4891 3A48                            u4971 1AC6  
                          u4980 1B0C                            u4981 1B08                            u4990 1BBA  
                          u4991 1BB6                            _TRMT 007D61                            _Leer 344E  
             ?_Lcd_Write_String 0005                            _dbuf 0104                            _atoi 28DE  
                          _main 306E                            _prec 00F6                            _nout 00F2  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                 ___fpclassifyf 2E9A                            prodh 000FF4                            prodl 000FF3  
                          start 0000              ??_Lcd_Write_String 0007                   __CFG_IESO$OFF 000000  
               ___fldiv@new_exp 0012                 __end_of_Lcd_Cmd 3DB0                    _tolower$1388 000D  
               __end_of_Comando 3CA4                    ___param_bank 000000                           ??_pad 0017  
                 __CFG_PLLDIV$1 000000                           ?_Leer 0001                   ___fltol@sign1 0009  
               __end_of___aldiv 2C90                           ?_atoi 0008                 __end_of___fladd 18F4  
                         ?_main 0001                 __end_of___fldiv 2518                 __end_of___awdiv 3390  
               __end_of___flneg 3C34                           STR_10 0871                           STR_13 086D  
                         STR_14 0875                           STR_17 087D                           STR_19 087D  
               __end_of___awmod 35B2                 __end_of___flmul 217E                  ?_InicializarSD 0001  
               __end_of___flsub 3B40                 __end_of___fltol 2D96                 ___awdiv@divisor 0003  
                         _LATD2 007C62                           _LATD3 007C63                           _LATD4 007C64  
                         _LATD5 007C65                           _LATD6 007C66                           _LATD7 007C67  
               ___awdiv@counter 0005                    vfpfcnvrt@fmt 003C                           _SPBRG 000FAF  
                 __CFG_USBDIV$1 000000         __size_of_Lcd_Set_Cursor 0066                           _TRISA 000F92  
                         _TXREG 000FAD                Escribir@Caracter 000C                   __CFG_PWRT$OFF 000000  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                __CFG_EBTRB$OFF 000000              __size_of_UART_init 0070                           _flags 00F8  
                         _fputc 313C                           _fputs 3B40                 __end_of_isdigit 3C6C  
                   ?_UART_write 0001                           atoi@n 0015                           pad@fp 0011  
                         atoi@s 0008                           _width 00F4                           _putch 3E22  
              __end_of_SPI_Init 3DF2                __end_of_SPI_Read 3E04                 __end_of_isspace 3AFA  
               __end_of_isupper 3BFC                           tablat 000FF5                           status 000FD8  
               __end_of_sprintf 3AA8                  ?___fpclassifyf 0001                 __end_of_tolower 399E  
               __end_of_strncmp 306E              __size_of_SPI_Write 0016                  __CFG_ICPRT$OFF 000000  
              __end_of_Lcd_Init 3806                __end_of_Lcd_Port 3A56                  __CFG_MCLRE$OFF 000000  
                  __end_of_Leer 3502                 __initialization 3D6E                    __end_of_atoi 2A6E  
                  __end_of_main 313C                 ??_configurarAdc 0001                __end_of_Escribir 2B84  
                 Escribir@com58 000D                          ??_Leer 0008                          ??_atoi 000A  
                        ??_main 00A2              __size_of_Lcd_Clear 000E                   __activetblptr 000002  
               __CFG_CCP2MX$OFF 000000                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        ?_fputc 0001                          ?_fputs 000A                          _ADRESH 000FC4  
                        _ADRESL 000FC3                ___awdiv@dividend 0001                          ?_putch 0001  
                     ??_Lcd_Cmd 0002                       ??_Comando 0007         __size_of_Lcd_Write_Char 0038  
                        _SSPBUF 000FC9                __end_of___xxtofl 28DE                  __CFG_XINST$OFF 000000  
                  vfprintf@cfmt 0056                          ___flge 2D96                          ___fleq 35B2  
                     ??___aldiv 0009                       ??___fladd 0009                          ___wmul 3D48  
             __end_of_UART_init 3876                       ??___fldiv 0009                       ??___awdiv 0005  
                     ??___flneg 0005                       ??___awmod 0005                       ??___flmul 0009  
                     ??___flsub 0022                       ??___fltol 0005                          _efgtoa 0884  
                        _floorf 2518             __size_of_UART_write 0016                 ??_InicializarSD 0008  
                  ?_UART_printf 0002                          clear_0 3D74                          clear_1 3D80  
              ___awdiv@quotient 0007                 ___awmod@divisor 0003                 ___awmod@counter 0005  
                        pad@buf 0013                          _strcpy 399E                          _strlen 3CDC  
             __end_of_SPI_Write 3DDC                          fputc@c 0001                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                       ??_isdigit 0003  
               ___fpclassifyf@e 0009                 ___fpclassifyf@u 000B                 ___fpclassifyf@x 0001  
                  __mediumconst 0000                       ??_isspace 0003                          tblptrh 000FF7  
                     ??_isupper 0003                          tblptrl 000FF6                          tblptru 000FF8  
                        putch@c 0001                __end_of_vfprintf 393E                       ??_sprintf 0060  
                     ??_tolower 0009                       ??_strncmp 0007                 Lcd_Set_Cursor@a 0005  
               Lcd_Set_Cursor@b 0004                 Lcd_Set_Cursor@y 0007                 Lcd_Set_Cursor@z 0006  
                    ___flge@ff1 001A                      ___flge@ff2 001E                 ??___fpclassifyf 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                    ___fleq@ff1 0001                      ___fleq@ff2 0005     __end_of_dameTemperaturaLm35 36FC  
                    __accesstop 0060         __end_of__initialization 3D86                 __CFG_PBADEN$OFF 000000  
                    ___flneg@f1 0001                 __CFG_FOSC$XT_XT 000000               __end_of_Lcd_Clear 3E22  
                 ___rparam_used 000001                      ___fltol@f1 0001                  __pcstackCOMRAM 0001  
                 __end_of_fputc 3206                   __end_of_fputs 3B84                   __end_of_putch 3E24  
                     ?_SPI_Init 0001                       ?_SPI_Read 0001                  _Lcd_Set_Cursor 3876  
                main@datoSalida 00A4                       ?_Lcd_Init 0001                       ?_Lcd_Port 0001  
                       ??_fputc 0005                         ??_fputs 000E                         ??_putch 0001  
            __size_of_escribeSD 00BE                      __pbssBANK0 00EE                      __pbssBANK1 0100  
                     ?_Escribir 0001                      _efgtoa$771 0064                      _efgtoa$772 0066  
                    _efgtoa$781 006A                      _efgtoa$782 006C                      _efgtoa$783 006E  
                    _efgtoa$777 0068                         ?___flge 001A                         ?___fleq 0001  
                       ?___wmul 0001                         ?_efgtoa 002E                         ?_floorf 001A  
     __size_of_Lcd_Write_String 0040          __end_of_Lcd_Set_Cursor 38DC                      ??_SPI_Init 0001  
                    ??_SPI_Read 0001                         ?_strcpy 0001                         ?_strlen 0001  
              Comando@Direccion 0002                       ?___xxtofl 0001              __size_of_vfpfcnvrt 0460  
                    ??_Lcd_Init 0004                      ??_Lcd_Port 0001                         _SSPCON1 000FC6  
                  ??_UART_write 0001                         _SSPSTAT 000FC7                      ??_Escribir 0008  
               __CFG_VREGEN$OFF 000000                  _Lcd_Write_Char 3CA4                         _Lcd_Cmd 3D90  
                       _Comando 3C6C                         __Hparam 0000                         __Lparam 0000  
                       ___aldiv 2B84                 __size_of___flge 0104                 __size_of___fleq 00AA  
                       ___fladd 1434                         ___fldiv 217E                         ___awdiv 32CC  
                       ___flneg 3BFC                         ___awmod 3502                         ___flmul 1D54  
                       ___flsub 3AFA                         ___fltol 2C90                 __size_of___wmul 0026  
                     ?_vfprintf 0050                    __psmallconst 0800                 __size_of_efgtoa 0BB0  
             __end_of_escribeSD 344E                 __CFG_STVREN$OFF 000000                 __size_of_floorf 0212  
             Escribir@yaescribi 000E                         __pcinit 3D6E                         __ramtop 0800  
               ?_Lcd_Set_Cursor 0004              __end_of_UART_write 3DC6                         __ptext0 306E  
                       __ptext1 3A56                         __ptext2 38DC                         __ptext3 18F4  
                       __ptext4 2F98                         __ptext5 0884                         __ptext6 393E  
                       __ptext7 3BC4                         __ptext8 399E                         __ptext9 3206  
               __size_of_strcpy 005C                 __size_of_strlen 0036            __size_of_UART_printf 0036  
                  __size_of_pad 00C6                         _isdigit 3C34                      ??___xxtofl 0005  
              ___awmod@dividend 0001                ___aldiv@dividend 0001                         _isspace 3AA8  
                       _isupper 3BC4                         efgtoa@c 0034                         efgtoa@d 0078  
                       efgtoa@e 0090                         efgtoa@f 0030                         efgtoa@g 008C  
                       efgtoa@h 0082                         efgtoa@i 008A                         efgtoa@l 0086  
                       efgtoa@m 0074                         efgtoa@n 0092                         efgtoa@p 007C  
                       efgtoa@t 0070                         efgtoa@u 0094                         efgtoa@w 007F  
                       atoi@neg 000E                         _sprintf 3A56                         _tolower 393E  
        __end_of_Lcd_Write_Char 3CDC                         _strncmp 2F98            end_of_initialization 3D86  
                       floorf@e 0028                         floorf@m 0024                         floorf@u 002A  
                       floorf@x 001A                         fputc@fp 0003                   __Lmediumconst 0000  
                       fputs@fp 000C               __end_of_vfpfcnvrt 1D54                      efgtoa@mode 0081  
                    efgtoa@sign 007A                       _RCSTAbits 000FAB                ___aldiv@quotient 000B  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                       Lcd_Port@a 0001                      ??_vfprintf 0056  
         __end_of_configurarAdc 3E14                         strcpy@d 0009                         strlen@a 0003  
                       strcpy@s 0007                         strlen@s 0001                       _UART_init 3806  
                     Leer@com51 000A                     ___fladd@grs 0010                   ___xxtofl@sign 0009  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                   ___fldiv@grs 0014                     ___fldiv@rem 000D                       _SPI_Write 3DC6  
               ?_Lcd_Write_Char 0001               Lcd_Write_String@a 0005               Lcd_Write_String@i 0007  
                   ___flmul@grs 000E                  _UART_init$1621 0017                      main@buffer 00D6  
                     _TXSTAbits 000FAC                       _Lcd_Clear 3E14                       _Direccion 0154  
                __end_of___flge 2E9A                  __end_of___fleq 365C                     vfpfcnvrt@ap 003E  
                   vfpfcnvrt@ct 004C                     vfpfcnvrt@fp 003A                  __end_of___wmul 3D6E  
              _Lcd_Write_String 3B84                  __end_of_efgtoa 1434                  __end_of_floorf 272A  
                    ?_UART_init 000F                      floorf@F524 0100           __end_of_InicializarSD 3794  
             __size_of_SPI_Init 0016               __size_of_SPI_Read 0012                  __end_of_strcpy 39FA  
                __end_of_strlen 3D12             start_initialization 3D6E                     __end_of_pad 32CC  
                    ?_SPI_Write 0001               __size_of_Lcd_Init 0072               __size_of_Lcd_Port 005C  
         __end_of___fpclassifyf 2F98               __size_of_Escribir 0116                     vfprintf@fmt 0052  
  __size_of_dameTemperaturaLm35 00A0                      ?_Lcd_Clear 0001                        ??___flge 0022  
                      ??___fleq 0009                       _Respuesta 00FC                        ??___wmul 0005  
                      ??_efgtoa 0035                        ??_floorf 001E                __CFG_LPT1OSC$OFF 000000  
               Lcd_Write_Char@a 0004                 Lcd_Write_Char@y 0003                        ??_strcpy 0005  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                     ___fldiv@a 0005                       ___fldiv@b 0001                       ___flmul@a 0005  
                     ___flmul@b 0001                       ___flsub@a 001E                       ___flsub@b 001A  
                 __pcstackBANK0 0060               __size_of___xxtofl 01B4                        ?_Lcd_Cmd 0001  
                      ?_Comando 0002               UART_printf@cadena 0002                       _atoi$1272 0010  
                     _atoi$1273 0014                       _atoi$1274 0012                       __pnvBANK1 0154  
              ??_Lcd_Set_Cursor 0005                        ?___aldiv 0001                        ?___fladd 0001  
                      ?___fldiv 0001                        ?___awdiv 0001                        ?___flneg 0001  
                      ?___awmod 0001                        ?___flmul 0001                        ?___flsub 001A  
                      ?___fltol 0001                     ??_UART_init 0013               __size_of_vfprintf 0062  
                   __smallconst 0800                       _escribeSD 3390                        ?_isdigit 0001  
                      ?_isspace 0001                        ?_isupper 0001                     ??_SPI_Write 0001  
                      ?_sprintf 0058                        ?_tolower 0007                  __size_of_fputc 00CA  
                __size_of_fputs 0044                        ?_strncmp 0001                  __size_of_putch 0002  
               ___aldiv@divisor 0005                 escribeSD@cadena 000F                 ___aldiv@counter 0009  
                ___wmul@product 0005                        Lcd_Cmd@a 0003                        _PIR1bits 000F9E  
                   ??_Lcd_Clear 0004                __CFG_WDTPS$32768 000000                   ??_UART_printf 0004  
                     _vfpfcnvrt 18F4                        _SPI_Init 3DDC                        _SPI_Read 3DF2  
                    _ADCON0bits 000FC2               ___wmul@multiplier 0001                      ?_escribeSD 000F  
                UART_write@dato 0001                ??_Lcd_Write_Char 0002                    _isspace$1303 0007  
                      _Lcd_Init 3794                        _Lcd_Port 39FA                      vfpfcnvrt@c 004F  
                    vfpfcnvrt@f 0048                        _Escribir 2A6E        __end_of_Lcd_Write_String 3BC4  
              __size_of_Lcd_Cmd 0020                __size_of_Comando 0038                        __Hrparam 0000  
                 UART_init@BAUD 000F                      SPI_Write@x 0001                      vfprintf@ap 0054  
                      __Lrparam 0000                      vfprintf@fp 0050                __size_of___aldiv 010C  
              __size_of___fladd 04C0                __size_of___fldiv 039A                __size_of___awdiv 00C4  
              __size_of___flneg 0038                __size_of___awmod 00B0                __size_of___flmul 042A  
              __size_of___flsub 0046                __size_of___fltol 0106                      ?_vfpfcnvrt 003A  
            ___fpclassifyf@F463 00EE                      sprintf@fmt 005A                        ___xxtofl 272A  
          Comando@NumeroComando 0007             __end_of_UART_printf 3D48                __size_of_isdigit 0038  
           _dameTemperaturaLm35 365C                __size_of_isspace 0052                        __ptext10 3CDC  
                      __ptext11 3B40                        __ptext20 2D96                        __ptext12 313C  
                      __ptext21 35B2                        __ptext13 3E22                        __ptext30 3D12  
                      __ptext22 217E                        __ptext14 2518                        __ptext31 3DB0  
                      __ptext23 3502                        __ptext15 2E9A                        __ptext40 1D54  
                      __ptext32 344E                        __ptext24 32CC                        __ptext16 2C90  
                      __ptext41 3E04                        __ptext33 36FC                        __ptext25 28DE  
                      __ptext17 3AFA                        __ptext50 3D90                        __ptext42 3806  
                      __ptext34 2A6E                        __ptext26 3AA8                        __ptext18 1434  
                      __ptext51 39FA                        __ptext43 2B84                        __ptext35 3C6C  
                      __ptext27 3C34                        __ptext19 3BFC                        __ptext44 3DDC  
                      __ptext36 3DC6                        __ptext28 3D48                        __ptext45 3B84  
                      __ptext37 3DF2                        __ptext29 3390                        __ptext46 3CA4  
                      __ptext38 365C                        __ptext47 3876                        __ptext39 272A  
                      __ptext48 3794                        __ptext49 3E14                __size_of_isupper 0038  
              __size_of_sprintf 0052                __size_of_tolower 0060                      strcpy@dest 0001  
              __size_of_strncmp 00D6                   __size_of_Leer 00B4          __size_of_configurarAdc 0010  
                 __size_of_atoi 0190                   __size_of_main 00CE                        efgtoa@fp 002E  
          ?_dameTemperaturaLm35 001A                        efgtoa@ne 0076                        efgtoa@pp 0072  
                      efgtoa@ou 0060                        _vfprintf 38DC           __CFG_CPUDIV$OSC1_PLL2 000000  
               main@temperatura 00EA                     ??_escribeSD 0011                        isdigit@c 0001  
            Lcd_Write_Char@temp 0002                       sprintf@ap 009A                        isspace@c 0001  
                     strcpy@src 0003          __size_of_InicializarSD 0098                        isupper@c 0001  
                     strncmp@_l 0001                       strncmp@_r 0003           ??_dameTemperaturaLm35 001C  
dameTemperaturaLm35@temperatura 001A                     efgtoa@nmode 007E                     ??_vfpfcnvrt 0040  
                 _vfpfcnvrt$801 0046              Lcd_Set_Cursor@temp 0008                   _vfpfcnvrt$797 0044  
                   _UART_printf 3D12                   _configurarAdc 3E04                        sprintf@f 009C  
                      tolower@c 0007                        sprintf@s 0058                      Comando@CRC 0006  
        __size_of___fpclassifyf 00FE                        strncmp@l 0008                        strncmp@n 0005  
                      strncmp@r 000A                    ___aldiv@sign 000A                   ___fladd@signs 000D  
                    _UART_write 3DB0                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
